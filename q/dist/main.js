/*! For license information please see main.js.LICENSE.txt */
var lib;(()=>{var e={285:(e,t,n)=>{var r=n(907),s=n(319),a=(n(778),n(459)),i=n(253),o=n(613),l=n(911),u=n(672),c=n(768),h=n(936),d=n(656),p=n(411),f=n(476),m=n(487);e.exports.OW=r.Vector,s.Factor,s.Matrix,r.Sequence,a.StudentT,i.Misc,c.Numeric,o.Normal,o.StandardNormal,o.T,o.F,o.Kolmogorov,l.Regression,u.Correlation,h.Anova,d.Normality,p.Confidence,f.Power,e.exports.yR=m.Nonparametric},936:(e,t,n)=>{var r=n(907),s=n(613);Anova=function(){},Anova.oneway=function(e,t){for(var n={},a=[],i=0;i<e.groups();i++){for(var o=new r.Vector([]),l=e.group(i),u=0;u<l.length;u++)o.push(t.elements[l[u]]);a.push(o)}var c=new r.Vector([]),h=new r.Vector([]);for(o=new r.Vector([]),i=0;i<a.length;i++)c.push(a[i].mean()),h.push(a[i].length()),o.push(a[i].variance());n.tdf=e.groups()-1,n.tss=c.add(-t.mean()).pow(2).multiply(h).sum(),n.tms=n.tss/n.tdf,n.edf=e.length()-e.groups(),n.ess=o.multiply(h.add(-1)).sum(),n.ems=n.ess/n.edf,n.f=n.tms/n.ems;var d=new s.F(n.tdf,n.edf);return n.p=1-d.distr(Math.abs(n.f)),n},e.exports.Anova=Anova},411:(e,t,n)=>{var r=n(613);Confidence=function(){},Confidence.normal=function(e,t){var n=1-t,s=new r.T(e.length()-1);return[e.mean()-s.inverse(1-n/2)*e.sem(),e.mean()+s.inverse(1-n/2)*e.sem()]},Confidence.normalUpper=function(e,t){var n=1-t,s=new r.T(e.length()-1);return e.mean()+s.inverse(1-n)*e.sem()},Confidence.normalLower=function(e,t){var n=1-t,s=new r.T(e.length()-1);return e.mean()-s.inverse(1-n)*e.sem()},e.exports.Confidence=Confidence},672:(e,t,n)=>{var r=n(613);Correlation=function(){},Correlation.pearson=function(e,t){var n={},s=e.length(),a=e.mean(),i=t.mean();n.r=e.add(-a).multiply(t.add(-i)).sum()/Math.sqrt(e.add(-a).pow(2).sum()*t.add(-i).pow(2).sum()),n.t=n.r*Math.sqrt((s-2)/(1-Math.pow(n.r,2))),n.df=s-2;var o=new r.T(n.df);return n.p=2*(1-o.distr(Math.abs(n.t))),n},e.exports.Correlation=Correlation},613:(e,t,n)=>{var r=n(907),s=n(253),a=n(768);function i(){this.mean=0,this.variance=1}Normal=function(e,t){this.mean=e,this.variance=t},Normal.prototype._de=function(e){return 1/(Math.sqrt(this.variance)*Math.sqrt(2*Math.PI))*Math.exp(-Math.pow(e-this.mean,2)/(2*this.variance))},Normal.prototype._di=function(e){return.5*(1+s.Misc.erf((e-this.mean)/(Math.sqrt(this.variance)*Math.sqrt(2))))},Normal.prototype.dens=function(e){if(e instanceof r.Vector){result=new r.Vector([]);for(var t=0;t<e.length();++t)result.push(this._de(e.elements[t]));return result}return this._de(e)},Normal.prototype.distr=function(e){if(e instanceof r.Vector){result=new r.Vector([]);for(var t=0;t<e.length();++t)result.push(this._di(e.elements[t]));return result}return this._di(e)},Normal.prototype.inverse=function(e){var t,n,r=-.007784894002430293,s=-.3223964580411365,a=-2.400758277161838,i=-2.549732539343734,o=4.374664141464968,l=2.938163982698783,u=.007784695709041462,c=.3224671290700398,h=2.445134137142996,d=3.754408661907416;return(e<.02425?(((((r*(t=Math.sqrt(-2*Math.log(e)))+s)*t+a)*t+i)*t+o)*t+l)/((((u*t+c)*t+h)*t+d)*t+1):e<.97575?(((((-39.69683028665376*(n=(t=e-.5)*t)+220.9460984245205)*n-275.9285104469687)*n+138.357751867269)*n-30.66479806614716)*n+2.506628277459239)*t/(((((-54.47609879822406*n+161.5858368580409)*n-155.6989798598866)*n+66.80131188771972)*n-13.28068155288572)*n+1):-(((((r*(t=Math.sqrt(-2*Math.log(1-e)))+s)*t+a)*t+i)*t+o)*t+l)/((((u*t+c)*t+h)*t+d)*t+1))*this.variance+this.mean},i.prototype=new Normal,i.prototype.constructor=i,T=function(e){this.df=e},T.prototype._de=function(e){return s.Misc.gamma((this.df+1)/2)/(Math.sqrt(this.df*Math.PI)*s.Misc.gamma(this.df/2))*Math.pow(1+Math.pow(e,2)/this.df,-(this.df+1)/2)},T.prototype._di=function(e){return e<0?.5*s.Misc.rbeta(this.df/(Math.pow(e,2)+this.df),this.df/2,.5):1-.5*s.Misc.rbeta(this.df/(Math.pow(e,2)+this.df),this.df/2,.5)},T.prototype.dens=function(e){if(e instanceof r.Vector){result=new r.Vector([]);for(var t=0;t<e.length();++t)result.push(this._de(e.elements[t]));return result}return this._de(e)},T.prototype.distr=function(e){if(e instanceof r.Vector){result=new r.Vector([]);for(var t=0;t<e.length();++t)result.push(this._di(e.elements[t]));return result}return this._di(e)},T.prototype.inverse=function(e){return function(e,t){return a.Numeric.bisection((function(n){return e._di(n)-t}),-10.1,10)}(this,e)},Kolmogorov=function(){},Kolmogorov.prototype._di=function(e){var t,n=0,r=1;do{n+=t=Math.exp(-Math.pow(2*r-1,2)*Math.pow(Math.PI,2)/(8*Math.pow(e,2))),r++}while(Math.abs(t)>1e-12);return Math.sqrt(2*Math.PI)*n/e},Kolmogorov.prototype.distr=function(e){if(e instanceof r.Vector){result=new r.Vector([]);for(var t=0;t<e.length();++t)result.push(this._di(e.elements[t]));return result}return this._di(e)},Kolmogorov.prototype.inverse=function(e){return function(e,t){return a.Numeric.bisection((function(n){return e._di(n)-t}),0,1)}(this,e)},F=function(e,t){this.df1=e,this.df2=t},F.prototype._di=function(e){return s.Misc.rbeta(this.df1*e/(this.df1*e+this.df2),this.df1/2,this.df2/2)},F.prototype.distr=function(e){if(e instanceof r.Vector){result=new r.Vector([]);for(var t=0;t<e.length();++t)result.push(this._di(e.elements[t]));return result}return this._di(e)},e.exports.Normal=Normal,e.exports.StandardNormal=i,e.exports.T=T,e.exports.F=F,e.exports.Kolmogorov=Kolmogorov},319:e=>{Factor=function(e){this.levels=[],this.factors=[];for(var t=0;t<e.length;t++)-1!=(index=this.levels.indexOf(e[t]))?this.factors.push(index):(this.factors.push(this.levels.length),this.levels.push(e[t]))},Factor.prototype.group=function(e){for(var t=[],n=-1;-1!=(n=this.factors.indexOf(e,n+1));)t.push(n);return t},Factor.prototype.length=function(){return this.factors.length},Factor.prototype.groups=function(){return this.levels.length},e.exports.Factor=Factor},778:e=>{Matrix=function(e){this.elements=e},Matrix.prototype.rows=function(){return this.elements.length},Matrix.prototype.cols=function(){return this.elements[0].length},Matrix.prototype.dot=function(e){for(var t=[],n=0;n<this.rows();n++){t[n]=[];for(var r=0;r<e.cols();r++){for(var s=0,a=0;a<this.cols();a++)s+=this.elements[n][a]*e.elements[a][r];t[n][r]=s}}return new Matrix(t)},e.exports.Matrix=Matrix},253:(e,t,n)=>{var r=n(768);Misc=function(){},Misc.erf=function(e){var t,n=0,r=0;do{n+=t=Math.pow(-1,r)*Math.pow(e,2*r+1)/this.fac(r)/(2*r+1),r++}while(Math.abs(t)>1e-12);return 2*n/Math.sqrt(Math.PI)},Misc.gamma=function(e){var t=[.9999999999998099,676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,1.5056327351493116e-7];if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*this.gamma(1-e));for(var n=t[0],r=7+(e-=1)+.5,s=1;s<t.length;s++)n+=t[s]/(e+s);return Math.sqrt(2*Math.PI)*Math.pow(r,e+.5)*Math.exp(-r)*n},Misc.beta=function(e,t){return this.gamma(e)*this.gamma(t)/this.gamma(e+t)},Misc.ibeta=function(e,t,n){return r.Numeric.adaptiveSimpson((function(e){return Math.pow(e,t-1)*Math.pow(1-e,n-1)}),0,e,1e-12,10)},Misc.rbeta=function(e,t,n){return this.ibeta(e,t,n)/this.beta(t,n)},Misc.fac=function(e){for(var t=1,n=2;n<=e;n++)t*=n;return t},e.exports.Misc=Misc},487:(e,t,n)=>{var r=n(907),s=n(613);Nonparametric=function(){},Nonparametric.kolmogorovSmirnov=function(e,t){var n=new r.Vector(e.elements.concat(t.elements)).sort(),a=e.ecdf(n),i=t.ecdf(n).subtract(a).abs().max(),o=e.length()*t.length()/(e.length()+t.length()),l=Math.sqrt(o)*i;return{d:i,ks:l,p:1-(new s.Kolmogorov).distr(l)}},e.exports.Nonparametric=Nonparametric},656:(e,t,n)=>{n(778);var r=n(907),s=n(613);Normality=function(){},Normality.shapiroWilk=function(e){result={};for(var t=e.sort(),n=(e.mean(),e.length()),a=1/Math.sqrt(n),i=new s.StandardNormal,o=new r.Vector([]),l=1;l<=n;l++)o.push(i.inverse((l-3/8)/(n+1/4)));var u,c=o.dot(o),h=o.multiply(1/Math.sqrt(c)),d=-2.706056*Math.pow(a,5)+4.434685*Math.pow(a,4)-2.07119*Math.pow(a,3)-.147981*Math.pow(a,2)+.221157*a+h.elements[n-1],p=-3.582633*Math.pow(a,5)+5.682633*Math.pow(a,4)-1.752461*Math.pow(a,3)-.293762*Math.pow(a,2)+.042981*a+h.elements[n-2];u=n>5?(c-2*Math.pow(o.elements[n-1],2)-2*Math.pow(o.elements[n-2],2))/(1-2*Math.pow(d,2)-2*Math.pow(p,2)):(c-2*Math.pow(o.elements[n-1],2))/(1-2*Math.pow(d,2));var f,m,g,b=new r.Vector([]);if(n>5){for(b.push(-d),b.push(-p),l=2;l<n-2;l++)b.push(o.elements[l]*Math.pow(u,-.5));b.push(p),b.push(d)}else{for(b.push(-d),l=1;l<n-1;l++)b.push(o.elements[l]*Math.pow(u,-.5));b.push(d)}if(result.w=Math.pow(b.multiply(t).sum(),2)/t.ss(),n<12){var x=.459*n-2.273;f=-Math.log(x-Math.log(1-result.w)),m=-6714e-7*Math.pow(n,3)+.025054*Math.pow(n,2)-.39978*n+.544,g=Math.exp(-.0020322*Math.pow(n,3)+.062767*Math.pow(n,2)-.77857*n+1.3822)}else a=Math.log(n),f=Math.log(1-result.w),m=.0038915*Math.pow(a,3)-.083751*Math.pow(a,2)-.31082*a-1.5851,g=Math.exp(.0030302*Math.pow(a,2)-.082676*a-.4803);var y=(f-m)/g,v=new s.StandardNormal;return result.p=1-v.distr(y),result},e.exports.Normality=Normality},768:e=>{Numeric=function(){},Numeric._adaptive=function(e,t,n,r,s,a,i,o,l){var u=(t+n)/2,c=n-t,h=(u+n)/2,d=e((t+u)/2),p=e(h),f=c/12*(a+4*d+o),m=c/12*(o+4*p+i),g=f+m;return l<=0||Math.abs(g-s)<=15*r?g+(g-s)/15:this._adaptive(e,t,u,r/2,f,a,o,d,l-1)+this._adaptive(e,u,n,r/2,m,o,i,p,l-1)},Numeric.adaptiveSimpson=function(e,t,n,r,s){var a=(t+n)/2,i=n-t,o=e(t),l=e(n),u=e(a),c=i/6*(o+4*u+l);return this._adaptive(e,t,n,r,c,o,l,u,s)},Numeric.bisection=function(e,t,n,r){for(r=void 0!==r?r:1e-9;Math.abs(t-n)>r;)e(t)*e((t+n)/2)<0?n=(t+n)/2:t=(t+n)/2;return(t+n)/2},Numeric.secant=function(e,t,n,r){r=void 0!==r?r:1e-9;for(var s=[t,n];Math.abs(s[0]-s[1])>r;)s.push((s[0]*e(s[1])-s[1]*e(s[0]))/(e(s[1])-e(s[0]))),s.shift();return(s[0]+s[1])/2},e.exports.Numeric=Numeric},476:(e,t,n)=>{var r=n(613);Power=function(){},Power.sampleSize=function(e,t,n,s){var a=new r.Normal(0,1);return 2*Math.pow(a.inverse(1-e/2)+a.inverse(t),2)*Math.pow(n,2)/Math.pow(s,2)},e.exports.Power=Power},911:(e,t,n)=>{var r=n(613);Regression=function(){},Regression.linear=function(e,t){var n={};n.n=e.length();var s=e.mean(),a=t.mean(),i=e.add(-s),o=t.add(-a),l=i.pow(2).sum(),u=o.pow(2).sum(),c=i.multiply(o).sum();n.slope=c/l,n.intercept=a-n.slope*s;var h=t.add(e.multiply(n.slope).add(n.intercept).multiply(-1)).pow(2).sum();n.rse=Math.sqrt(h/(n.n-2));var d=new r.T(n.n-2);return n.slope_se=n.rse/Math.sqrt(l),n.slope_t=n.slope/n.slope_se,n.slope_p=2*(1-d.distr(Math.abs(n.slope_t))),n.intercept_se=n.rse/Math.sqrt(l)/Math.sqrt(n.n)*Math.sqrt(e.pow(2).sum()),n.intercept_t=n.intercept/n.intercept_se,n.intercept_p=2*(1-d.distr(Math.abs(n.intercept_t))),n.rs=Math.pow(c,2)/(l*u),n},e.exports.Regression=Regression},459:(e,t,n)=>{var r=n(907),s=n(613);StudentT=function(){},StudentT.test=function(e,t){return t instanceof r.Vector?this._twosample(e,t):this._onesample(e,t)},StudentT._twosample=function(e,t){var n={};n.se=Math.sqrt(e.variance()/e.length()+t.variance()/t.length()),n.t=(e.mean()-t.mean())/n.se,n.df=e.length()+t.length()-2;var r=new s.T(n.df);return n.p=2*(1-r.distr(Math.abs(n.t))),n},StudentT._onesample=function(e,t){var n={};n.sample=e,n.mu=t,n.se=Math.sqrt(n.sample.variance())/Math.sqrt(n.sample.length()),n.t=(n.sample.mean()-n.mu)/n.se,n.df=n.sample.length()-1;var r=new s.T(n.df);return n.p=2*(1-r.distr(Math.abs(n.t))),n},e.exports.StudentT=StudentT},907:e=>{function t(e,t,n){this.elements=[];for(var r=e;r<=t;r+=n)this.elements.push(r)}Vector=function(e){this.elements=e},Vector.prototype.push=function(e){this.elements.push(e)},Vector.prototype.map=function(e){return new Vector(this.elements.map(e))},Vector.prototype.length=function(){return this.elements.length},Vector.prototype.concat=function(e){return new Vector(this.elements.slice(0).concat(e.elements.slice(0)))},Vector.prototype.abs=function(){for(var e=[],t=0;t<this.elements.length;t++)e.push(Math.abs(this.elements[t]));return new Vector(e)},Vector.prototype.dot=function(e){for(var t=0,n=0;n<this.length();n++)t+=this.elements[n]*e.elements[n];return t},Vector.prototype.sum=function(){for(var e=0,t=0,n=this.elements.length;t<n;++t)e+=this.elements[t];return e},Vector.prototype.log=function(){for(var e=new Vector(this.elements.slice(0)),t=0,n=this.elements.length;t<n;++t)e.elements[t]=Math.log(e.elements[t]);return e},Vector.prototype.add=function(e){var t=new Vector(this.elements.slice(0));if(e instanceof Vector)for(var n=0,r=t.elements.length;n<r;++n)t.elements[n]+=e.elements[n];else for(n=0,r=t.elements.length;n<r;++n)t.elements[n]+=e;return t},Vector.prototype.subtract=function(e){return this.add(e.multiply(-1))},Vector.prototype.multiply=function(e){var t=new Vector(this.elements.slice(0));if(e instanceof Vector)for(var n=0,r=t.elements.length;n<r;++n)t.elements[n]=t.elements[n]*e.elements[n];else for(n=0,r=t.elements.length;n<r;++n)t.elements[n]=t.elements[n]*e;return t},Vector.prototype.pow=function(e){var t=new Vector(this.elements.slice(0));if(e instanceof Vector)for(var n=0,r=t.elements.length;n<r;++n)t.elements[n]=Math.pow(t.elements[n],e.elements[n]);else for(n=0,r=t.elements.length;n<r;++n)t.elements[n]=Math.pow(t.elements[n],e);return t},Vector.prototype.mean=function(){for(var e=0,t=0,n=this.elements.length;t<n;++t)e+=this.elements[t];return e/this.elements.length},Vector.prototype.geomean=function(){return Math.exp(this.log().sum()/this.elements.length)},Vector.prototype.sortElements=function(){for(var e,t,n=this.elements.slice(0),r=0;r<n.length;++r){for(t=n[r],e=r-1;e>=0&&n[e]>t;--e)n[e+1]=n[e];n[e+1]=t}return n},Vector.prototype._ecdf=function(e){for(var t=this.sortElements(),n=0,r=0;r<t.length&&t[r]<=e;r++)n++;return n/t.length},Vector.prototype.ecdf=function(e){if(e instanceof Vector){for(var t=new Vector([]),n=0;n<e.length();n++)t.push(this._ecdf(e.elements[n]));return t}return this._ecdf(e)},Vector.prototype.sort=function(){return new Vector(this.sortElements())},Vector.prototype.min=function(){return this.sortElements()[0]},Vector.prototype.max=function(){return this.sortElements().pop()},Vector.prototype.toString=function(){return"["+this.elements.join(", ")+"]"},Vector.prototype.variance=function(){return this.ss()/(this.elements.length-1)},Vector.prototype.biasedVariance=function(){return this.ss()/this.elements.length},Vector.prototype.sd=function(){return Math.sqrt(this.variance())},Vector.prototype.uncorrectedSd=function(){return Math.sqrt(this.biasedVariance())},Vector.prototype.sem=function(){return this.sd()/Math.sqrt(this.elements.length)},Vector.prototype.ss=function(){for(var e=this.mean(),t=0,n=0,r=this.elements.length;n<r;++n)t+=Math.pow(this.elements[n]-e,2);return t},Vector.prototype.res=function(){return this.add(-this.mean())},Vector.prototype.kurtosis=function(){return this.res().pow(4).mean()/Math.pow(this.res().pow(2).mean(),2)},Vector.prototype.skewness=function(){return this.res().pow(3).mean()/Math.pow(this.res().pow(2).mean(),1.5)},t.prototype=new Vector,t.prototype.constructor=t,e.exports.Vector=Vector,e.exports.Sequence=t},162:function(e){var t;e.exports=(t=function(e,t){var n=Array.prototype.concat,r=Array.prototype.slice,s=Object.prototype.toString;function a(t,n){var r=t>n?t:n;return e.pow(10,17-~~(e.log(r>0?r:-r)*e.LOG10E))}var i=Array.isArray||function(e){return"[object Array]"===s.call(e)};function o(e){return"[object Function]"===s.call(e)}function l(e){return"number"==typeof e&&e-e==0}function u(){return new u._init(arguments)}function c(){return 0}function h(){return 1}function d(e,t){return e===t?1:0}u.fn=u.prototype,u._init=function(e){if(i(e[0]))if(i(e[0][0])){o(e[1])&&(e[0]=u.map(e[0],e[1]));for(var t=0;t<e[0].length;t++)this[t]=e[0][t];this.length=e[0].length}else this[0]=o(e[1])?u.map(e[0],e[1]):e[0],this.length=1;else if(l(e[0]))this[0]=u.seq.apply(null,e),this.length=1;else{if(e[0]instanceof u)return u(e[0].toArray());this[0]=[],this.length=1}return this},u._init.prototype=u.prototype,u._init.constructor=u,u.utils={calcRdx:a,isArray:i,isFunction:o,isNumber:l,toVector:function(e){return n.apply([],e)}},u._random_fn=e.random,u.setRandom=function(e){if("function"!=typeof e)throw new TypeError("fn is not a function");u._random_fn=e},u.extend=function(e){var t,n;if(1===arguments.length){for(n in e)u[n]=e[n];return this}for(t=1;t<arguments.length;t++)for(n in arguments[t])e[n]=arguments[t][n];return e},u.rows=function(e){return e.length||1},u.cols=function(e){return e[0].length||1},u.dimensions=function(e){return{rows:u.rows(e),cols:u.cols(e)}},u.row=function(e,t){return i(t)?t.map((function(t){return u.row(e,t)})):e[t]},u.rowa=function(e,t){return u.row(e,t)},u.col=function(e,t){if(i(t)){var n=u.arange(e.length).map((function(){return new Array(t.length)}));return t.forEach((function(t,r){u.arange(e.length).forEach((function(s){n[s][r]=e[s][t]}))})),n}for(var r=new Array(e.length),s=0;s<e.length;s++)r[s]=[e[s][t]];return r},u.cola=function(e,t){return u.col(e,t).map((function(e){return e[0]}))},u.diag=function(e){for(var t=u.rows(e),n=new Array(t),r=0;r<t;r++)n[r]=[e[r][r]];return n},u.antidiag=function(e){for(var t=u.rows(e)-1,n=new Array(t),r=0;t>=0;t--,r++)n[r]=[e[r][t]];return n},u.transpose=function(e){var t,n,r,s,a,o=[];for(i(e[0])||(e=[e]),n=e.length,r=e[0].length,a=0;a<r;a++){for(t=new Array(n),s=0;s<n;s++)t[s]=e[s][a];o.push(t)}return 1===o.length?o[0]:o},u.map=function(e,t,n){var r,s,a,o,l;for(i(e[0])||(e=[e]),s=e.length,a=e[0].length,o=n?e:new Array(s),r=0;r<s;r++)for(o[r]||(o[r]=new Array(a)),l=0;l<a;l++)o[r][l]=t(e[r][l],r,l);return 1===o.length?o[0]:o},u.cumreduce=function(e,t,n){var r,s,a,o,l;for(i(e[0])||(e=[e]),s=e.length,a=e[0].length,o=n?e:new Array(s),r=0;r<s;r++)for(o[r]||(o[r]=new Array(a)),a>0&&(o[r][0]=e[r][0]),l=1;l<a;l++)o[r][l]=t(o[r][l-1],e[r][l]);return 1===o.length?o[0]:o},u.alter=function(e,t){return u.map(e,t,!0)},u.create=function(e,t,n){var r,s,a=new Array(e);for(o(t)&&(n=t,t=e),r=0;r<e;r++)for(a[r]=new Array(t),s=0;s<t;s++)a[r][s]=n(r,s);return a},u.zeros=function(e,t){return l(t)||(t=e),u.create(e,t,c)},u.ones=function(e,t){return l(t)||(t=e),u.create(e,t,h)},u.rand=function(e,t){return l(t)||(t=e),u.create(e,t,u._random_fn)},u.identity=function(e,t){return l(t)||(t=e),u.create(e,t,d)},u.symmetric=function(e){var t,n,r=e.length;if(e.length!==e[0].length)return!1;for(t=0;t<r;t++)for(n=0;n<r;n++)if(e[n][t]!==e[t][n])return!1;return!0},u.clear=function(e){return u.alter(e,c)},u.seq=function(e,t,n,r){o(r)||(r=!1);var s,i=[],l=a(e,t),u=(t*l-e*l)/((n-1)*l),c=e;for(s=0;c<=t&&s<n;c=(e*l+u*l*++s)/l)i.push(r?r(c,s):c);return i},u.arange=function(e,n,r){var s,a=[];if(r=r||1,n===t&&(n=e,e=0),e===n||0===r)return[];if(e<n&&r<0)return[];if(e>n&&r>0)return[];if(r>0)for(s=e;s<n;s+=r)a.push(s);else for(s=e;s>n;s+=r)a.push(s);return a},u.slice=function(){function e(e,n,r,s){var a,i=[],o=e.length;if(n===t&&r===t&&s===t)return u.copy(e);if(s=s||1,(n=(n=n||0)>=0?n:o+n)===(r=(r=r||e.length)>=0?r:o+r)||0===s)return[];if(n<r&&s<0)return[];if(n>r&&s>0)return[];if(s>0)for(a=n;a<r;a+=s)i.push(e[a]);else for(a=n;a>r;a+=s)i.push(e[a]);return i}return function(t,n){var r,s;return l((n=n||{}).row)?l(n.col)?t[n.row][n.col]:e(u.rowa(t,n.row),(r=n.col||{}).start,r.end,r.step):l(n.col)?e(u.cola(t,n.col),(s=n.row||{}).start,s.end,s.step):(s=n.row||{},r=n.col||{},e(t,s.start,s.end,s.step).map((function(t){return e(t,r.start,r.end,r.step)})))}}(),u.sliceAssign=function(n,r,s){var a,i;if(l(r.row)){if(l(r.col))return n[r.row][r.col]=s;r.col=r.col||{},r.col.start=r.col.start||0,r.col.end=r.col.end||n[0].length,r.col.step=r.col.step||1,a=u.arange(r.col.start,e.min(n.length,r.col.end),r.col.step);var o=r.row;return a.forEach((function(e,t){n[o][e]=s[t]})),n}if(l(r.col)){r.row=r.row||{},r.row.start=r.row.start||0,r.row.end=r.row.end||n.length,r.row.step=r.row.step||1,i=u.arange(r.row.start,e.min(n[0].length,r.row.end),r.row.step);var c=r.col;return i.forEach((function(e,t){n[e][c]=s[t]})),n}return s[0].length===t&&(s=[s]),r.row.start=r.row.start||0,r.row.end=r.row.end||n.length,r.row.step=r.row.step||1,r.col.start=r.col.start||0,r.col.end=r.col.end||n[0].length,r.col.step=r.col.step||1,i=u.arange(r.row.start,e.min(n.length,r.row.end),r.row.step),a=u.arange(r.col.start,e.min(n[0].length,r.col.end),r.col.step),i.forEach((function(e,t){a.forEach((function(r,a){n[e][r]=s[t][a]}))})),n},u.diagonal=function(e){var t=u.zeros(e.length,e.length);return e.forEach((function(e,n){t[n][n]=e})),t},u.copy=function(e){return e.map((function(e){return l(e)?e:e.map((function(e){return e}))}))};var p=u.prototype;return p.length=0,p.push=Array.prototype.push,p.sort=Array.prototype.sort,p.splice=Array.prototype.splice,p.slice=Array.prototype.slice,p.toArray=function(){return this.length>1?r.call(this):r.call(this)[0]},p.map=function(e,t){return u(u.map(this,e,t))},p.cumreduce=function(e,t){return u(u.cumreduce(this,e,t))},p.alter=function(e){return u.alter(this,e),this},function(e){for(var t=0;t<e.length;t++)!function(e){p[e]=function(t){var n,r=this;return t?(setTimeout((function(){t.call(r,p[e].call(r))})),this):(n=u[e](this),i(n)?u(n):n)}}(e[t])}("transpose clear symmetric rows cols dimensions diag antidiag".split(" ")),function(e){for(var t=0;t<e.length;t++)!function(e){p[e]=function(t,n){var r=this;return n?(setTimeout((function(){n.call(r,p[e].call(r,t))})),this):u(u[e](this,t))}}(e[t])}("row col".split(" ")),function(e){for(var t=0;t<e.length;t++)!function(e){p[e]=function(){return u(u[e].apply(null,arguments))}}(e[t])}("create zeros ones rand identity".split(" ")),u}(Math),function(e,t){var n=e.utils.isFunction;function r(e,t){return e-t}function s(e,n,r){return t.max(n,t.min(e,r))}e.sum=function(e){for(var t=0,n=e.length;--n>=0;)t+=e[n];return t},e.sumsqrd=function(e){for(var t=0,n=e.length;--n>=0;)t+=e[n]*e[n];return t},e.sumsqerr=function(t){for(var n,r=e.mean(t),s=0,a=t.length;--a>=0;)s+=(n=t[a]-r)*n;return s},e.sumrow=function(e){for(var t=0,n=e.length;--n>=0;)t+=e[n];return t},e.product=function(e){for(var t=1,n=e.length;--n>=0;)t*=e[n];return t},e.min=function(e){for(var t=e[0],n=0;++n<e.length;)e[n]<t&&(t=e[n]);return t},e.max=function(e){for(var t=e[0],n=0;++n<e.length;)e[n]>t&&(t=e[n]);return t},e.unique=function(e){for(var t={},n=[],r=0;r<e.length;r++)t[e[r]]||(t[e[r]]=!0,n.push(e[r]));return n},e.mean=function(t){return e.sum(t)/t.length},e.meansqerr=function(t){return e.sumsqerr(t)/t.length},e.geomean=function(n){var r=n.map(t.log),s=e.mean(r);return t.exp(s)},e.median=function(e){var t=e.length,n=e.slice().sort(r);return 1&t?n[t/2|0]:(n[t/2-1]+n[t/2])/2},e.cumsum=function(t){return e.cumreduce(t,(function(e,t){return e+t}))},e.cumprod=function(t){return e.cumreduce(t,(function(e,t){return e*t}))},e.diff=function(e){var t,n=[],r=e.length;for(t=1;t<r;t++)n.push(e[t]-e[t-1]);return n},e.rank=function(e){var t,n=[],s={};for(t=0;t<e.length;t++)s[l=e[t]]?s[l]++:(s[l]=1,n.push(l));var a=n.sort(r),i={},o=1;for(t=0;t<a.length;t++){var l,u=s[l=a[t]],c=(o+(o+u-1))/2;i[l]=c,o+=u}return e.map((function(e){return i[e]}))},e.mode=function(e){var t,n=e.length,s=e.slice().sort(r),a=1,i=0,o=0,l=[];for(t=0;t<n;t++)s[t]===s[t+1]?a++:(a>i?(l=[s[t]],i=a,o=0):a===i&&(l.push(s[t]),o++),a=1);return 0===o?l[0]:l},e.range=function(t){return e.max(t)-e.min(t)},e.variance=function(t,n){return e.sumsqerr(t)/(t.length-(n?1:0))},e.pooledvariance=function(t){return t.reduce((function(t,n){return t+e.sumsqerr(n)}),0)/(t.reduce((function(e,t){return e+t.length}),0)-t.length)},e.deviation=function(t){for(var n=e.mean(t),r=t.length,s=new Array(r),a=0;a<r;a++)s[a]=t[a]-n;return s},e.stdev=function(n,r){return t.sqrt(e.variance(n,r))},e.pooledstdev=function(n){return t.sqrt(e.pooledvariance(n))},e.meandev=function(n){for(var r=e.mean(n),s=[],a=n.length-1;a>=0;a--)s.push(t.abs(n[a]-r));return e.mean(s)},e.meddev=function(n){for(var r=e.median(n),s=[],a=n.length-1;a>=0;a--)s.push(t.abs(n[a]-r));return e.median(s)},e.coeffvar=function(t){return e.stdev(t)/e.mean(t)},e.quartiles=function(e){var n=e.length,s=e.slice().sort(r);return[s[t.round(n/4)-1],s[t.round(n/2)-1],s[t.round(3*n/4)-1]]},e.quantiles=function(e,n,a,i){var o,l,u,c,h,d=e.slice().sort(r),p=[n.length],f=e.length;for(void 0===a&&(a=3/8),void 0===i&&(i=3/8),o=0;o<n.length;o++)u=f*(l=n[o])+(a+l*(1-a-i)),c=t.floor(s(u,1,f-1)),h=s(u-c,0,1),p[o]=(1-h)*d[c-1]+h*d[c];return p},e.percentile=function(e,t,n){var s=e.slice().sort(r),a=t*(s.length+(n?1:-1))+(n?0:1),i=parseInt(a),o=a-i;return i+1<s.length?s[i-1]+o*(s[i]-s[i-1]):s[i-1]},e.percentileOfScore=function(e,t,n){var r,s,a=0,i=e.length,o=!1;for("strict"===n&&(o=!0),s=0;s<i;s++)r=e[s],(o&&r<t||!o&&r<=t)&&a++;return a/i},e.histogram=function(n,r){r=r||4;var s,a=e.min(n),i=(e.max(n)-a)/r,o=n.length,l=[];for(s=0;s<r;s++)l[s]=0;for(s=0;s<o;s++)l[t.min(t.floor((n[s]-a)/i),r-1)]+=1;return l},e.covariance=function(t,n){var r,s=e.mean(t),a=e.mean(n),i=t.length,o=new Array(i);for(r=0;r<i;r++)o[r]=(t[r]-s)*(n[r]-a);return e.sum(o)/(i-1)},e.corrcoeff=function(t,n){return e.covariance(t,n)/e.stdev(t,1)/e.stdev(n,1)},e.spearmancoeff=function(t,n){return t=e.rank(t),n=e.rank(n),e.corrcoeff(t,n)},e.stanMoment=function(n,r){for(var s=e.mean(n),a=e.stdev(n),i=n.length,o=0,l=0;l<i;l++)o+=t.pow((n[l]-s)/a,r);return o/n.length},e.skewness=function(t){return e.stanMoment(t,3)},e.kurtosis=function(t){return e.stanMoment(t,4)-3};var a=e.prototype;!function(t){for(var r=0;r<t.length;r++)!function(t){a[t]=function(r,s){var i=[],o=0,l=this;if(n(r)&&(s=r,r=!1),s)return setTimeout((function(){s.call(l,a[t].call(l,r))})),this;if(this.length>1){for(l=!0===r?this:this.transpose();o<l.length;o++)i[o]=e[t](l[o]);return i}return e[t](this[0],r)}}(t[r])}("cumsum cumprod".split(" ")),function(t){for(var r=0;r<t.length;r++)!function(t){a[t]=function(r,s){var i=[],o=0,l=this;if(n(r)&&(s=r,r=!1),s)return setTimeout((function(){s.call(l,a[t].call(l,r))})),this;if(this.length>1){for("sumrow"!==t&&(l=!0===r?this:this.transpose());o<l.length;o++)i[o]=e[t](l[o]);return!0===r?e[t](e.utils.toVector(i)):i}return e[t](this[0],r)}}(t[r])}("sum sumsqrd sumsqerr sumrow product min max unique mean meansqerr geomean median diff rank mode range variance deviation stdev meandev meddev coeffvar quartiles histogram skewness kurtosis".split(" ")),function(t){for(var r=0;r<t.length;r++)!function(t){a[t]=function(){var r,s=[],i=0,o=this,l=Array.prototype.slice.call(arguments);if(n(l[l.length-1])){r=l[l.length-1];var u=l.slice(0,l.length-1);return setTimeout((function(){r.call(o,a[t].apply(o,u))})),this}r=void 0;var c=function(n){return e[t].apply(o,[n].concat(l))};if(this.length>1){for(o=o.transpose();i<o.length;i++)s[i]=c(o[i]);return s}return c(this[0])}}(t[r])}("quantiles percentileOfScore".split(" "))}(t,Math),function(e,t){e.gammaln=function(e){var n,r,s,a=0,i=[76.18009172947146,-86.50532032941678,24.01409824083091,-1.231739572450155,.001208650973866179,-5395239384953e-18],o=1.000000000190015;for(s=(r=n=e)+5.5,s-=(n+.5)*t.log(s);a<6;a++)o+=i[a]/++r;return t.log(2.5066282746310007*o/n)-s},e.loggam=function(e){var n,r,s,a,i,o,l,u=[.08333333333333333,-.002777777777777778,.0007936507936507937,-.0005952380952380952,.0008417508417508418,-.001917526917526918,.00641025641025641,-.02955065359477124,.1796443723688307,-1.3924322169059];if(n=e,l=0,1==e||2==e)return 0;for(e<=7&&(n=e+(l=t.floor(7-e))),r=1/(n*n),s=2*t.PI,i=u[9],o=8;o>=0;o--)i*=r,i+=u[o];if(a=i/n+.5*t.log(s)+(n-.5)*t.log(n)-n,e<=7)for(o=1;o<=l;o++)a-=t.log(n-1),n-=1;return a},e.gammafn=function(e){var n,r,s,a,i=[-1.716185138865495,24.76565080557592,-379.80425647094563,629.3311553128184,866.9662027904133,-31451.272968848367,-36144.413418691176,66456.14382024054],o=[-30.8402300119739,315.35062697960416,-1015.1563674902192,-3107.771671572311,22538.11842098015,4755.846277527881,-134659.9598649693,-115132.2596755535],l=!1,u=0,c=0,h=0,d=e;if(e>171.6243769536076)return 1/0;if(d<=0){if(!(a=d%1+36e-17))return 1/0;l=(1&d?-1:1)*t.PI/t.sin(t.PI*a),d=1-d}for(s=d,r=d<1?d++:(d-=u=(0|d)-1)-1,n=0;n<8;++n)h=(h+i[n])*r,c=c*r+o[n];if(a=h/c+1,s<d)a/=s;else if(s>d)for(n=0;n<u;++n)a*=d,d++;return l&&(a=l/a),a},e.gammap=function(t,n){return e.lowRegGamma(t,n)*e.gammafn(t)},e.lowRegGamma=function(n,r){var s,a=e.gammaln(n),i=n,o=1/n,l=o,u=r+1-n,c=1/1e-30,h=1/u,d=h,p=1,f=-~(8.5*t.log(n>=1?n:1/n)+.4*n+17);if(r<0||n<=0)return NaN;if(r<n+1){for(;p<=f;p++)o+=l*=r/++i;return o*t.exp(-r+n*t.log(r)-a)}for(;p<=f;p++)d*=(h=1/(h=(s=-p*(p-n))*h+(u+=2)))*(c=u+s/c);return 1-d*t.exp(-r+n*t.log(r)-a)},e.factorialln=function(t){return t<0?NaN:e.gammaln(t+1)},e.factorial=function(t){return t<0?NaN:e.gammafn(t+1)},e.combination=function(n,r){return n>170||r>170?t.exp(e.combinationln(n,r)):e.factorial(n)/e.factorial(r)/e.factorial(n-r)},e.combinationln=function(t,n){return e.factorialln(t)-e.factorialln(n)-e.factorialln(t-n)},e.permutation=function(t,n){return e.factorial(t)/e.factorial(t-n)},e.betafn=function(n,r){if(!(n<=0||r<=0))return n+r>170?t.exp(e.betaln(n,r)):e.gammafn(n)*e.gammafn(r)/e.gammafn(n+r)},e.betaln=function(t,n){return e.gammaln(t)+e.gammaln(n)-e.gammaln(t+n)},e.betacf=function(e,n,r){var s,a,i,o,l=1e-30,u=1,c=n+r,h=n+1,d=n-1,p=1,f=1-c*e/h;for(t.abs(f)<l&&(f=l),o=f=1/f;u<=100&&(f=1+(a=u*(r-u)*e/((d+(s=2*u))*(n+s)))*f,t.abs(f)<l&&(f=l),p=1+a/p,t.abs(p)<l&&(p=l),o*=(f=1/f)*p,f=1+(a=-(n+u)*(c+u)*e/((n+s)*(h+s)))*f,t.abs(f)<l&&(f=l),p=1+a/p,t.abs(p)<l&&(p=l),o*=i=(f=1/f)*p,!(t.abs(i-1)<3e-7));u++);return o},e.gammapinv=function(n,r){var s,a,i,o,l,u,c=0,h=r-1,d=e.gammaln(r);if(n>=1)return t.max(100,r+100*t.sqrt(r));if(n<=0)return 0;for(r>1?(l=t.log(h),u=t.exp(h*(l-1)-d),o=n<.5?n:1-n,s=(2.30753+.27061*(a=t.sqrt(-2*t.log(o))))/(1+a*(.99229+.04481*a))-a,n<.5&&(s=-s),s=t.max(.001,r*t.pow(1-1/(9*r)-s/(3*t.sqrt(r)),3))):s=n<(a=1-r*(.253+.12*r))?t.pow(n/a,1/r):1-t.log(1-(n-a)/(1-a));c<12;c++){if(s<=0)return 0;if((s-=a=(i=(e.lowRegGamma(r,s)-n)/(a=r>1?u*t.exp(-(s-h)+h*(t.log(s)-l)):t.exp(-s+h*t.log(s)-d)))/(1-.5*t.min(1,i*((r-1)/s-1))))<=0&&(s=.5*(s+a)),t.abs(a)<1e-8*s)break}return s},e.erf=function(e){var n,r,s,a,i=[-1.3026537197817094,.6419697923564902,.019476473204185836,-.00956151478680863,-.000946595344482036,.000366839497852761,42523324806907e-18,-20278578112534e-18,-1624290004647e-18,130365583558e-17,1.5626441722e-8,-8.5238095915e-8,6.529054439e-9,5.059343495e-9,-9.91364156e-10,-2.27365122e-10,96467911e-18,2394038e-18,-6886027e-18,894487e-18,313092e-18,-112708e-18,381e-18,7106e-18,-1523e-18,-94e-18,121e-18,-28e-18],o=i.length-1,l=!1,u=0,c=0;for(e<0&&(e=-e,l=!0),r=4*(n=2/(2+e))-2;o>0;o--)s=u,u=r*u-c+i[o],c=s;return a=n*t.exp(-e*e+.5*(i[0]+r*u)-c),l?a-1:1-a},e.erfc=function(t){return 1-e.erf(t)},e.erfcinv=function(n){var r,s,a,i,o=0;if(n>=2)return-100;if(n<=0)return 100;for(i=n<1?n:2-n,r=-.70711*((2.30753+.27061*(a=t.sqrt(-2*t.log(i/2))))/(1+a*(.99229+.04481*a))-a);o<2;o++)r+=(s=e.erfc(r)-i)/(1.1283791670955126*t.exp(-r*r)-r*s);return n<1?r:-r},e.ibetainv=function(n,r,s){var a,i,o,l,u,c,h,d,p,f,m=r-1,g=s-1,b=0;if(n<=0)return 0;if(n>=1)return 1;for(r>=1&&s>=1?(o=n<.5?n:1-n,c=(2.30753+.27061*(l=t.sqrt(-2*t.log(o))))/(1+l*(.99229+.04481*l))-l,n<.5&&(c=-c),h=(c*c-3)/6,d=2/(1/(2*r-1)+1/(2*s-1)),p=c*t.sqrt(h+d)/d-(1/(2*s-1)-1/(2*r-1))*(h+5/6-2/(3*d)),c=r/(r+s*t.exp(2*p))):(a=t.log(r/(r+s)),i=t.log(s/(r+s)),c=n<(l=t.exp(r*a)/r)/(p=l+(u=t.exp(s*i)/s))?t.pow(r*p*n,1/r):1-t.pow(s*p*(1-n),1/s)),f=-e.gammaln(r)-e.gammaln(s)+e.gammaln(r+s);b<10;b++){if(0===c||1===c)return c;if((c-=l=(u=(e.ibeta(c,r,s)-n)/(l=t.exp(m*t.log(c)+g*t.log(1-c)+f)))/(1-.5*t.min(1,u*(m/c-g/(1-c)))))<=0&&(c=.5*(c+l)),c>=1&&(c=.5*(c+l+1)),t.abs(l)<1e-8*c&&b>0)break}return c},e.ibeta=function(n,r,s){var a=0===n||1===n?0:t.exp(e.gammaln(r+s)-e.gammaln(r)-e.gammaln(s)+r*t.log(n)+s*t.log(1-n));return!(n<0||n>1)&&(n<(r+1)/(r+s+2)?a*e.betacf(n,r,s)/r:1-a*e.betacf(1-n,s,r)/s)},e.randn=function(n,r){var s,a,i,o,l;if(r||(r=n),n)return e.create(n,r,(function(){return e.randn()}));do{s=e._random_fn(),a=1.7156*(e._random_fn()-.5),l=(i=s-.449871)*i+(o=t.abs(a)+.386595)*(.196*o-.25472*i)}while(l>.27597&&(l>.27846||a*a>-4*t.log(s)*s*s));return a/s},e.randg=function(n,r,s){var a,i,o,l,u,c,h=n;if(s||(s=r),n||(n=1),r)return(c=e.zeros(r,s)).alter((function(){return e.randg(n)})),c;n<1&&(n+=1),a=n-1/3,i=1/t.sqrt(9*a);do{do{l=1+i*(u=e.randn())}while(l<=0);l*=l*l,o=e._random_fn()}while(o>1-.331*t.pow(u,4)&&t.log(o)>.5*u*u+a*(1-l+t.log(l)));if(n==h)return a*l;do{o=e._random_fn()}while(0===o);return t.pow(o,1/h)*a*l},function(t){for(var n=0;n<t.length;n++)!function(t){e.fn[t]=function(){return e(e.map(this,(function(n){return e[t](n)})))}}(t[n])}("gammaln gammafn factorial factorialln".split(" ")),function(t){for(var n=0;n<t.length;n++)!function(t){e.fn[t]=function(){return e(e[t].apply(null,arguments))}}(t[n])}("randn".split(" "))}(t,Math),function(e,t){function n(e,n,r,s){for(var a,i=0,o=1,l=1,u=1,c=0,h=0;t.abs((l-h)/l)>s;)h=l,o=u+(a=-(n+c)*(n+r+c)*e/(n+2*c)/(n+2*c+1))*o,l=(i=l+a*i)+(a=(c+=1)*(r-c)*e/(n+2*c-1)/(n+2*c))*l,i/=u=o+a*u,o/=u,l/=u,u=1;return l/n}function r(n,r,s){var a=[.9815606342467192,.9041172563704749,.7699026741943047,.5873179542866175,.3678314989981802,.1252334085114689],i=[.04717533638651183,.10693932599531843,.16007832854334622,.20316742672306592,.2334925365383548,.24914704581340277],o=.5*n;if(o>=8)return 1;var l,u=2*e.normal.cdf(o,0,1,1,0)-1;u=u>=t.exp(-50/s)?t.pow(u,s):0;for(var c=o,h=(8-o)/(l=n>3?2:3),d=c+h,p=0,f=s-1,m=1;m<=l;m++){for(var g=0,b=.5*(d+c),x=.5*(d-c),y=1;y<=12;y++){var v,w=b+x*(6<y?a[(v=12-y+1)-1]:-a[(v=y)-1]),k=w*w;if(k>60)break;var I=2*e.normal.cdf(w,0,1,1,0)*.5-2*e.normal.cdf(w,n,1,1,0)*.5;I>=t.exp(-30/f)&&(g+=I=i[v-1]*t.exp(-.5*k)*t.pow(I,f))}p+=g*=2*x*s/t.sqrt(2*t.PI),c=d,d+=h}return(u+=p)<=t.exp(-30/r)?0:(u=t.pow(u,r))>=1?1:u}!function(t){for(var n=0;n<t.length;n++)!function(t){e[t]=function e(t,n,r){return this instanceof e?(this._a=t,this._b=n,this._c=r,this):new e(t,n,r)},e.fn[t]=function(n,r,s){var a=e[t](n,r,s);return a.data=this,a},e[t].prototype.sample=function(n){var r=this._a,s=this._b,a=this._c;return n?e.alter(n,(function(){return e[t].sample(r,s,a)})):e[t].sample(r,s,a)},function(n){for(var r=0;r<n.length;r++)!function(n){e[t].prototype[n]=function(r){var s=this._a,a=this._b,i=this._c;return r||0===r||(r=this.data),"number"!=typeof r?e.fn.map.call(r,(function(r){return e[t][n](r,s,a,i)})):e[t][n](r,s,a,i)}}(n[r])}("pdf cdf inv".split(" ")),function(n){for(var r=0;r<n.length;r++)!function(n){e[t].prototype[n]=function(){return e[t][n](this._a,this._b,this._c)}}(n[r])}("mean median mode variance".split(" "))}(t[n])}("beta centralF cauchy chisquare exponential gamma invgamma kumaraswamy laplace lognormal noncentralt normal pareto studentt weibull uniform binomial negbin hypgeom poisson triangular tukey arcsine".split(" ")),e.extend(e.beta,{pdf:function(n,r,s){return n>1||n<0?0:1==r&&1==s?1:r<512&&s<512?t.pow(n,r-1)*t.pow(1-n,s-1)/e.betafn(r,s):t.exp((r-1)*t.log(n)+(s-1)*t.log(1-n)-e.betaln(r,s))},cdf:function(t,n,r){return t>1||t<0?1*(t>1):e.ibeta(t,n,r)},inv:function(t,n,r){return e.ibetainv(t,n,r)},mean:function(e,t){return e/(e+t)},median:function(t,n){return e.ibetainv(.5,t,n)},mode:function(e,t){return(e-1)/(e+t-2)},sample:function(t,n){var r=e.randg(t);return r/(r+e.randg(n))},variance:function(e,n){return e*n/(t.pow(e+n,2)*(e+n+1))}}),e.extend(e.centralF,{pdf:function(n,r,s){var a;return n<0?0:r<=2?0===n&&r<2?1/0:0===n&&2===r?1:1/e.betafn(r/2,s/2)*t.pow(r/s,r/2)*t.pow(n,r/2-1)*t.pow(1+r/s*n,-(r+s)/2):(a=r*n/(s+n*r),r*(s/(s+n*r))/2*e.binomial.pdf((r-2)/2,(r+s-2)/2,a))},cdf:function(t,n,r){return t<0?0:e.ibeta(n*t/(n*t+r),n/2,r/2)},inv:function(t,n,r){return r/(n*(1/e.ibetainv(t,n/2,r/2)-1))},mean:function(e,t){return t>2?t/(t-2):void 0},mode:function(e,t){return e>2?t*(e-2)/(e*(t+2)):void 0},sample:function(t,n){return 2*e.randg(t/2)/t/(2*e.randg(n/2)/n)},variance:function(e,t){if(!(t<=4))return 2*t*t*(e+t-2)/(e*(t-2)*(t-2)*(t-4))}}),e.extend(e.cauchy,{pdf:function(e,n,r){return r<0?0:r/(t.pow(e-n,2)+t.pow(r,2))/t.PI},cdf:function(e,n,r){return t.atan((e-n)/r)/t.PI+.5},inv:function(e,n,r){return n+r*t.tan(t.PI*(e-.5))},median:function(e){return e},mode:function(e){return e},sample:function(n,r){return e.randn()*t.sqrt(1/(2*e.randg(.5)))*r+n}}),e.extend(e.chisquare,{pdf:function(n,r){return n<0?0:0===n&&2===r?.5:t.exp((r/2-1)*t.log(n)-n/2-r/2*t.log(2)-e.gammaln(r/2))},cdf:function(t,n){return t<0?0:e.lowRegGamma(n/2,t/2)},inv:function(t,n){return 2*e.gammapinv(t,.5*n)},mean:function(e){return e},median:function(e){return e*t.pow(1-2/(9*e),3)},mode:function(e){return e-2>0?e-2:0},sample:function(t){return 2*e.randg(t/2)},variance:function(e){return 2*e}}),e.extend(e.exponential,{pdf:function(e,n){return e<0?0:n*t.exp(-n*e)},cdf:function(e,n){return e<0?0:1-t.exp(-n*e)},inv:function(e,n){return-t.log(1-e)/n},mean:function(e){return 1/e},median:function(e){return 1/e*t.log(2)},mode:function(){return 0},sample:function(n){return-1/n*t.log(e._random_fn())},variance:function(e){return t.pow(e,-2)}}),e.extend(e.gamma,{pdf:function(n,r,s){return n<0?0:0===n&&1===r?1/s:t.exp((r-1)*t.log(n)-n/s-e.gammaln(r)-r*t.log(s))},cdf:function(t,n,r){return t<0?0:e.lowRegGamma(n,t/r)},inv:function(t,n,r){return e.gammapinv(t,n)*r},mean:function(e,t){return e*t},mode:function(e,t){if(e>1)return(e-1)*t},sample:function(t,n){return e.randg(t)*n},variance:function(e,t){return e*t*t}}),e.extend(e.invgamma,{pdf:function(n,r,s){return n<=0?0:t.exp(-(r+1)*t.log(n)-s/n-e.gammaln(r)+r*t.log(s))},cdf:function(t,n,r){return t<=0?0:1-e.lowRegGamma(n,r/t)},inv:function(t,n,r){return r/e.gammapinv(1-t,n)},mean:function(e,t){return e>1?t/(e-1):void 0},mode:function(e,t){return t/(e+1)},sample:function(t,n){return n/e.randg(t)},variance:function(e,t){if(!(e<=2))return t*t/((e-1)*(e-1)*(e-2))}}),e.extend(e.kumaraswamy,{pdf:function(e,n,r){return 0===e&&1===n?r:1===e&&1===r?n:t.exp(t.log(n)+t.log(r)+(n-1)*t.log(e)+(r-1)*t.log(1-t.pow(e,n)))},cdf:function(e,n,r){return e<0?0:e>1?1:1-t.pow(1-t.pow(e,n),r)},inv:function(e,n,r){return t.pow(1-t.pow(1-e,1/r),1/n)},mean:function(t,n){return n*e.gammafn(1+1/t)*e.gammafn(n)/e.gammafn(1+1/t+n)},median:function(e,n){return t.pow(1-t.pow(2,-1/n),1/e)},mode:function(e,n){if(e>=1&&n>=1&&1!==e&&1!==n)return t.pow((e-1)/(e*n-1),1/e)},variance:function(){throw new Error("variance not yet implemented")}}),e.extend(e.lognormal,{pdf:function(e,n,r){return e<=0?0:t.exp(-t.log(e)-.5*t.log(2*t.PI)-t.log(r)-t.pow(t.log(e)-n,2)/(2*r*r))},cdf:function(n,r,s){return n<0?0:.5+.5*e.erf((t.log(n)-r)/t.sqrt(2*s*s))},inv:function(n,r,s){return t.exp(-1.4142135623730951*s*e.erfcinv(2*n)+r)},mean:function(e,n){return t.exp(e+n*n/2)},median:function(e){return t.exp(e)},mode:function(e,n){return t.exp(e-n*n)},sample:function(n,r){return t.exp(e.randn()*r+n)},variance:function(e,n){return(t.exp(n*n)-1)*t.exp(2*e+n*n)}}),e.extend(e.noncentralt,{pdf:function(n,r,s){return t.abs(s)<1e-14?e.studentt.pdf(n,r):t.abs(n)<1e-14?t.exp(e.gammaln((r+1)/2)-s*s/2-.5*t.log(t.PI*r)-e.gammaln(r/2)):r/n*(e.noncentralt.cdf(n*t.sqrt(1+2/r),r+2,s)-e.noncentralt.cdf(n,r,s))},cdf:function(n,r,s){var a=1e-14;if(t.abs(s)<a)return e.studentt.cdf(n,r);var i=!1;n<0&&(i=!0,s=-s);for(var o=e.normal.cdf(-s,0,1),l=a+1,u=l,c=n*n/(n*n+r),h=0,d=t.exp(-s*s/2),p=t.exp(-s*s/2-.5*t.log(2)-e.gammaln(1.5))*s;h<200||u>a||l>a;)u=l,h>0&&(d*=s*s/(2*h),p*=s*s/(2*(h+.5))),o+=.5*(l=d*e.beta.cdf(c,h+.5,r/2)+p*e.beta.cdf(c,h+1,r/2)),h++;return i?1-o:o}}),e.extend(e.normal,{pdf:function(e,n,r){return t.exp(-.5*t.log(2*t.PI)-t.log(r)-t.pow(e-n,2)/(2*r*r))},cdf:function(n,r,s){return.5*(1+e.erf((n-r)/t.sqrt(2*s*s)))},inv:function(t,n,r){return-1.4142135623730951*r*e.erfcinv(2*t)+n},mean:function(e){return e},median:function(e){return e},mode:function(e){return e},sample:function(t,n){return e.randn()*n+t},variance:function(e,t){return t*t}}),e.extend(e.pareto,{pdf:function(e,n,r){return e<n?0:r*t.pow(n,r)/t.pow(e,r+1)},cdf:function(e,n,r){return e<n?0:1-t.pow(n/e,r)},inv:function(e,n,r){return n/t.pow(1-e,1/r)},mean:function(e,n){if(!(n<=1))return n*t.pow(e,n)/(n-1)},median:function(e,n){return e*(n*t.SQRT2)},mode:function(e){return e},variance:function(e,n){if(!(n<=2))return e*e*n/(t.pow(n-1,2)*(n-2))}}),e.extend(e.studentt,{pdf:function(n,r){return r=r>1e100?1e100:r,1/(t.sqrt(r)*e.betafn(.5,r/2))*t.pow(1+n*n/r,-(r+1)/2)},cdf:function(n,r){var s=r/2;return e.ibeta((n+t.sqrt(n*n+r))/(2*t.sqrt(n*n+r)),s,s)},inv:function(n,r){var s=e.ibetainv(2*t.min(n,1-n),.5*r,.5);return s=t.sqrt(r*(1-s)/s),n>.5?s:-s},mean:function(e){return e>1?0:void 0},median:function(){return 0},mode:function(){return 0},sample:function(n){return e.randn()*t.sqrt(n/(2*e.randg(n/2)))},variance:function(e){return e>2?e/(e-2):e>1?1/0:void 0}}),e.extend(e.weibull,{pdf:function(e,n,r){return e<0||n<0||r<0?0:r/n*t.pow(e/n,r-1)*t.exp(-t.pow(e/n,r))},cdf:function(e,n,r){return e<0?0:1-t.exp(-t.pow(e/n,r))},inv:function(e,n,r){return n*t.pow(-t.log(1-e),1/r)},mean:function(t,n){return t*e.gammafn(1+1/n)},median:function(e,n){return e*t.pow(t.log(2),1/n)},mode:function(e,n){return n<=1?0:e*t.pow((n-1)/n,1/n)},sample:function(n,r){return n*t.pow(-t.log(e._random_fn()),1/r)},variance:function(n,r){return n*n*e.gammafn(1+2/r)-t.pow(e.weibull.mean(n,r),2)}}),e.extend(e.uniform,{pdf:function(e,t,n){return e<t||e>n?0:1/(n-t)},cdf:function(e,t,n){return e<t?0:e<n?(e-t)/(n-t):1},inv:function(e,t,n){return t+e*(n-t)},mean:function(e,t){return.5*(e+t)},median:function(t,n){return e.mean(t,n)},mode:function(){throw new Error("mode is not yet implemented")},sample:function(t,n){return t/2+n/2+(n/2-t/2)*(2*e._random_fn()-1)},variance:function(e,n){return t.pow(n-e,2)/12}}),e.extend(e.binomial,{pdf:function(n,r,s){return 0===s||1===s?r*s===n?1:0:e.combination(r,n)*t.pow(s,n)*t.pow(1-s,r-n)},cdf:function(r,s,a){var i,o=1e-10;if(r<0)return 0;if(r>=s)return 1;if(a<0||a>1||s<=0)return NaN;var l=a,u=(r=t.floor(r))+1,c=s-r,h=u+c,d=t.exp(e.gammaln(h)-e.gammaln(c)-e.gammaln(u)+u*t.log(l)+c*t.log(1-l));return i=l<(u+1)/(h+2)?d*n(l,u,c,o):1-d*n(1-l,c,u,o),t.round(1/o*(1-i))/(1/o)}}),e.extend(e.negbin,{pdf:function(n,r,s){return n===n>>>0&&(n<0?0:e.combination(n+r-1,r-1)*t.pow(1-s,n)*t.pow(s,r))},cdf:function(t,n,r){var s=0,a=0;if(t<0)return 0;for(;a<=t;a++)s+=e.negbin.pdf(a,n,r);return s}}),e.extend(e.hypgeom,{pdf:function(n,r,s,a){if(n!=n|0)return!1;if(n<0||n<s-(r-a))return 0;if(n>a||n>s)return 0;if(2*s>r)return 2*a>r?e.hypgeom.pdf(r-s-a+n,r,r-s,r-a):e.hypgeom.pdf(a-n,r,r-s,a);if(2*a>r)return e.hypgeom.pdf(s-n,r,s,r-a);if(s<a)return e.hypgeom.pdf(n,r,a,s);for(var i=1,o=0,l=0;l<n;l++){for(;i>1&&o<a;)i*=1-s/(r-o),o++;i*=(a-l)*(s-l)/((l+1)*(r-s-a+l+1))}for(;o<a;o++)i*=1-s/(r-o);return t.min(1,t.max(0,i))},cdf:function(n,r,s,a){if(n<0||n<s-(r-a))return 0;if(n>=a||n>=s)return 1;if(2*s>r)return 2*a>r?e.hypgeom.cdf(r-s-a+n,r,r-s,r-a):1-e.hypgeom.cdf(a-n-1,r,r-s,a);if(2*a>r)return 1-e.hypgeom.cdf(s-n-1,r,s,r-a);if(s<a)return e.hypgeom.cdf(n,r,a,s);for(var i=1,o=1,l=0,u=0;u<n;u++){for(;i>1&&l<a;){var c=1-s/(r-l);o*=c,i*=c,l++}i+=o*=(a-u)*(s-u)/((u+1)*(r-s-a+u+1))}for(;l<a;l++)i*=1-s/(r-l);return t.min(1,t.max(0,i))}}),e.extend(e.poisson,{pdf:function(n,r){return r<0||n%1!=0||n<0?0:t.pow(r,n)*t.exp(-r)/e.factorial(n)},cdf:function(t,n){var r=[],s=0;if(t<0)return 0;for(;s<=t;s++)r.push(e.poisson.pdf(s,n));return e.sum(r)},mean:function(e){return e},variance:function(e){return e},sampleSmall:function(n){var r=1,s=0,a=t.exp(-n);do{s++,r*=e._random_fn()}while(r>a);return s-1},sampleLarge:function(n){var r,s,a,i,o,l,u,c,h,d,p=n;for(i=t.sqrt(p),o=t.log(p),l=.02483*(u=.931+2.53*i)-.059,c=1.1239+1.1328/(u-3.4),h=.9277-3.6224/(u-2);;){if(s=t.random()-.5,a=t.random(),d=.5-t.abs(s),r=t.floor((2*l/d+u)*s+p+.43),d>=.07&&a<=h)return r;if(!(r<0||d<.013&&a>d)&&t.log(a)+t.log(c)-t.log(l/(d*d)+u)<=r*o-p-e.loggam(r+1))return r}},sample:function(e){return e<10?this.sampleSmall(e):this.sampleLarge(e)}}),e.extend(e.triangular,{pdf:function(e,t,n,r){return n<=t||r<t||r>n?NaN:e<t||e>n?0:e<r?2*(e-t)/((n-t)*(r-t)):e===r?2/(n-t):2*(n-e)/((n-t)*(n-r))},cdf:function(e,n,r,s){return r<=n||s<n||s>r?NaN:e<=n?0:e>=r?1:e<=s?t.pow(e-n,2)/((r-n)*(s-n)):1-t.pow(r-e,2)/((r-n)*(r-s))},inv:function(e,n,r,s){return r<=n||s<n||s>r?NaN:e<=(s-n)/(r-n)?n+(r-n)*t.sqrt(e*((s-n)/(r-n))):n+(r-n)*(1-t.sqrt((1-e)*(1-(s-n)/(r-n))))},mean:function(e,t,n){return(e+t+n)/3},median:function(e,n,r){return r<=(e+n)/2?n-t.sqrt((n-e)*(n-r))/t.sqrt(2):r>(e+n)/2?e+t.sqrt((n-e)*(r-e))/t.sqrt(2):void 0},mode:function(e,t,n){return n},sample:function(n,r,s){var a=e._random_fn();return a<(s-n)/(r-n)?n+t.sqrt(a*(r-n)*(s-n)):r-t.sqrt((1-a)*(r-n)*(r-s))},variance:function(e,t,n){return(e*e+t*t+n*n-e*t-e*n-t*n)/18}}),e.extend(e.arcsine,{pdf:function(e,n,r){return r<=n?NaN:e<=n||e>=r?0:2/t.PI*t.pow(t.pow(r-n,2)-t.pow(2*e-n-r,2),-.5)},cdf:function(e,n,r){return e<n?0:e<r?2/t.PI*t.asin(t.sqrt((e-n)/(r-n))):1},inv:function(e,n,r){return n+(.5-.5*t.cos(t.PI*e))*(r-n)},mean:function(e,t){return t<=e?NaN:(e+t)/2},median:function(e,t){return t<=e?NaN:(e+t)/2},mode:function(){throw new Error("mode is not yet implemented")},sample:function(n,r){return(n+r)/2+(r-n)/2*t.sin(2*t.PI*e.uniform.sample(0,1))},variance:function(e,n){return n<=e?NaN:t.pow(n-e,2)/8}}),e.extend(e.laplace,{pdf:function(e,n,r){return r<=0?0:t.exp(-t.abs(e-n)/r)/(2*r)},cdf:function(e,n,r){return r<=0?0:e<n?.5*t.exp((e-n)/r):1-.5*t.exp(-(e-n)/r)},mean:function(e){return e},median:function(e){return e},mode:function(e){return e},variance:function(e,t){return 2*t*t},sample:function(n,r){var s,a=e._random_fn()-.5;return n-r*((s=a)/t.abs(s))*t.log(1-2*t.abs(a))}}),e.extend(e.tukey,{cdf:function(n,s,a){var i=s,o=[.9894009349916499,.9445750230732326,.8656312023878318,.755404408355003,.6178762444026438,.45801677765722737,.2816035507792589,.09501250983763744],l=[.027152459411754096,.062253523938647894,.09515851168249279,.12462897125553388,.14959598881657674,.16915651939500254,.18260341504492358,.1894506104550685];if(n<=0)return 0;if(a<2||i<2)return NaN;if(!Number.isFinite(n))return 1;if(a>25e3)return r(n,1,i);var u,c=.5*a,h=c*t.log(a)-a*t.log(2)-e.gammaln(c),d=c-1,p=.25*a;u=a<=100?1:a<=800?.5:a<=5e3?.25:.125,h+=t.log(u);for(var f=0,m=1;m<=50;m++){for(var g=0,b=(2*m-1)*u,x=1;x<=16;x++){var y,v;8<x?(y=x-8-1,v=h+d*t.log(b+o[y]*u)-(o[y]*u+b)*p):(y=x-1,v=h+d*t.log(b-o[y]*u)+(o[y]*u-b)*p),v>=-30&&(g+=r(8<x?n*t.sqrt(.5*(o[y]*u+b)):n*t.sqrt(.5*(-o[y]*u+b)),1,i)*l[y]*t.exp(v))}if(m*u>=1&&g<=1e-14)break;f+=g}if(g>1e-14)throw new Error("tukey.cdf failed to converge");return f>1&&(f=1),f},inv:function(n,r,s){if(s<2||r<2)return NaN;if(n<0||n>1)return NaN;if(0===n)return 0;if(1===n)return 1/0;var a,i=function(e,n,r){var s=.5-.5*e,a=t.sqrt(t.log(1/(s*s))),i=a+((((-453642210148e-16*a-.204231210125)*a-.342242088547)*a-1)*a+.322232421088)/((((.0038560700634*a+.10353775285)*a+.531103462366)*a+.588581570495)*a+.099348462606);r<120&&(i+=(i*i*i+i)/r/4);var o=.8832-.2368*i;return r<120&&(o+=-1.214/r+1.208*i/r),i*(o*t.log(n-1)+1.4142)}(n,r,s),o=e.tukey.cdf(i,r,s)-n;a=o>0?t.max(0,i-1):i+1;for(var l,u=e.tukey.cdf(a,r,s)-n,c=1;c<50;c++)if(l=a-u*(a-i)/(u-o),o=u,i=a,l<0&&(l=0,u=-n),u=e.tukey.cdf(l,r,s)-n,a=l,t.abs(a-i)<1e-4)return l;throw new Error("tukey.inv failed to converge")}})}(t,Math),function(e,t){var n,r,s=Array.prototype.push,a=e.utils.isArray;function i(t){return a(t)||t instanceof e}e.extend({add:function(t,n){return i(n)?(i(n[0])||(n=[n]),e.map(t,(function(e,t,r){return e+n[t][r]}))):e.map(t,(function(e){return e+n}))},subtract:function(t,n){return i(n)?(i(n[0])||(n=[n]),e.map(t,(function(e,t,r){return e-n[t][r]||0}))):e.map(t,(function(e){return e-n}))},divide:function(t,n){return i(n)?(i(n[0])||(n=[n]),e.multiply(t,e.inv(n))):e.map(t,(function(e){return e/n}))},multiply:function(t,n){var r,s,a,o,l,u,c,h;if(void 0===t.length&&void 0===n.length)return t*n;if(l=t.length,u=t[0].length,c=e.zeros(l,a=i(n)?n[0].length:u),h=0,i(n)){for(;h<a;h++)for(r=0;r<l;r++){for(o=0,s=0;s<u;s++)o+=t[r][s]*n[s][h];c[r][h]=o}return 1===l&&1===h?c[0][0]:c}return e.map(t,(function(e){return e*n}))},outer:function(t,n){return e.multiply(t.map((function(e){return[e]})),[n])},dot:function(t,n){i(t[0])||(t=[t]),i(n[0])||(n=[n]);for(var r,s,a=1===t[0].length&&1!==t.length?e.transpose(t):t,o=1===n[0].length&&1!==n.length?e.transpose(n):n,l=[],u=0,c=a.length,h=a[0].length;u<c;u++){for(l[u]=[],r=0,s=0;s<h;s++)r+=a[u][s]*o[u][s];l[u]=r}return 1===l.length?l[0]:l},pow:function(n,r){return e.map(n,(function(e){return t.pow(e,r)}))},exp:function(n){return e.map(n,(function(e){return t.exp(e)}))},log:function(n){return e.map(n,(function(e){return t.log(e)}))},abs:function(n){return e.map(n,(function(e){return t.abs(e)}))},norm:function(e,n){var r=0,s=0;for(isNaN(n)&&(n=2),i(e[0])&&(e=e[0]);s<e.length;s++)r+=t.pow(t.abs(e[s]),n);return t.pow(r,1/n)},angle:function(n,r){return t.acos(e.dot(n,r)/(e.norm(n)*e.norm(r)))},aug:function(e,t){var n,r=[];for(n=0;n<e.length;n++)r.push(e[n].slice());for(n=0;n<r.length;n++)s.apply(r[n],t[n]);return r},inv:function(t){for(var n,r=t.length,s=t[0].length,a=e.identity(r,s),i=e.gauss_jordan(t,a),o=[],l=0;l<r;l++)for(o[l]=[],n=s;n<i[0].length;n++)o[l][n-s]=i[l][n];return o},det:function e(t){if(2===t.length)return t[0][0]*t[1][1]-t[0][1]*t[1][0];for(var n=0,r=0;r<t.length;r++){for(var s=[],a=1;a<t.length;a++){s[a-1]=[];for(var i=0;i<t.length;i++)i<r?s[a-1][i]=t[a][i]:i>r&&(s[a-1][i-1]=t[a][i])}var o=r%2?-1:1;n+=e(s)*t[0][r]*o}return n},gauss_elimination:function(n,r){var s,a,i,o,l=0,u=0,c=n.length,h=n[0].length,d=1,p=0,f=[];for(s=(n=e.aug(n,r))[0].length,l=0;l<c;l++){for(a=n[l][l],u=l,o=l+1;o<h;o++)a<t.abs(n[o][l])&&(a=n[o][l],u=o);if(u!=l)for(o=0;o<s;o++)i=n[l][o],n[l][o]=n[u][o],n[u][o]=i;for(u=l+1;u<c;u++)for(d=n[u][l]/n[l][l],o=l;o<s;o++)n[u][o]=n[u][o]-d*n[l][o]}for(l=c-1;l>=0;l--){for(p=0,u=l+1;u<=c-1;u++)p+=f[u]*n[l][u];f[l]=(n[l][s-1]-p)/n[l][l]}return f},gauss_jordan:function(n,r){var s,a,i,o=e.aug(n,r),l=o.length,u=o[0].length,c=0;for(a=0;a<l;a++){var h=a;for(i=a+1;i<l;i++)t.abs(o[i][a])>t.abs(o[h][a])&&(h=i);var d=o[a];for(o[a]=o[h],o[h]=d,i=a+1;i<l;i++)for(c=o[i][a]/o[a][a],s=a;s<u;s++)o[i][s]-=o[a][s]*c}for(a=l-1;a>=0;a--){for(c=o[a][a],i=0;i<a;i++)for(s=u-1;s>a-1;s--)o[i][s]-=o[a][s]*o[i][a]/c;for(o[a][a]/=c,s=l;s<u;s++)o[a][s]/=c}return o},triaUpSolve:function(t,n){var r,s=t[0].length,a=e.zeros(1,s)[0],i=!1;return null!=n[0].length&&(n=n.map((function(e){return e[0]})),i=!0),e.arange(s-1,-1,-1).forEach((function(i){r=e.arange(i+1,s).map((function(e){return a[e]*t[i][e]})),a[i]=(n[i]-e.sum(r))/t[i][i]})),i?a.map((function(e){return[e]})):a},triaLowSolve:function(t,n){var r,s=t[0].length,a=e.zeros(1,s)[0],i=!1;return null!=n[0].length&&(n=n.map((function(e){return e[0]})),i=!0),e.arange(s).forEach((function(s){r=e.arange(s).map((function(e){return t[s][e]*a[e]})),a[s]=(n[s]-e.sum(r))/t[s][s]})),i?a.map((function(e){return[e]})):a},lu:function(t){var n,r=t.length,s=e.identity(r),a=e.zeros(t.length,t[0].length);return e.arange(r).forEach((function(e){a[0][e]=t[0][e]})),e.arange(1,r).forEach((function(i){e.arange(i).forEach((function(r){n=e.arange(r).map((function(e){return s[i][e]*a[e][r]})),s[i][r]=(t[i][r]-e.sum(n))/a[r][r]})),e.arange(i,r).forEach((function(r){n=e.arange(i).map((function(e){return s[i][e]*a[e][r]})),a[i][r]=t[n.length][r]-e.sum(n)}))})),[s,a]},cholesky:function(n){var r,s=n.length,a=e.zeros(n.length,n[0].length);return e.arange(s).forEach((function(i){r=e.arange(i).map((function(e){return t.pow(a[i][e],2)})),a[i][i]=t.sqrt(n[i][i]-e.sum(r)),e.arange(i+1,s).forEach((function(t){r=e.arange(i).map((function(e){return a[i][e]*a[t][e]})),a[t][i]=(n[i][t]-e.sum(r))/a[i][i]}))})),a},gauss_jacobi:function(n,r,s,a){for(var i,o,l,u,c=0,h=0,d=n.length,p=[],f=[],m=[];c<d;c++)for(p[c]=[],f[c]=[],m[c]=[],h=0;h<d;h++)c>h?(p[c][h]=n[c][h],f[c][h]=m[c][h]=0):c<h?(f[c][h]=n[c][h],p[c][h]=m[c][h]=0):(m[c][h]=n[c][h],p[c][h]=f[c][h]=0);for(l=e.multiply(e.multiply(e.inv(m),e.add(p,f)),-1),o=e.multiply(e.inv(m),r),i=s,u=e.add(e.multiply(l,s),o),c=2;t.abs(e.norm(e.subtract(u,i)))>a;)i=u,u=e.add(e.multiply(l,i),o),c++;return u},gauss_seidel:function(n,r,s,a){for(var i,o,l,u,c,h=0,d=n.length,p=[],f=[],m=[];h<d;h++)for(p[h]=[],f[h]=[],m[h]=[],i=0;i<d;i++)h>i?(p[h][i]=n[h][i],f[h][i]=m[h][i]=0):h<i?(f[h][i]=n[h][i],p[h][i]=m[h][i]=0):(m[h][i]=n[h][i],p[h][i]=f[h][i]=0);for(u=e.multiply(e.multiply(e.inv(e.add(m,p)),f),-1),l=e.multiply(e.inv(e.add(m,p)),r),o=s,c=e.add(e.multiply(u,s),l),h=2;t.abs(e.norm(e.subtract(c,o)))>a;)o=c,c=e.add(e.multiply(u,o),l),h+=1;return c},SOR:function(n,r,s,a,i){for(var o,l,u,c,h,d=0,p=n.length,f=[],m=[],g=[];d<p;d++)for(f[d]=[],m[d]=[],g[d]=[],o=0;o<p;o++)d>o?(f[d][o]=n[d][o],m[d][o]=g[d][o]=0):d<o?(m[d][o]=n[d][o],f[d][o]=g[d][o]=0):(g[d][o]=n[d][o],f[d][o]=m[d][o]=0);for(c=e.multiply(e.inv(e.add(g,e.multiply(f,i))),e.subtract(e.multiply(g,1-i),e.multiply(m,i))),u=e.multiply(e.multiply(e.inv(e.add(g,e.multiply(f,i))),r),i),l=s,h=e.add(e.multiply(c,s),u),d=2;t.abs(e.norm(e.subtract(h,l)))>a;)l=h,h=e.add(e.multiply(c,l),u),d++;return h},householder:function(n){for(var r,s,a,i,o=n.length,l=n[0].length,u=0,c=[],h=[];u<o-1;u++){for(r=0,i=u+1;i<l;i++)r+=n[i][u]*n[i][u];for(r=(n[u+1][u]>0?-1:1)*t.sqrt(r),s=t.sqrt((r*r-n[u+1][u]*r)/2),(c=e.zeros(o,1))[u+1][0]=(n[u+1][u]-r)/(2*s),a=u+2;a<o;a++)c[a][0]=n[a][u]/(2*s);h=e.subtract(e.identity(o,l),e.multiply(e.multiply(c,e.transpose(c)),2)),n=e.multiply(h,e.multiply(n,h))}return n},QR:(n=e.sum,r=e.arange,function(s){var a,i,o,l=s.length,u=s[0].length,c=e.zeros(u,u);for(s=e.copy(s),i=0;i<u;i++){for(c[i][i]=t.sqrt(n(r(l).map((function(e){return s[e][i]*s[e][i]})))),a=0;a<l;a++)s[a][i]=s[a][i]/c[i][i];for(o=i+1;o<u;o++)for(c[i][o]=n(r(l).map((function(e){return s[e][i]*s[e][o]}))),a=0;a<l;a++)s[a][o]=s[a][o]-s[a][i]*c[i][o]}return[s,c]}),lstsq:function(t,n){var r=!1;void 0===n[0].length&&(n=n.map((function(e){return[e]})),r=!0);var s=e.QR(t),a=s[0],i=s[1],o=t[0].length,l=e.slice(a,{col:{end:o}}),u=function(t){var n=(t=e.copy(t)).length,r=e.identity(n);return e.arange(n-1,-1,-1).forEach((function(n){e.sliceAssign(r,{row:n},e.divide(e.slice(r,{row:n}),t[n][n])),e.sliceAssign(t,{row:n},e.divide(e.slice(t,{row:n}),t[n][n])),e.arange(n).forEach((function(s){var a=e.multiply(t[s][n],-1),i=e.slice(t,{row:s}),o=e.multiply(e.slice(t,{row:n}),a);e.sliceAssign(t,{row:s},e.add(i,o));var l=e.slice(r,{row:s}),u=e.multiply(e.slice(r,{row:n}),a);e.sliceAssign(r,{row:s},e.add(l,u))}))})),r}(e.slice(i,{row:{end:o}})),c=e.transpose(l);void 0===c[0].length&&(c=[c]);var h=e.multiply(e.multiply(u,c),n);return void 0===h.length&&(h=[[h]]),r?h.map((function(e){return e[0]})):h},jacobi:function(n){for(var r,s,a,i,o,l,u,c=1,h=n.length,d=e.identity(h,h),p=[];1===c;){for(o=n[0][1],a=0,i=1,r=0;r<h;r++)for(s=0;s<h;s++)r!=s&&o<t.abs(n[r][s])&&(o=t.abs(n[r][s]),a=r,i=s);for(l=n[a][a]===n[i][i]?n[a][i]>0?t.PI/4:-t.PI/4:t.atan(2*n[a][i]/(n[a][a]-n[i][i]))/2,(u=e.identity(h,h))[a][a]=t.cos(l),u[a][i]=-t.sin(l),u[i][a]=t.sin(l),u[i][i]=t.cos(l),d=e.multiply(d,u),n=e.multiply(e.multiply(e.inv(u),n),u),c=0,r=1;r<h;r++)for(s=1;s<h;s++)r!=s&&t.abs(n[r][s])>.001&&(c=1)}for(r=0;r<h;r++)p.push(n[r][r]);return[d,p]},rungekutta:function(e,t,n,r,s,a){var i,o,l;if(2===a)for(;r<=n;)s+=((i=t*e(r,s))+(o=t*e(r+t,s+i)))/2,r+=t;if(4===a)for(;r<=n;)s+=((i=t*e(r,s))+2*(o=t*e(r+t/2,s+i/2))+2*(l=t*e(r+t/2,s+o/2))+t*e(r+t,s+l))/6,r+=t;return s},romberg:function(e,n,r,s){for(var a,i,o,l,u,c=0,h=(r-n)/2,d=[],p=[],f=[];c<s/2;){for(u=e(n),o=n,l=0;o<=r;o+=h,l++)d[l]=o;for(a=d.length,o=1;o<a-1;o++)u+=(o%2!=0?4:2)*e(d[o]);u=h/3*(u+e(r)),f[c]=u,h/=2,c++}for(i=f.length,a=1;1!==i;){for(o=0;o<i-1;o++)p[o]=(t.pow(4,a)*f[o+1]-f[o])/(t.pow(4,a)-1);i=p.length,f=p,p=[],a++}return f},richardson:function(e,n,r,s){function a(e,t){for(var n,r=0,s=e.length;r<s;r++)e[r]===t&&(n=r);return n}for(var i,o,l,u,c,h=t.abs(r-e[a(e,r)+1]),d=0,p=[],f=[];s>=h;)i=a(e,r+s),o=a(e,r),p[d]=(n[i]-2*n[o]+n[2*o-i])/(s*s),s/=2,d++;for(u=p.length,l=1;1!=u;){for(c=0;c<u-1;c++)f[c]=(t.pow(4,l)*p[c+1]-p[c])/(t.pow(4,l)-1);u=f.length,p=f,f=[],l++}return p},simpson:function(e,t,n,r){for(var s,a=(n-t)/r,i=e(t),o=[],l=t,u=0,c=1;l<=n;l+=a,u++)o[u]=l;for(s=o.length;c<s-1;c++)i+=(c%2!=0?4:2)*e(o[c]);return a/3*(i+e(n))},hermite:function(e,t,n,r){for(var s,a=e.length,i=0,o=0,l=[],u=[],c=[],h=[];o<a;o++){for(l[o]=1,s=0;s<a;s++)o!=s&&(l[o]*=(r-e[s])/(e[o]-e[s]));for(u[o]=0,s=0;s<a;s++)o!=s&&(u[o]+=1/(e[o]-e[s]));c[o]=(1-2*(r-e[o])*u[o])*(l[o]*l[o]),h[o]=(r-e[o])*(l[o]*l[o]),i+=c[o]*t[o]+h[o]*n[o]}return i},lagrange:function(e,t,n){for(var r,s,a=0,i=0,o=e.length;i<o;i++){for(s=t[i],r=0;r<o;r++)i!=r&&(s*=(n-e[r])/(e[i]-e[r]));a+=s}return a},cubic_spline:function(t,n,r){for(var s,a,i=t.length,o=0,l=[],u=[],c=[],h=[],d=[],p=[];o<i-1;o++)h[o]=t[o+1]-t[o];for(c[0]=0,o=1;o<i-1;o++)c[o]=3/h[o]*(n[o+1]-n[o])-3/h[o-1]*(n[o]-n[o-1]);for(o=1;o<i-1;o++)l[o]=[],u[o]=[],l[o][o-1]=h[o-1],l[o][o]=2*(h[o-1]+h[o]),l[o][o+1]=h[o],u[o][0]=c[o];for(a=e.multiply(e.inv(l),u),s=0;s<i-1;s++)d[s]=(n[s+1]-n[s])/h[s]-h[s]*(a[s+1][0]+2*a[s][0])/3,p[s]=(a[s+1][0]-a[s][0])/(3*h[s]);for(s=0;s<i&&!(t[s]>r);s++);return n[s-=1]+(r-t[s])*d[s]+e.sq(r-t[s])*a[s]+(r-t[s])*e.sq(r-t[s])*p[s]},gauss_quadrature:function(){throw new Error("gauss_quadrature not yet implemented")},PCA:function(t){var n,r,s,a,i,o=t.length,l=t[0].length,u=0,c=[],h=[],d=[],p=[],f=[],m=[],g=[];for(u=0;u<o;u++)c[u]=e.sum(t[u])/l;for(u=0;u<l;u++)for(f[u]=[],n=0;n<o;n++)f[u][n]=t[n][u]-c[n];for(f=e.transpose(f),u=0;u<o;u++)for(m[u]=[],n=0;n<o;n++)m[u][n]=e.dot([f[u]],[f[n]])/(l-1);for(i=(s=e.jacobi(m))[0],h=s[1],g=e.transpose(i),u=0;u<h.length;u++)for(n=u;n<h.length;n++)h[u]<h[n]&&(r=h[u],h[u]=h[n],h[n]=r,d=g[u],g[u]=g[n],g[n]=d);for(a=e.transpose(f),u=0;u<o;u++)for(p[u]=[],n=0;n<a.length;n++)p[u][n]=e.dot([g[u]],[a[n]]);return[t,h,g,p]}}),function(t){for(var n=0;n<t.length;n++)!function(t){e.fn[t]=function(n,r){var s=this;return r?(setTimeout((function(){r.call(s,e.fn[t].call(s,n))}),15),this):"number"==typeof e[t](this,n)?e[t](this,n):e(e[t](this,n))}}(t[n])}("add divide multiply subtract dot pow exp log abs norm angle".split(" "))}(t,Math),function(e,t){var n=[].slice,r=e.utils.isNumber,s=e.utils.isArray;function a(e,n,r,s){if(e>1||r>1||e<=0||r<=0)throw new Error("Proportions should be greater than 0 and less than 1");var a=(e*n+r*s)/(n+s);return(e-r)/t.sqrt(a*(1-a)*(1/n+1/s))}e.extend({zscore:function(){var t=n.call(arguments);return r(t[1])?(t[0]-t[1])/t[2]:(t[0]-e.mean(t[1]))/e.stdev(t[1],t[2])},ztest:function(){var r,a=n.call(arguments);return s(a[1])?(r=e.zscore(a[0],a[1],a[3]),1===a[2]?e.normal.cdf(-t.abs(r),0,1):2*e.normal.cdf(-t.abs(r),0,1)):a.length>2?(r=e.zscore(a[0],a[1],a[2]),1===a[3]?e.normal.cdf(-t.abs(r),0,1):2*e.normal.cdf(-t.abs(r),0,1)):(r=a[0],1===a[1]?e.normal.cdf(-t.abs(r),0,1):2*e.normal.cdf(-t.abs(r),0,1))}}),e.extend(e.fn,{zscore:function(e,t){return(e-this.mean())/this.stdev(t)},ztest:function(n,r,s){var a=t.abs(this.zscore(n,s));return 1===r?e.normal.cdf(-a,0,1):2*e.normal.cdf(-a,0,1)}}),e.extend({tscore:function(){var r=n.call(arguments);return 4===r.length?(r[0]-r[1])/(r[2]/t.sqrt(r[3])):(r[0]-e.mean(r[1]))/(e.stdev(r[1],!0)/t.sqrt(r[1].length))},ttest:function(){var s,a=n.call(arguments);return 5===a.length?(s=t.abs(e.tscore(a[0],a[1],a[2],a[3])),1===a[4]?e.studentt.cdf(-s,a[3]-1):2*e.studentt.cdf(-s,a[3]-1)):r(a[1])?(s=t.abs(a[0]),1==a[2]?e.studentt.cdf(-s,a[1]-1):2*e.studentt.cdf(-s,a[1]-1)):(s=t.abs(e.tscore(a[0],a[1])),1==a[2]?e.studentt.cdf(-s,a[1].length-1):2*e.studentt.cdf(-s,a[1].length-1))}}),e.extend(e.fn,{tscore:function(e){return(e-this.mean())/(this.stdev(!0)/t.sqrt(this.cols()))},ttest:function(n,r){return 1===r?1-e.studentt.cdf(t.abs(this.tscore(n)),this.cols()-1):2*e.studentt.cdf(-t.abs(this.tscore(n)),this.cols()-1)}}),e.extend({anovafscore:function(){var r,s,a,i,o,l,u,c,h=n.call(arguments);if(1===h.length){for(o=new Array(h[0].length),u=0;u<h[0].length;u++)o[u]=h[0][u];h=o}for(s=new Array,u=0;u<h.length;u++)s=s.concat(h[u]);for(a=e.mean(s),r=0,u=0;u<h.length;u++)r+=h[u].length*t.pow(e.mean(h[u])-a,2);for(r/=h.length-1,l=0,u=0;u<h.length;u++)for(i=e.mean(h[u]),c=0;c<h[u].length;c++)l+=t.pow(h[u][c]-i,2);return r/(l/(s.length-h.length))},anovaftest:function(){var t,s,a,i,o=n.call(arguments);if(r(o[0]))return 1-e.centralF.cdf(o[0],o[1],o[2]);var l=e.anovafscore(o);for(t=o.length-1,a=0,i=0;i<o.length;i++)a+=o[i].length;return s=a-t-1,1-e.centralF.cdf(l,t,s)},ftest:function(t,n,r){return 1-e.centralF.cdf(t,n,r)}}),e.extend(e.fn,{anovafscore:function(){return e.anovafscore(this.toArray())},anovaftes:function(){var t,n=0;for(t=0;t<this.length;t++)n+=this[t].length;return e.ftest(this.anovafscore(),this.length-1,n-this.length)}}),e.extend({qscore:function(){var s,a,i,o,l,u=n.call(arguments);return r(u[0])?(s=u[0],a=u[1],i=u[2],o=u[3],l=u[4]):(s=e.mean(u[0]),a=e.mean(u[1]),i=u[0].length,o=u[1].length,l=u[2]),t.abs(s-a)/(l*t.sqrt((1/i+1/o)/2))},qtest:function(){var t,r=n.call(arguments);3===r.length?(t=r[0],r=r.slice(1)):7===r.length?(t=e.qscore(r[0],r[1],r[2],r[3],r[4]),r=r.slice(5)):(t=e.qscore(r[0],r[1],r[2]),r=r.slice(3));var s=r[0],a=r[1];return 1-e.tukey.cdf(t,a,s-a)},tukeyhsd:function(t){for(var n=e.pooledstdev(t),r=t.map((function(t){return e.mean(t)})),s=t.reduce((function(e,t){return e+t.length}),0),a=[],i=0;i<t.length;++i)for(var o=i+1;o<t.length;++o){var l=e.qtest(r[i],r[o],t[i].length,t[o].length,n,s,t.length);a.push([[i,o],l])}return a}}),e.extend({normalci:function(){var r,s=n.call(arguments),a=new Array(2);return r=4===s.length?t.abs(e.normal.inv(s[1]/2,0,1)*s[2]/t.sqrt(s[3])):t.abs(e.normal.inv(s[1]/2,0,1)*e.stdev(s[2])/t.sqrt(s[2].length)),a[0]=s[0]-r,a[1]=s[0]+r,a},tci:function(){var r,s=n.call(arguments),a=new Array(2);return r=4===s.length?t.abs(e.studentt.inv(s[1]/2,s[3]-1)*s[2]/t.sqrt(s[3])):t.abs(e.studentt.inv(s[1]/2,s[2].length-1)*e.stdev(s[2],!0)/t.sqrt(s[2].length)),a[0]=s[0]-r,a[1]=s[0]+r,a},significant:function(e,t){return e<t}}),e.extend(e.fn,{normalci:function(t,n){return e.normalci(t,n,this.toArray())},tci:function(t,n){return e.tci(t,n,this.toArray())}}),e.extend(e.fn,{oneSidedDifferenceOfProportions:function(t,n,r,s){var i=a(t,n,r,s);return e.ztest(i,1)},twoSidedDifferenceOfProportions:function(t,n,r,s){var i=a(t,n,r,s);return e.ztest(i,2)}})}(t,Math),t.models=function(){function e(e,n){var r=e.length,s=n[0].length-1,a=r-s-1,i=t.lstsq(n,e),o=t.multiply(n,i.map((function(e){return[e]}))).map((function(e){return e[0]})),l=t.subtract(e,o),u=t.mean(e),c=t.sum(o.map((function(e){return Math.pow(e-u,2)}))),h=t.sum(e.map((function(e,t){return Math.pow(e-o[t],2)}))),d=c+h;return{exog:n,endog:e,nobs:r,df_model:s,df_resid:a,coef:i,predict:o,resid:l,ybar:u,SST:d,SSE:c,SSR:h,R2:c/d}}function n(n){var r,s,a=(r=n.exog,s=r[0].length,t.arange(s).map((function(n){var a=t.arange(s).filter((function(e){return e!==n}));return e(t.col(r,n).map((function(e){return e[0]})),t.col(r,a))}))),i=Math.sqrt(n.SSR/n.df_resid),o=a.map((function(e){var t=e.SST,n=e.R2;return i/Math.sqrt(t*(1-n))})),l=n.coef.map((function(e,t){return(e-0)/o[t]})),u=l.map((function(e){var r=t.studentt.cdf(e,n.df_resid);return 2*(r>.5?1-r:r)})),c=t.studentt.inv(.975,n.df_resid),h=n.coef.map((function(e,t){var n=c*o[t];return[e-n,e+n]}));return{se:o,t:l,p:u,sigmaHat:i,interval95:h}}return{ols:function(r,s){var a=e(r,s),i=n(a),o=function(e){var n,r,s,a=e.R2/e.df_model/((1-e.R2)/e.df_resid);return{F_statistic:a,pvalue:1-(n=a,r=e.df_model,s=e.df_resid,t.beta.cdf(n/(s/r+n),r/2,s/2))}}(a),l=1-(1-a.R2)*((a.nobs-1)/a.df_resid);return a.t=i,a.f=o,a.adjust_R2=l,a}}}(),t.extend({buildxmatrix:function(){for(var e=new Array(arguments.length),n=0;n<arguments.length;n++){e[n]=[1].concat(arguments[n])}return t(e)},builddxmatrix:function(){for(var e=new Array(arguments[0].length),n=0;n<arguments[0].length;n++){e[n]=[1].concat(arguments[0][n])}return t(e)},buildjxmatrix:function(e){for(var n=new Array(e.length),r=0;r<e.length;r++)n[r]=e[r];return t.builddxmatrix(n)},buildymatrix:function(e){return t(e).transpose()},buildjymatrix:function(e){return e.transpose()},matrixmult:function(e,n){var r,s,a,i,o;if(e.cols()==n.rows()){if(n.rows()>1){for(i=[],r=0;r<e.rows();r++)for(i[r]=[],s=0;s<n.cols();s++){for(o=0,a=0;a<e.cols();a++)o+=e.toArray()[r][a]*n.toArray()[a][s];i[r][s]=o}return t(i)}for(i=[],r=0;r<e.rows();r++)for(i[r]=[],s=0;s<n.cols();s++){for(o=0,a=0;a<e.cols();a++)o+=e.toArray()[r][a]*n.toArray()[s];i[r][s]=o}return t(i)}},regress:function(e,n){var r=t.xtranspxinv(e),s=e.transpose(),a=t.matrixmult(t(r),s);return t.matrixmult(a,n)},regresst:function(e,n,r){var s=t.regress(e,n),a={anova:{}},i=t.jMatYBar(e,s);a.yBar=i;var o=n.mean();a.anova.residuals=t.residuals(n,i),a.anova.ssr=t.ssr(i,o),a.anova.msr=a.anova.ssr/(e[0].length-1),a.anova.sse=t.sse(n,i),a.anova.mse=a.anova.sse/(n.length-(e[0].length-1)-1),a.anova.sst=t.sst(n,o),a.anova.mst=a.anova.sst/(n.length-1),a.anova.r2=1-a.anova.sse/a.anova.sst,a.anova.r2<0&&(a.anova.r2=0),a.anova.fratio=a.anova.msr/a.anova.mse,a.anova.pvalue=t.anovaftest(a.anova.fratio,e[0].length-1,n.length-(e[0].length-1)-1),a.anova.rmse=Math.sqrt(a.anova.mse),a.anova.r2adj=1-a.anova.mse/a.anova.mst,a.anova.r2adj<0&&(a.anova.r2adj=0),a.stats=new Array(e[0].length);for(var l,u,c,h=t.xtranspxinv(e),d=0;d<s.length;d++)l=Math.sqrt(a.anova.mse*Math.abs(h[d][d])),u=Math.abs(s[d]/l),c=t.ttest(u,n.length-e[0].length-1,r),a.stats[d]=[s[d],l,u,c];return a.regress=s,a},xtranspx:function(e){return t.matrixmult(e.transpose(),e)},xtranspxinv:function(e){var n=t.matrixmult(e.transpose(),e);return t.inv(n)},jMatYBar:function(e,n){var r=t.matrixmult(e,n);return new t(r)},residuals:function(e,n){return t.matrixsubtract(e,n)},ssr:function(e,t){for(var n=0,r=0;r<e.length;r++)n+=Math.pow(e[r]-t,2);return n},sse:function(e,t){for(var n=0,r=0;r<e.length;r++)n+=Math.pow(e[r]-t[r],2);return n},sst:function(e,t){for(var n=0,r=0;r<e.length;r++)n+=Math.pow(e[r]-t,2);return n},matrixsubtract:function(e,n){for(var r=new Array(e.length),s=0;s<e.length;s++){r[s]=new Array(e[s].length);for(var a=0;a<e[s].length;a++)r[s][a]=e[s][a]-n[s][a]}return t(r)}}),t.jStat=t,t)},720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=l(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=l(e,e<0?-1:0,!1),i&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?b:g;if(t){if(e<0)return b;if(e>=p)return k}else{if(e<=-f)return I;if(e+1>=f)return w}return e<0?o(-e,t).neg():l(e%d|0,e/d|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=o(u(n,8)),a=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+l),n);if(l<8){var d=o(u(n,l));a=a.mul(d).add(o(h))}else a=(a=a.mul(s)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=i(1<<24),g=i(0);n.ZERO=g;var b=i(0,!0);n.UZERO=b;var x=i(1);n.ONE=x;var y=i(1,!0);n.UONE=y;var v=i(-1);n.NEG_ONE=v;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=l(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(u(e,6),this.unsigned),a=this,i="";;){var l=a.div(s),c=(a.sub(l.mul(s)).toInt()>>>0).toString(e);if((a=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(x)},S.neg=S.negate,S.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=a+(65535&e.low))>>>16,d+=(p+=s+u)>>>16,c+=(d+=n+o)>>>16,c+=t+i,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},S.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,b=0,x=0,y=0;return x+=(y+=i*p)>>>16,b+=(x+=a*p)>>>16,x&=65535,b+=(x+=i*d)>>>16,f+=(b+=s*p)>>>16,b&=65535,f+=(b+=a*d)>>>16,b&=65535,f+=(b+=i*c)>>>16,f+=n*p+s*d+a*c+i*u,l((x&=65535)<<16|(y&=65535),(f&=65535)<<16|(b&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return y;a=b}else{if(this.eq(I))return e.eq(x)||e.eq(v)?I:e.eq(I)?x:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?x:v:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(I))return this.unsigned?b:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(s);)p=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=x),a=a.add(d),s=s.sub(p)}return a},S.div=S.divide,S.modulo=function(e){return r(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return l(~this.low,~this.high,this.unsigned)},S.and=function(e){return r(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return r(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return r(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},377:(e,t,n)=>{var r=n(832),s=n(652),a=n(801),i=n(30),o=n(618),l=n(49),u=n(971);u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},832:function(e,t,n){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.alea=l}(0,e=n.nmd(e),n.amdD)},49:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.tychei=l}(0,e=n.nmd(e),n.amdD)},652:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor128=l}(0,e=n.nmd(e),n.amdD)},618:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},30:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},971:function(e,t,n){var r;!function(s,a,i){var o,l=256,u=6,c="random",h=i.pow(l,u),d=i.pow(2,52),p=2*d,f=l-1;function m(e,t,n){var r=[],f=y(x((t=1==t?{entropy:!0}:t||{}).entropy?[e,v(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(s.crypto||s.msCrypto).getRandomValues(e)),v(e)}catch(e){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,v(a)]}}():e,3),r),m=new g(r),w=function(){for(var e=m.g(u),t=h,n=0;e<d;)e=(e+n)*l,t*=l,n=m.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return w.int32=function(){return 0|m.g(4)},w.quick=function(){return m.g(4)/4294967296},w.double=w,y(v(m.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&b(r,m),e.state=function(){return b(m,{})}),n?(i[c]=e,t):e})(w,f,"global"in t?t.global:this==i,t.state)}function g(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<l;)i[s]=s++;for(s=0;s<l;s++)i[s]=i[a=f&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=f&s+1],n=n*l+i[f&(i[s]=i[a=f&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(l)}function b(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function x(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(x(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[f&s]=f&(n^=19*t[f&s])+r.charCodeAt(s++);return v(t)}function v(e){return String.fromCharCode.apply(0,e)}if(y(i.random(),a),e.exports){e.exports=m;try{o=n(42)}catch(e){}}else void 0===(r=function(){return m}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},410:()=>{},628:()=>{},601:()=>{},792:()=>{},977:()=>{},42:()=>{}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var r={};(()=>{"use strict";n.r(r),n.d(r,{ActionSpace:()=>$O,BaseStock:()=>CO,RL_brain_base:()=>AO,Reorder:()=>TO});var e={};n.r(e),n.d(e,{assertParamsValid:()=>si,computeFlatOffset:()=>bi,computeOutShape:()=>ii,getNormalizedAxes:()=>ci,isSliceContinous:()=>gi,maskToAxes:()=>ai,parseSliceParams:()=>xi,sliceInfo:()=>yi,startForAxis:()=>fi,startIndicesWithElidedDims:()=>hi,stopForAxis:()=>mi,stopIndicesWithElidedDims:()=>di,stridesForAxis:()=>pi,stridesWithElidedDims:()=>oi});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>Ac,computeOutShape:()=>Rc,segOpComputeOptimalWindowSize:()=>Ec});var s={};n.r(s),n.d(s,{ERF_A1:()=>ju,ERF_A2:()=>Ku,ERF_A3:()=>Xu,ERF_A4:()=>Yu,ERF_A5:()=>Ju,ERF_P:()=>qu,PARALLELIZE_THRESHOLD:()=>Fu,RowPartitionType:()=>Cu,SELU_SCALE:()=>Hu,SELU_SCALEALPHA:()=>Gu,applyActivation:()=>Dl,assertAndGetBroadcastShape:()=>Ua,assertAxesAreInnerMostDims:()=>Mo,assertParamsConsistent:()=>Nu,assignToTypedArray:()=>rc,axesAreInnerMostDims:()=>Fo,calculateShapes:()=>Vu,checkEinsumDimSizes:()=>dc,checkPadOnDimRoundingMode:()=>zi,combineLocations:()=>_o,combineRaggedTensorToTensorShapes:()=>Tu,complexWithEvenIndex:()=>ec,complexWithOddIndex:()=>tc,computeConv2DInfo:()=>Ci,computeConv3DInfo:()=>Ti,computeDefaultPad:()=>Ei,computeDilation2DInfo:()=>Si,computeOptimalWindowSize:()=>_u,computeOutAndReduceShapes:()=>Do,computeOutShape:()=>$u,computePool2DInfo:()=>Ni,computePool3DInfo:()=>$i,convertConv2DDataFormat:()=>Li,decodeEinsumEquation:()=>cc,eitherStridesOrDilationsAreOne:()=>Oi,expandShapeToKeepDim:()=>Oo,exponent:()=>ac,exponents:()=>sc,fromStringArrayToUint8:()=>_c,fromUint8ToStringArray:()=>Fc,getAxesPermutation:()=>Lo,getBroadcastDims:()=>Ba,getComplexWithIndex:()=>nc,getEinsumComputePath:()=>pc,getEinsumPermutation:()=>hc,getFusedBiasGradient:()=>_l,getFusedDyActivation:()=>Fl,getImageCenter:()=>Du,getInnerMostAxes:()=>Po,getPermuted:()=>Mu,getRaggedRank:()=>Ru,getReductionAxes:()=>Wa,getReshaped:()=>Ou,getReshapedPermuted:()=>Lu,getRowPartitionTypesHelper:()=>Eu,getSliceBeginCoords:()=>zu,getSliceSize:()=>Pu,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>bc,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>xc,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>yc,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>kc,getSparseReshapeInputOutputMismatchErrorMessage:()=>Sc,getSparseReshapeInputOutputMultipleErrorMessage:()=>Ic,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>vc,getSparseReshapeNegativeOutputDimErrorMessage:()=>wc,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Tc,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Nc,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>$c,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Cc,getUndoAxesPermutation:()=>zo,isIdentityPermutation:()=>fc,log:()=>ir,mergeRealAndImagArrays:()=>Zu,prepareAndValidate:()=>Bu,prepareSplitSize:()=>gc,segment_util:()=>t,shouldFuse:()=>Ol,slice_util:()=>e,splitRealAndImagArrays:()=>Qu,stridesOrDilationsArePositive:()=>Mi,tupleValuesAreOne:()=>Di,upcastType:()=>is,validateDefaultValueShape:()=>Au,validateInput:()=>Uu,validateUpdateShape:()=>Wu,warn:()=>ar});var a={};n.r(a),n.d(a,{addImpl:()=>ov,bincountImpl:()=>Qv,bincountReduceImpl:()=>ew,castImpl:()=>nv,ceilImpl:()=>rw,concatImpl:()=>uw,equalImpl:()=>qw,expImpl:()=>rk,expm1Impl:()=>lk,floorImpl:()=>Nk,gatherNdImpl:()=>_k,gatherV2Impl:()=>Ok,greaterEqualImpl:()=>Bk,greaterImpl:()=>Lk,lessEqualImpl:()=>Qk,lessImpl:()=>Yk,linSpaceImpl:()=>nI,logImpl:()=>sI,maxImpl:()=>yI,maximumImpl:()=>kI,minimumImpl:()=>FI,multiplyImpl:()=>zw,negImpl:()=>UI,notEqualImpl:()=>YI,prodImpl:()=>uS,raggedGatherImpl:()=>dS,raggedRangeImpl:()=>mS,raggedTensorToTensorImpl:()=>wS,rangeImpl:()=>IS,rsqrtImpl:()=>OS,scatterImpl:()=>zS,sigmoidImpl:()=>jy,simpleAbsImpl:()=>gv,sliceImpl:()=>Xv,sparseFillEmptyRowsImpl:()=>sN,sparseReshapeImpl:()=>iN,sparseSegmentReductionImpl:()=>lN,sqrtImpl:()=>pN,squaredDifferenceImpl:()=>bN,stridedSliceImpl:()=>kN,stringNGramsImpl:()=>NN,stringSplitImpl:()=>TN,stringToHashBucketFastImpl:()=>RN,subImpl:()=>fk,tileImpl:()=>ON,topKImpl:()=>zN,transposeImpl:()=>Iv,uniqueImpl:()=>GN});class i{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class o{refCount(e){return l("refCount")}incRef(e){return l("incRef")}timerAvailable(){return!0}time(e){return l("time")}read(e){return l("read")}readSync(e){return l("readSync")}readToGPU(e,t){return l("readToGPU")}numDataIds(){return l("numDataIds")}disposeData(e,t){return l("disposeData")}write(e,t,n){return l("write")}move(e,t,n,r,s){return l("move")}createTensorFromGPUData(e,t,n){return l("createTensorFromGPUData")}memory(){return l("memory")}floatPrecision(){return l("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return l("dispose")}}function l(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function u(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,d(e,t,n)}function c(e,t,n){return Math.max(e,Math.min(t,n))}function h(e){return e%2==0?e:e+1}function d(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function p(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function f(e,t,n=""){p(b(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function m(e){p(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function g(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function b(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function x(e){return e%1==0}function y(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function v(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function w(e,t=(e=>0),n,r){return new Promise(((s,a)=>{let i=0;const o=()=>{if(e())return void s();i++;const l=t(i);null!=n&&i>=n?a():null!=r?r(o,l):setTimeout(o,l)};o()}))}function k(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function I(e,t){const n=t.length;return p((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),p(e.every((e=>x(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function S(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:I(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function N(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function $(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function C(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function T(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function E(e){return"string"==typeof e||e instanceof String}function R(e){return"number"==typeof e}function A(e){return Array.isArray(e)?A(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":R(e)?"float32":E(e)?"string":"boolean"==typeof e?"bool":"float32"}function F(e){return!!(e&&e.constructor&&e.call&&e.apply)}function _(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function D(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function O(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=O(e+t*o,i,n,r)}return s}function M(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return O(0,e,t,n)}function L(e,t){const n=z(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function z(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function P(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return M(e,new Float32Array(n));if("int32"===t)return M(e,new Int32Array(n));if("bool"===t)return M(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function B(e){e.forEach((t=>{p(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function W(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function U(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function V(e){return e&&e.then&&"function"==typeof e.then}const G="tfjsflags";class H{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=q,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(j().getBool("IS_TEST")||j().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];j().getBool("IS_TEST")||j().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(V(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);G in e&&e[G].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function q(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function j(){return X}let K,X=null;function Y(){if(null==K){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}K=e}return K}function J(e,t){const n=function(){const e=Y();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const Z="Abs",Q="Acos",ee="Acosh",te="Add",ne="AddN",re="All",se="Any",ae="ArgMax",ie="ArgMin",oe="Asin",le="Asinh",ue="Atan",ce="Atanh",he="Atan2",de="AvgPool",pe="AvgPoolGrad",fe="AvgPool3D",me="AvgPool3DGrad",ge="BatchMatMul",be="BatchToSpaceND",xe="Bincount",ye="BroadcastArgs",ve="Cast",we="Ceil",ke="ClipByValue",Ie="Complex",Se="ComplexAbs",Ne="Concat",$e="Conv2D",Ce="Conv2DBackpropFilter",Te="Conv2DBackpropInput",Ee="Conv3D",Re="Conv3DBackpropFilterV2",Ae="Conv3DBackpropInputV2",Fe="Cos",_e="Cosh",De="Cumprod",Oe="Cumsum",Me="CropAndResize",Le="DenseBincount",ze="DepthToSpace",Pe="DepthwiseConv2dNative",Be="DepthwiseConv2dNativeBackpropFilter",We="DepthwiseConv2dNativeBackpropInput",Ue="Diag",Ve="Dilation2D",Ge="Dilation2DBackpropInput",He="Dilation2DBackpropFilter",qe="RealDiv",je="Einsum",Ke="Elu",Xe="EluGrad",Ye="Erf",Je="Equal",Ze="Exp",Qe="ExpandDims",et="Expm1",tt="FFT",nt="Fill",rt="FlipLeftRight",st="Floor",at="FloorDiv",it="FusedBatchNorm",ot="GatherV2",lt="GatherNd",ut="Greater",ct="GreaterEqual",ht="Identity",dt="IFFT",pt="Imag",ft="IsFinite",mt="IsInf",gt="IsNan",bt="LeakyRelu",xt="Less",yt="LessEqual",vt="LinSpace",wt="Log",kt="Log1p",It="LogicalAnd",St="LogicalNot",Nt="LogicalOr",$t="LRN",Ct="LRNGrad",Tt="Max",Et="Maximum",Rt="MaxPool",At="MaxPoolGrad",Ft="MaxPool3D",_t="MaxPool3DGrad",Dt="MaxPoolWithArgmax",Ot="Mean",Mt="Min",Lt="Minimum",zt="MirrorPad",Pt="Mod",Bt="Multinomial",Wt="Multiply",Ut="Neg",Vt="NotEqual",Gt="NonMaxSuppressionV3",Ht="NonMaxSuppressionV4",qt="NonMaxSuppressionV5",jt="OnesLike",Kt="OneHot",Xt="Pack",Yt="PadV2",Jt="Pow",Zt="Prelu",Qt="Prod",en="RaggedGather",tn="RaggedRange",nn="RaggedTensorToTensor",rn="Range",sn="Real",an="Reciprocal",on="Relu",ln="Reshape",un="ResizeNearestNeighbor",cn="ResizeNearestNeighborGrad",hn="ResizeBilinear",dn="ResizeBilinearGrad",pn="Relu6",fn="Reverse",mn="Round",gn="Rsqrt",bn="ScatterNd",xn="SearchSorted",yn="Select",vn="Selu",wn="Slice",kn="Sin",In="Sinh",Sn="Sign",Nn="Sigmoid",$n="Softplus",Cn="Sqrt",Tn="Sum",En="SpaceToBatchND",Rn="SplitV",An="Softmax",Fn="SparseFillEmptyRows",_n="SparseReshape",Dn="SparseSegmentMean",On="SparseSegmentSum",Mn="SparseToDense",Ln="SquaredDifference",zn="Square",Pn="StridedSlice",Bn="StringNGrams",Wn="StringSplit",Un="StringToHashBucketFast",Vn="Sub",Gn="Tan",Hn="Tanh",qn="Tile",jn="TopK",Kn="Transform",Xn="Transpose",Yn="Unique",Jn="Unpack",Zn="UnsortedSegmentSum",Qn="ZerosLike",er="Step",tr="RotateWithOffset",nr="_FusedMatMul",rr="FusedConv2D",sr="FusedDepthwiseConv2D";function ar(...e){j().getBool("IS_TEST")||j().getBool("PROD")||console.warn(...e)}function ir(...e){j().getBool("IS_TEST")||j().getBool("PROD")||console.log(...e)}const or=J("kernelRegistry",(()=>new Map)),lr=J("gradRegistry",(()=>new Map));function ur(e,t){const n=fr(e,t);return or.get(n)}function cr(e){return lr.get(e)}function hr(e){const t=or.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function dr(e){const{kernelName:t,backendName:n}=e,r=fr(t,n);or.has(r)&&ar(`The kernel '${t}' for backend '${n}' is already registered`),or.set(r,e)}function pr(e){const{kernelName:t}=e;lr.has(t)&&j().getBool("DEBUG")&&ar(`Overriding the gradient for '${t}'`),lr.set(t,e)}function fr(e,t){return`${t}_${e}`}var mr=n(720);const gr=n.n(mr)()||mr;function br(e){return gr.fromString(e,!0,16)}const xr=br("c3a5c85c97cb3127"),yr=br("b492b66fbe98f273"),vr=br("9ae16a3b2f90404f");function wr(e){return e.xor(e.shru(47))}function kr(e,t,n){const r=e.slice(t,t+n);return gr.fromBytes(Array.from(r),!0,!0)}function Ir(e,t){return kr(e,t,8)}function Sr(e,t){return kr(e,t,4)}function Nr(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function $r(e,t,n=br("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Cr(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=Nr(a.add(s).add(r),21);const i=s;return s=(s=s.add(t)).add(n),a=a.add(Nr(s,44)),[s.add(r),a.add(i)]}(Ir(e,t),Ir(e,t+8),Ir(e,t+16),Ir(e,t+24),n,r)}function Tr(e,t=e.length){const n=gr.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=vr.add(2*t),r=Ir(e,0).add(vr),s=Ir(e,t-8);return $r(Nr(s,37).mul(n).add(r),Nr(r,25).add(s).mul(n),n)}if(t>=4){const n=vr.add(2*t);return $r(Sr(e,0).shl(3).add(t),Sr(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return wr(vr.mul(n).xor(xr.mul(r))).mul(vr)}return vr}(e,t):function(e,t=e.length){const n=vr.add(2*t),r=Ir(e,0).mul(yr),s=Ir(e,8),a=Ir(e,t-8).mul(n),i=Ir(e,t-16).mul(vr);return $r(Nr(r.add(s),43).add(Nr(a,30)).add(i),r.add(Nr(s.add(vr),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=vr.add(2*t),r=Ir(e,0).mul(vr),s=Ir(e,8),a=Ir(e,t-8).mul(n),i=Ir(e,t-16).mul(vr),o=Nr(r.add(s),43).add(Nr(a,30)).add(i),l=$r(o,r.add(Nr(s.add(vr),18)).add(a),n),u=Ir(e,16).mul(n),c=Ir(e,24),h=o.add(Ir(e,t-32)).mul(n),d=l.add(Ir(e,t-24)).mul(n);return $r(Nr(u.add(c),43).add(Nr(h,30)).add(d),u.add(Nr(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(yr).add(113),a=wr(s.mul(vr).add(113)).mul(vr),i=[gr.UZERO,gr.UZERO],o=[gr.UZERO,gr.UZERO];r=r.mul(vr).add(Ir(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{r=Nr(r.add(s).add(i[0]).add(Ir(e,l+8)),37).mul(yr),s=Nr(s.add(i[1]).add(Ir(e,l+48)),42).mul(yr),r=r.xor(o[1]),s=s.add(i[0]).add(Ir(e,l+40)),a=Nr(a.add(o[0]),33).mul(yr),i=Cr(e,l,i[1].mul(yr),r.add(o[0])),o=Cr(e,l+32,a.add(o[1]),s.add(Ir(e,l+16))),[a,r]=[r,a],l+=64}while(l!==u);const h=yr.add(a.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Nr(r.add(s).add(i[0]).add(Ir(e,l+8)),37).mul(h),s=Nr(s.add(i[1]).add(Ir(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(i[0].mul(9).add(Ir(e,l+40))),a=Nr(a.add(o[0]),33).mul(h),i=Cr(e,l,i[1].mul(h),r.add(o[0])),o=Cr(e,l+32,a.add(o[1]),s.add(Ir(e,l+16))),[a,r]=[r,a],$r($r(i[0],o[0],h).add(wr(s).mul(xr)).add(a),$r(i[1],o[1],h).add(r),h)}function Er(e,t){return"string"===t?Fr(e):Rr([e],t)}function Rr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Or(e)),j().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Ar(){return j().platform.now()}function Fr(e,t="utf-8"){return t=t||"utf-8",j().platform.encode(e,t)}function _r(e,t="utf-8"){return t=t||"utf-8",j().platform.decode(e,t)}function Dr(e){return j().platform.isTypedArray(e)}function Or(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||V(e)||null==e||Dr(e)&&n)t.push(e);else if(Array.isArray(e)||Dr(e))for(let r=0;r<e.length;++r)Or(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let s=0;s<=r;s++)Or(e[s],t,n)}return t}class Mr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new zr)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=Ar();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:Ar()-i})}if(j().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Lr(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function Lr(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class zr{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?v(`${r}ms`,9):r.error,o=v(e,25),l=t.rank,u=t.size,c=v(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const Pr=20,Br=3,Wr=7;function Ur(e,t,n,r){const s=D(t),a=function(e,t,n,r){const s=g(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?qr(e):e;if(o>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],Vr(l[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=Hr(e,t,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Vr(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(Wr))} + ${parseFloat(e[1].toFixed(Wr))}j`:E(e)?`'${e}'`:"bool"===n?Gr(e):parseFloat(e.toFixed(Wr)).toString(),v(r,t)}function Gr(e){return 0===e?"false":"true"}function Hr(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[Vr(qr(e)[0],0,n)]:"bool"===n?[Gr(e[0])]:[e[0].toString()];if(1===l){if(o>Pr){const t=Br*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-Br)*i,o*i));return"complex64"===n&&(r=qr(r),a=qr(a)),["["+r.map(((e,t)=>Vr(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>Vr(e,s[o-Br+t],n))).join(", ")+"]"]}return["["+("complex64"===n?qr(e):Array.from(e)).map(((e,t)=>Vr(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>Pr){for(let t=0;t<Br;t++){const r=t*h,a=r+h;d.push(...Hr(e.slice(r,a),u,n,c,s,!1))}d.push("...");for(let t=o-Br;t<o;t++){const r=t*h,a=r+h;d.push(...Hr(e.slice(r,a),u,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,a=r+h;d.push(...Hr(e.slice(r,a),u,n,c,s,t===o-1))}const p=2===l?",":"";d[0]="["+(o>0?d[0]+p:"");for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function qr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class jr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=g(e),null!=n){const e=n.length;p(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||$(t,this.size),this.strides=D(e)}set(e,...t){0===t.length&&(t=[0]),p(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Kr().makeTensor(this.values,this.shape,this.dtype)}}let Kr=null,Xr=null,Yr=null;class Jr{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=g(e),this.strides=D(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Xr.buffer(this.shape,this.dtype,e)}bufferSync(){return Xr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return M(this.shape,e,"complex64"===this.dtype)}arraySync(){return M(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Kr().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>_r(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Kr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Kr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>_r(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Kr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Kr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Xr.print(this,e)}clone(){return this.throwIfDisposed(),Xr.clone(this)}toString(e=!1){return Ur(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Xr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Kr().makeVariable(this,e,t,n)}}function Zr(){return J("Tensor",(()=>Jr))}Object.defineProperty(Jr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Zr();class Qr extends Jr{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!b(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Kr().disposeTensor(this),this.dataId=e.dataId,Kr().incRef(this,null)}dispose(){Kr().disposeVariable(this),this.isDisposedInternal=!0}}var es,ts,ns,rs,ss;Object.defineProperty(Qr,Symbol.hasInstance,{value:e=>e instanceof Jr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(es||(es={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(ts||(ts={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ns||(ns={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(rs||(rs={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ss||(ss={}));const as={float32:rs,int32:ts,bool:ns,complex64:ss};function is(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return as[e][t]}function os(e){return is(e,"int32")}function ls(e,t){if(e.dtype===t.dtype)return[e,t];const n=is(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function us(e,t){return t.some((t=>t.id===e.id))}function cs(e){const t=[];return hs(e,t,new Set),t}function hs(e,t,n){if(null==e)return;if(e instanceof Jr)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),hs(r,t,n))}}function ds(e){return null!=e.kernelName}class ps{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class fs{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ps}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ar(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Mr(this.backendInstance),!0}setupRegisteredKernels(){hr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){hr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof o||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ar(`Initialization of backend ${e} failed`),ar(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return ar(`Initialization of backend ${e} failed`),ar(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return fs.nextTensorId++}nextVariableId(){return fs.nextVariableId++}clone(e){const t=gs.runKernel(ht,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return gs.runKernel(ve,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==ur(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=ds(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ds(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const l=ur(t,this.backendName);p(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=ds(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=cr(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(p(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&E(e[0])&&(s=e.map((e=>Fr(e))));const a=r.write(s,t,n),i=new Jr(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new Jr(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new Qr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*T(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Qr||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*T(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=cr(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=z(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=cs(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(p(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));p(s instanceof Jr,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=L(g(e),"float32");return gs.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!b(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),bs);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return p(F(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;p(t.every((e=>e instanceof Jr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),p(n.value instanceof Jr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),p(F(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];p(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),p(a.every((e=>e instanceof Jr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Ar(),n=await this.backend.time(e);return n.wallMs=Ar()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ps;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ms(){const e=Y();if(null==e._tfengine){const t=new H(e);e._tfengine=new fs(t)}var t;return t=e._tfengine.ENV,X=t,Kr=()=>e._tfengine,e._tfengine}fs.nextTensorId=0,fs.nextVariableId=0;const gs=ms();function bs(e,t){const n={a:e,b:t};return gs.runKernel(te,n)}let xs;function ys(e){if(void 0!==xs)return xs;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function vs(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const ws=j();function ks(e,t){let n=e;if(Dr(e))return"string"===t?[]:[e.length];if("object"==typeof e){if("texture"in e){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if("buffer"in e&&!(e.buffer instanceof ArrayBuffer))return[e.buffer.size/(null==t?4:T(t))]}if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Dr(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&j().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Is(e,r,[]),r}function Is(e,t,n){if(n=n||[],!Array.isArray(e)&&!Dr(e))return void p(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));p(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),p(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Is(e[t],r,n.concat(t))}function Ss(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Ns(e,t,n,r="numeric"){if(e instanceof Jr)return Ss(r,e.dtype,t,n),e;let s=A(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Ss(r,s,t,n),null==e||!Dr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=ks(e,s);Dr(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?Rr(e,s):Or(e,[],!0);return gs.makeTensor(i,a,s)}function $s(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>Ns(e,`${t}[${s}]`,n,r)))}ws.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),ws.registerFlag("IS_BROWSER",(()=>vs())),ws.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),ws.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ws.registerFlag("PROD",(()=>!1)),ws.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ws.getBool("DEBUG"))),ws.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ws.registerFlag("IS_TEST",(()=>!1)),ws.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),ws.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),ws.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),ws.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const Cs="__op";function Ts(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Cs;const s=(...e)=>{gs.startScope(n);try{const t=r(...e);return V(t)&&console.error("Cannot return a Promise inside of tidy."),gs.endScope(t),t}catch(e){throw gs.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const Es=Ts({complex_:function(e,t){const n=Ns(e,"real","complex"),r=Ns(t,"imag","complex");f(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return gs.runKernel(Ie,s)}});function Rs(e,t,n,r){if(null==r)r=A(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if("object"==typeof e&&("texture"in e||"buffer"in e&&!(e.buffer instanceof ArrayBuffer))){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return gs.backend.createTensorFromGPUData(e,t||n,r)}if(!Dr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){B(t);const e=g(t),r=g(n);p(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==g(t.slice(e));p(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Dr(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Rr(e,r):Or(e,[],!0),gs.makeTensor(e,t,r)}function As(e,t,n){return Rs(e,t,ks(e,n),n)}const Fs=4;async function _s(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+Fs*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=Fs,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Ds(await Promise.all(r)),specs:n}}function Ds(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const Os="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ms(e){return Os?Buffer.byteLength(e):new Blob([e]).size}function Ls(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function zs(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Ps(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ms(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ms(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}class Bs{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Bs.instance&&(Bs.instance=new Bs),Bs.instance}static registerSaveRouter(e){Bs.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Bs.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Bs.getHandlers(e,"save")}static getLoadHandlers(e,t){return Bs.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Bs.getInstance().loadRouters:Bs.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const Ws="tensorflowjs",Us="models_store",Vs="model_info_store";function Gs(){if(!j().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Hs(e){const t=e.result;t.createObjectStore(Us,{keyPath:"modelPath"}),t.createObjectStore(Vs,{keyPath:"modelPath"})}class qs{constructor(e){if(this.indexedDB=Gs(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Ws,1);r.onupgradeneeded=()=>Hs(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Us,"readonly"),r=t.objectStore(Us).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=Ps(t),a=s.transaction(Vs,"readwrite");let i=a.objectStore(Vs);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=s.transaction(Us,"readwrite");const o=l.objectStore(Us).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=a.objectStore(Vs);const t=i.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}qs.URL_SCHEME="indexeddb://";const js=e=>{return j().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(qs.URL_SCHEME)?(t=e.slice(qs.URL_SCHEME.length),new qs(t)):null;var t};Bs.registerSaveRouter(js),Bs.registerLoadRouter(js);class Ks{constructor(){this.indexedDB=Gs()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Ws,1);n.onupgradeneeded=()=>Hs(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Vs,"readonly"),a=s.objectStore(Vs).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(qs.URL_SCHEME)?t.slice(qs.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Ws,1);r.onupgradeneeded=()=>Hs(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(Vs,"readwrite"),i=a.objectStore(Vs),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{l=s.transaction(Us,"readwrite");const r=l.objectStore(Us).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const Xs="/",Ys="tensorflowjs_models",Js="info",Zs="model_topology",Qs="weight_specs",ea="weight_data",ta="model_metadata";function na(e){return{info:[Ys,e,Js].join(Xs),topology:[Ys,e,Zs].join(Xs),weightSpecs:[Ys,e,Qs].join(Xs),weightData:[Ys,e,ea].join(Xs),modelMetadata:[Ys,e,ta].join(Xs)}}function ra(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function sa(e){const t=e.split(Xs);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Xs)}class aa{constructor(e){if(!j().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=na(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Ps(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Os)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw ra(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Os){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}aa.URL_SCHEME="localstorage://";const ia=e=>{return j().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(aa.URL_SCHEME)?(t=e.slice(aa.URL_SCHEME.length),new aa(t)):null;var t};Bs.registerSaveRouter(ia),Bs.registerLoadRouter(ia);class oa{constructor(){p(j().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),p("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Ys+Xs,n=Xs+Js;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[sa(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=na(e=(t=e).startsWith(aa.URL_SCHEME)?t.slice(aa.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return ra(n),r}}class la{constructor(){this.managers={}}static getInstance(){return null==la.instance&&(la.instance=new la),la.instance}static registerManager(e,t){p(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),p(e.length>0,(()=>"scheme must not be an empty string."));const n=la.getInstance();p(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=la.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(la.getInstance().managers)}}class ua{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&j().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}isTypedArray(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}}if(j().get("IS_BROWSER")){j().setPlatform("browser",new ua);try{la.registerManager(aa.URL_SCHEME,new oa)}catch(e){}try{la.registerManager(qs.URL_SCHEME,new Ks)}catch(e){}}let ca;function ha(e,t="float32",n){return t=t||"float32",B(e),new jr(e,t,n)}j().get("IS_NODE")&&!j().get("IS_BROWSER")&&j().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=j().global.fetch?j().global.fetch(e,t):(null==ca&&(ca=n(410)),ca(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});const da=Ts({cast_:function(e,t){const n=Ns(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return gs.runKernel(ve,r,s)}}),pa=Ts({clone_:function(e){const t={x:Ns(e,"x","clone","string_or_numeric")};return gs.runKernel(ht,t)}});function fa(){return gs}function ma(){return gs.memory()}function ga(e,t){return gs.tidy(e,t)}function ba(e){cs(e).forEach((e=>e.dispose()))}function xa(e){return gs.keep(e)}function ya(e,t,n=1){return gs.registerBackend(e,t,n)}ms(),Xr={buffer:ha,cast:da,clone:pa,print:function(e,t=!1){console.log(e.toString(t))}},Yr=function(e){j().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const va=Ts({add_:function(e,t){let n=Ns(e,"a","add"),r=Ns(t,"b","add");[n,r]=ls(n,r);const s={a:n,b:r};return gs.runKernel(te,s)}}),wa=Ts({floorDiv_:function(e,t){let n=Ns(e,"a","floorDiv"),r=Ns(t,"b","floorDiv");[n,r]=ls(n,r);const s={a:n,b:r};return gs.runKernel(at,s)}}),ka=Ts({div_:function(e,t){let n=Ns(e,"a","div"),r=Ns(t,"b","div");if([n,r]=ls(n,r),"int32"===n.dtype&&"int32"===r.dtype)return wa(n,r);const s={a:n,b:r};return gs.runKernel(qe,s,{})}}),Ia=Ts({mul_:function(e,t){let n=Ns(e,"a","mul"),r=Ns(t,"b","mul");[n,r]=ls(n,r);const s={a:n,b:r};return gs.runKernel(Wt,s)}}),Sa=Ts({sqrt_:function(e){const t={x:Ns(e,"x","sqrt","float32")};return gs.runKernel(Cn,t)}}),Na=Ts({square_:function(e){const t=Ns(e,"x","square");return gs.runKernel("Square",{x:t},{})}}),$a=Ts({zerosLike_:function(e){const t={x:Ns(e,"x","zerosLike")};return gs.runKernel(Qn,t)}});function Ca(e){return gs.customGrad(e)}function Ta(e,t){if((Dr(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Dr(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Rs(e,[],[],t)}class Ea{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ra{constructor(){this.classNameMap={}}static getMap(){return null==Ra.instance&&(Ra.instance=new Ra),Ra.instance}static register(e){Ra.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Aa(e){p(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),p("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),p(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Ra.register(e)}class Fa extends Ea{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return ba(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){p(F(e),(()=>"The f passed in variableGrads(f) must be a function")),p(null==t||Array.isArray(t)&&t.every((e=>e instanceof Qr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in gs.registeredVariables)t.push(gs.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;p((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=gs.gradients(e,t,null,!0);p(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),p(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&ba(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Ta(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Fa,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class _a extends Fa{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=gs.backend.epsilon())}static get className(){return"Adadelta"}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=gs.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:ga((()=>$a(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:ga((()=>$a(r).variable(!1)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;ga((()=>{const e=va(Ia(a,this.rho),Ia(Na(s),1-this.rho)),t=Ia(ka(Sa(va(i,this.epsilon)),Sa(va(a,this.epsilon))),s),n=va(Ia(i,this.rho),Ia(Na(t),1-this.rho));a.assign(e),i.assign(n);const o=va(Ia(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ba(this.accumulatedGrads.map((e=>e.variable))),ba(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Da(e,t,n){B(e);const r={shape:e,value:t,dtype:n};return gs.runKernel(nt,{},r)}class Oa extends Fa{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}static get className(){return"Adagrad"}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=gs.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:ga((()=>Da(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;ga((()=>{const e=va(a,Na(s));a.assign(e);const t=va(Ia(ka(s,Sa(va(e,gs.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ba(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const Ma=Ts({pow_:function(e,t){let n=Ns(e,"base","pow"),r=Ns(t,"exp","pow");[n,r]=ls(n,r);const s={a:n,b:r};return gs.runKernel(Jt,s)}}),La=Ts({sub_:function(e,t){let n=Ns(e,"a","sub"),r=Ns(t,"b","sub");[n,r]=ls(n,r);const s={a:n,b:r};return gs.runKernel(Vn,s)}});class za extends Fa{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ga((()=>{this.accBeta1=Ta(t).variable(),this.accBeta2=Ta(n).variable()})),null==r&&(this.epsilon=gs.backend.epsilon())}static get className(){return"Adam"}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ga((()=>{const n=La(1,this.accBeta1),r=La(1,this.accBeta2);t.forEach(((t,s)=>{const a=gs.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:ga((()=>$a(a).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:ga((()=>$a(a).variable(!1)))});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=va(Ia(o,this.beta1),Ia(i,1-this.beta1)),c=va(Ia(l,this.beta2),Ia(Na(i),1-this.beta2)),h=ka(u,n),d=ka(c,r);o.assign(u),l.assign(c);const p=va(Ia(ka(h,va(Sa(d),this.epsilon)),-this.learningRate),a);a.assign(p)})),this.accBeta1.assign(Ia(this.accBeta1,this.beta1)),this.accBeta2.assign(Ia(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ba(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&ba(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),ga((()=>{this.accBeta1.assign(Ma(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ma(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const Pa=Ts({abs_:function(e){const t=Ns(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return gs.runKernel(Se,e)}{const e={x:t};return gs.runKernel(Z,e)}}});function Ba(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function Wa(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function Ua(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const Va=Ts({maximum_:function(e,t){let n=Ns(e,"a","maximum"),r=Ns(t,"b","maximum");[n,r]=ls(n,r),"bool"===n.dtype&&(n=da(n,"int32"),r=da(r,"int32")),Ua(n.shape,r.shape);const s={a:n,b:r};return gs.runKernel(Et,s)}});class Ga extends Fa{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ga((()=>{this.iteration=Ta(0).variable(),this.accBeta1=Ta(t).variable()})),null==r&&(this.epsilon=gs.backend.epsilon())}static get className(){return"Adamax"}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ga((()=>{const n=La(1,this.accBeta1),r=ka(-this.learningRate,va(Ia(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=gs.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:$a(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:$a(a).variable(!1)});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=va(Ia(o,this.beta1),Ia(i,1-this.beta1)),c=Ia(l,this.beta2),h=Pa(i),d=Va(c,h);o.assign(u),l.assign(d);const p=va(Ia(ka(r,n),ka(u,va(d,this.epsilon))),a);a.assign(p)})),this.iteration.assign(va(this.iteration,1)),this.accBeta1.assign(Ia(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ba(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&ba(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Ha extends Fa{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}static get className(){return"SGD"}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=gs.registeredVariables[t];ga((()=>{const e=va(Ia(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=xa(Ta(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class qa extends Ha{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ta(this.momentum)}static get className(){return"Momentum"}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=gs.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:ga((()=>$a(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&ga((()=>{let e;const t=va(Ia(this.m,s),a);e=this.useNesterov?va(Ia(this.c,va(a,Ia(t,this.m))),r):va(Ia(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ba(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class ja extends Fa{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=gs.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}static get className(){return"RMSProp"}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=gs.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:ga((()=>$a(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:ga((()=>$a(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:ga((()=>$a(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;ga((()=>{const e=va(Ia(i,this.decay),Ia(Na(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=va(Ia(t,this.decay),Ia(a,1-this.decay)),l=ka(Ia(a,this.learningRate),Sa(La(e,va(Na(s),this.epsilon)))),u=va(Ia(o,this.momentum),l);i.assign(e),t.assign(s),o.assign(u);const c=La(r,u);r.assign(c)}else{const e=va(Ia(i,this.decay),Ia(Na(a),1-this.decay)),t=va(Ia(o,this.momentum),ka(Ia(a,this.learningRate),Sa(va(e,this.epsilon))));i.assign(e),o.assign(t);const n=La(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ba(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&ba(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&ba(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Ka=[_a,Oa,za,Ga,qa,ja,Ha];function Xa(e){return new Promise((e=>setTimeout(e))).then(e)}class Ya{constructor(e){if(!j().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ya.URL_SCHEME)&&(e=e.slice(Ya.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=zs(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await Xa((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Xa((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Ps(e)}}}}function Ja(e,t,n,r){!function(e){p(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){p(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),p(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),p(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function Za(e,t){null==t&&(t={});const n=null==t.fetchFunc?j().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await Ja(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await Ja(s,t.onProgress,.5,1)}Ya.URL_SCHEME="downloads://",Bs.registerSaveRouter((e=>j().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ya.URL_SCHEME)?function(e="model"){return new Ya(e)}(e.slice(Ya.URL_SCHEME.length)):null));class Qa{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(p("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=j().platform.fetch,p(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&p(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=zs(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Ps(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return async function(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),function(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}(e,n,r)}(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=function(e){const t=[];for(const n of e)t.push(...n.weights);return t}(e),i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(s+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,Ls(await Za(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function ei(e){return null!=e.match(Qa.URL_SCHEME_REGEX)}Qa.URL_SCHEME_REGEX=/^https?:\/\//;const ti=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>ei(e))):ei(e),n)return function(e,t){return new Qa(e,t)}(e,t)}return null};Bs.registerSaveRouter(ti),Bs.registerLoadRouter(ti);const ni=-2,ri=-1;function si(e,t,n){const r=e.shape.length;p(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),p(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)p(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function ai(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function ii(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function oi(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function li(e,t,n){return n<=e?n:n-(t-1)}function ui(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function ci(e,t,n,r,s,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=hi(i,l,u,r,e),h=di(o,l,u,s,e),d=oi(a,l,u,e)}else for(let t=0;t<u;t++)c[t]=fi(i,r,a,e,t,l),h[t]=mi(o,s,a,e,t,l),d[t]=pi(a,t,l);return{begin:c,end:h,strides:d}}function hi(e,t,n,r,s){const a=[...s],i=ui(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=li(t,n,s);let o=r[i];e&1<<i&&(o=0),a[s]=o}return a}function di(e,t,n,r,s){const a=[...s],i=ui(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=li(t,n,s);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=c(0,a[e],s[e])}return a}function pi(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function fi(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=c(0,i,l-1),i}function mi(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o>0?c(0,i,l):c(-1,i,l-1),i}function gi(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function bi(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function xi(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{p(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(p(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function yi(e,t,n,r,s,a,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(ni),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(ri),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],b=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const s=[d.beginMask&1<<t,d.endMask&1<<t],a=[d.strides[t]>0?0:-1,d.strides[t]>0?r:r-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];const i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?r+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=r)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=vi(d.begin[t],0,d.strides[t],r,s,a),d.end[t]=vi(d.end[t],1,d.strides[t],r,s,a);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===r;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&i,f=f&&(0===t&&1===d.strides[t]||i);let o,l=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],l=!0):n?(o=1,l=!0):i&&r>=0&&(o=d.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?b.push(g[t]):t===ni&&b.push(1)}return{finalShapeSparse:b.filter(((e,t)=>d.finalShapeGatherIndices[t]!==ni)),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function vi(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}const wi=Ts({all_:function(e,t=null,n=!1){const r={x:Ns(e,"x","all","bool")},s={axis:t,keepDims:n};return gs.runKernel(re,r,s)}}),ki=Ts({any_:function(e,t=null,n=!1){const r={x:Ns(e,"x","any","bool")},s={axis:t,keepDims:n};return gs.runKernel(se,r,s)}}),Ii=Ts({argMax_:function(e,t=0){const n={x:Ns(e,"x","argMax")},r={axis:t};return gs.runKernel(ae,n,r)}});function Si(e,t,n,r,s="NHWC",a){return Ci(e,[...t,e[3]],n,a,r,null,null,Li(s))}function Ni(e,t,n,r,s,a,i="channelsLast"){const[o,l]=Ri(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return Ci(e,u,n,r,s,a,!1,i)}function $i(e,t,n,r,s,a,i="NDHWC"){const[o,l,u]=Ai(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return Ti(e,c,n,r,s,!1,h,a)}function Ci(e,t,n,r,s,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[m,g]=Ri(n),[b,x]=Ri(r),y=Fi(d,b),v=Fi(p,x),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,r,s,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=Ei(e,t,n));const a=e[1];return[_i((e[0]-t+2*r)/n+1,s),_i((a-t+2*r)/n+1,s)]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=_i((t-a+d+p)/r+1,o),h=_i((n-i+f+m)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,m,g,y,v,a,o),S=i?f*h:f;let N;return"channelsFirst"===o?N=[l,S,k,I]:"channelsLast"===o&&(N=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:y,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:x,inShape:e,outShape:N,filterShape:t}}function Ti(e,t,n,r,s,a=!1,i="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,h]=e}const[p,f,m,,g]=t,[b,x,y]=Ai(n),[v,w,k]=Ai(r),I=Fi(p,v),S=Fi(f,w),N=Fi(m,k),{padInfo:$,outDepth:C,outHeight:T,outWidth:E}=function(e,t,n,r,s,a,i,o,l,u,c){let h,d,p,f;if("valid"===e&&(e=0),"number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,r,s,a){null==s&&(s=Ei(e,t[0],r[0]));const i=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*s>=t[n]&&(i[n]=_i((e[n]-t[n]+2*s)/r[n]+1,a));return i}([t,n,r,1],[o,l,u],0,[s,a,i],e,c);d=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/s),p=Math.ceil(n/a),f=Math.ceil(r/i);const e=(d-1)*s+o-t,c=(p-1)*a+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),b=e-g,x=Math.floor(c/2),y=c-x,v=Math.floor(m/2);h={top:x,bottom:y,left:v,right:m-v,front:g,back:b,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,b,x,y,I,S,N,o),R=a?g*d:g;let A;return"channelsFirst"===i?A=[l,R,C,T,E]:"channelsLast"===i&&(A=[l,C,T,E,R]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:C,outHeight:T,outWidth:E,outChannels:R,padInfo:$,strideDepth:b,strideHeight:x,strideWidth:y,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function Ei(e,t,n,r=1){const s=Fi(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function Ri(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Ai(e){return"number"==typeof e?[e,e,e]:e}function Fi(e,t){return t<=1?e:e+(e-1)*(t-1)}function _i(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Di(e){const[t,n,r]=Ri(e);return 1===t&&1===n&&1===r}function Oi(e,t){return Di(e)||Di(t)}function Mi(e){return Ri(e).every((e=>e>0))}function Li(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function zi(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)p(x(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{p(x(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const Pi=Ts({reshape_:function(e,t){const n={x:Ns(e,"x","reshape","string_or_numeric")},r={shape:t};return gs.runKernel(ln,n,r)}}),Bi=Ts({avgPool_:function(e,t,n,r,s){const a=Ns(e,"x","avgPool","float32");p(Oi(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=Pi(a,[1,a.shape[0],a.shape[1],a.shape[2]])),p(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),zi("avgPool",r,s);const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=gs.runKernel(de,l,u);return c=da(c,a.dtype),o?Pi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Wi=Ts({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const i=Ns(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=Pi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),p(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),p("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),p("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),zi("avgPool3d",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let h=gs.runKernel(fe,u,c);return h=da(h,o.dtype),l?Pi(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Ui=Ts({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=Ns(e,"x","batchNorm"),o=Ns(t,"mean","batchNorm"),l=Ns(n,"variance","batchNorm");let u,c;null!=s&&(u=Ns(s,"scale","batchNorm")),null!=r&&(c=Ns(r,"offset","batchNorm")),p(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),p(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),p(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?Pi(e,[1,1,1,e.size]):2===e.rank?Pi(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Pi(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:a},f=gs.runKernel(it,h,d);return Pi(f,i.shape)}}),Vi=Ts({batchNorm2d_:function(e,t,n,r,s,a){const i=Ns(e,"x","batchNorm"),o=Ns(t,"mean","batchNorm"),l=Ns(n,"variance","batchNorm");let u,c;return null!=s&&(u=Ns(s,"scale","batchNorm")),null!=r&&(c=Ns(r,"offset","batchNorm")),p(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),p(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),p(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&p(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&p(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Ui(i,o,l,c,u,a)}}),Gi=Ts({batchNorm3d_:function(e,t,n,r,s,a){const i=Ns(e,"x","batchNorm"),o=Ns(t,"mean","batchNorm"),l=Ns(n,"variance","batchNorm");let u,c;return null!=s&&(u=Ns(s,"scale","batchNorm")),null!=r&&(c=Ns(r,"offset","batchNorm")),p(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),p(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),p(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&p(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&p(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Ui(i,o,l,c,u,a)}}),Hi=Ts({batchNorm4d_:function(e,t,n,r,s,a){const i=Ns(e,"x","batchNorm"),o=Ns(t,"mean","batchNorm"),l=Ns(n,"variance","batchNorm");let u,c;return null!=s&&(u=Ns(s,"scale","batchNorm")),null!=r&&(c=Ns(r,"offset","batchNorm")),p(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),p(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),p(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&p(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&p(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Ui(i,o,l,c,u,a)}}),qi=Ts({broadcastTo_:function(e,t){let n=Ns(e,"broadcastTo","x");const r=n.shape;if(B(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Pi(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return pa(n);const i={x:n},o={reps:a};return gs.runKernel(qn,i,o)}}),ji=Ts({clipByValue_:function(e,t,n){const r=Ns(e,"x","clipByValue");if(p(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return Da(r.shape,t,r.dtype);const s={x:r},a={clipValueMin:t,clipValueMax:n};return gs.runKernel(ke,s,a)}}),Ki=Ts({concat_:function(e,t=0){p(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=$s(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return pa(n[0]);const r=n,s={axis:t};return gs.runKernel(Ne,r,s)}}),Xi=Ts({concat1d_:function(e){return Ki(e,0)}}),Yi=Ts({concat2d_:function(e,t){return Ki(e,t)}}),Ji=Ts({concat3d_:function(e,t){return Ki(e,t)}}),Zi=Ts({concat4d_:function(e,t){return Ki(e,t)}}),Qi=Ts({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Ns(e,"x","conv2d","float32"),l=Ns(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Pi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),p(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),p(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),zi("conv2d",r,i);const h="NHWC"===s?u.shape[3]:u.shape[1];p(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),p(Oi(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),p(Mi(a),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),p(Mi(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:u,filter:l},f={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},m=gs.runKernel($e,d,f);return c?Pi(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),eo=Ts({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=Ns(e,"x","conv1d"),l=Ns(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Pi(o,[1,o.shape[0],o.shape[1]])),p(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),p(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),zi("conv1d",r,i),p(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),p(Oi(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),p(Mi(a),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),p(Mi(n),(()=>"Error in conv1D: Stride should be larger than 0.")),p("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=Pi(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Pi(u,[u.shape[0],1,u.shape[1],u.shape[2]]),f=Qi(d,h,[1,n],r,"NHWC",[1,a],i);return Pi(f,c?[f.shape[2],f.shape[3]]:[f.shape[0],f.shape[2],f.shape[3]])}}),to=Ts({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){p(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Pi(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),p(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),p(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),p(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];p(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),p(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),zi("conv2dDerInput",s,i);const d={dy:l,filter:n},f={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},m=gs.runKernel(Te,d,f);return u?Pi(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),no=Ts({conv2dTranspose_:function(e,t,n,r,s,a){const i=Ns(e,"x","conv2dTranspose"),o=Ns(t,"filter","conv2dTranspose");return to(n,i,o,r,s,"NHWC",a)}}),ro=Ts({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=Ns(e,"x","conv3d"),o=Ns(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=Pi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),p(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),p(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),p(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),p(Oi(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),p("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`)),p(Mi(a),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),p(Mi(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},d=gs.runKernel(Ee,c,h);return u?Pi(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),so=Ts({conv3DBackpropInput_:function(e,t,n,r,s){p(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=Pi(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];p(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),p(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),p(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),p(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),p(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:s,strides:r,inputShape:a},d=gs.runKernel(Ae,c,h);return o?Pi(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),ao=Ts({conv3dTranspose_:function(e,t,n,r,s){const a=Ns(e,"x","conv3dTranspose"),i=Ns(t,"filter","conv3dTranspose");return so(n,a,i,r,s)}}),io=Ts({denseBincount_:function(e,t,n,r=!1){const s=Ns(e,"x","denseBincount"),a=Ns(t,"weights","denseBincount");p("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),p(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),p(n>=0,(()=>`size must be non-negative, but got ${n}.`)),p(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const i={x:s,weights:a},o={size:n,binaryOutput:r};return gs.runKernel(Le,i,o)}}),oo=Ts({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Ns(e,"x","depthwiseConv2d","float32"),l=Ns(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Pi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),p(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),p(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const h="NHWC"===s?u.shape[3]:u.shape[1];p(h===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`)),zi("depthwiseConv2d",r,i);const d={x:u,filter:l},f={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},m=gs.runKernel(Pe,d,f);return c?Pi(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),lo=Ts({elu_:function(e){const t={x:Ns(e,"x","elu","float32")};return gs.runKernel(Ke,t)}}),uo=Ts({equal_:function(e,t){let n=Ns(e,"a","equal","string_or_numeric"),r=Ns(t,"b","equal","string_or_numeric");[n,r]=ls(n,r),Ua(n.shape,r.shape);const s={a:n,b:r};return gs.runKernel(Je,s)}}),co=Ts({exp_:function(e){const t={x:Ns(e,"x","exp")};return gs.runKernel(Ze,t)}}),ho=Ts({expandDims_:function(e,t=0){const n=Ns(e,"x","expandDims","string_or_numeric");p(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return gs.runKernel(Qe,r,s)}}),po=Ts({tile_:function(e,t){const n=Ns(e,"x","tile","string_or_numeric");p(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return gs.runKernel(qn,r,s)}}),fo=Ts({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=ha([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=Pi(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return po(ho(i,0),[n[0],1,1]);if(2===n.length)return po(ho(ho(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return po(ho(ho(ho(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),mo=Ts({floor_:function(e){const t={x:Ns(e,"x","floor","float32")};return gs.runKernel(st,t)}}),go=Ts({gather_:function(e,t,n=0,r=0){const s={x:Ns(e,"x","gather"),indices:Ns(t,"indices","gather","int32")},a={axis:n,batchDims:r};return gs.runKernel(ot,s,a)}}),bo=Ts({greater_:function(e,t){let n=Ns(e,"a","greater","string_or_numeric"),r=Ns(t,"b","greater","string_or_numeric");[n,r]=ls(n,r),Ua(n.shape,r.shape);const s={a:n,b:r};return gs.runKernel(ut,s)}}),xo=Ts({greaterEqual_:function(e,t){let n=Ns(e,"a","greaterEqual","string_or_numeric"),r=Ns(t,"b","greaterEqual","string_or_numeric");[n,r]=ls(n,r),Ua(n.shape,r.shape);const s={a:n,b:r};return gs.runKernel(ct,s)}}),yo=Ts({leakyRelu_:function(e,t=.2){const n={x:Ns(e,"x","leakyRelu")},r={alpha:t};return gs.runKernel(bt,n,r)}}),vo=Ts({log_:function(e){const t={x:Ns(e,"x","log","float32")};return gs.runKernel(wt,t)}}),wo=Ts({log1p_:function(e){const t={x:Ns(e,"x","log1p")};return gs.runKernel(kt,t)}}),ko=Ts({max_:function(e,t=null,n=!1){const r={x:Ns(e,"x","max")},s={reductionIndices:t,keepDims:n};return gs.runKernel(Tt,r,s)}}),Io=Ts({sum_:function(e,t=null,n=!1){let r=Ns(e,"x","sum");"bool"===r.dtype&&(r=da(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return gs.runKernel(Tn,s,a)}}),So=Ts({logSoftmax_:function(e,t=-1){const n=Ns(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=Ca(((e,n)=>{const r=ko(e,t,!0),s=La(e,r),a=La(da(s,"float32"),vo(Io(co(s),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[r]=n,s=co(r);return La(e,Ia(Io(e,t,!0),s))}}}));return r(n)}}),No=Ts({logicalAnd_:function(e,t){const n=Ns(e,"a","logicalAnd","bool"),r=Ns(t,"b","logicalAnd","bool");Ua(n.shape,r.shape);const s={a:n,b:r};return gs.runKernel(It,s)}}),$o=Ts({matMul_:function(e,t,n=!1,r=!1){let s=Ns(e,"a","matMul"),a=Ns(t,"b","matMul");[s,a]=ls(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return gs.runKernel(ge,i,o)}}),Co=Ts({maxPool_:function(e,t,n,r,s){const a=Ns(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=Pi(a,[1,a.shape[0],a.shape[1],a.shape[2]])),p(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),p(Oi(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),zi("maxPool",r,s);const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=gs.runKernel(Rt,l,u);return o?Pi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),To=Ts({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const i=Ns(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=Pi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),p(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),p("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),zi("maxPool3d",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},h=gs.runKernel(Ft,u,c);return l?Pi(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Eo=Ts({mean_:function(e,t=null,n=!1){const r={x:Ns(e,"x","mean")},s={axis:t,keepDims:n};return gs.runKernel(Ot,r,s)}}),Ro=Ts({min_:function(e,t=null,n=!1){const r={x:Ns(e,"x","min")},s={axis:t,keepDims:n};return gs.runKernel(Mt,r,s)}}),Ao=Ts({minimum_:function(e,t){let n=Ns(e,"a","minimum"),r=Ns(t,"b","minimum");[n,r]=ls(n,r),"bool"===n.dtype&&(n=da(n,"int32"),r=da(r,"int32")),Ua(n.shape,r.shape);const s={a:n,b:r};return gs.runKernel(Lt,s)}});function Fo(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function _o(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function Do(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function Oo(e,t){return _o(e,t.map((e=>1)),t)}function Mo(e,t,n){p(Fo(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Lo(e,t){if(Fo(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function zo(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Po(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Bo=Ts({moments_:function(e,t=null,n=!1){const r=I(t,(e=Ns(e,"x","moments")).shape),s=Eo(e,r,n);let a=s.shape;n||(a=Oo(s.shape,r));const i=Na(La(da(e,"float32"),Pi(s,a)));return{mean:s,variance:Eo(i,r,n)}}}),Wo=Ts({neg_:function(e){const t={x:Ns(e,"x","neg")};return gs.runKernel(Ut,t)}}),Uo=Ts({notEqual_:function(e,t){let n=Ns(e,"a","notEqual","string_or_numeric"),r=Ns(t,"b","notEqual","string_or_numeric");[n,r]=ls(n,r),Ua(n.shape,r.shape);const s={a:n,b:r};return gs.runKernel(Vt,s)}}),Vo=Ts({oneHot_:function(e,t,n=1,r=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:Ns(e,"indices","oneHot","int32")},i={dtype:s,depth:t,onValue:n,offValue:r};return gs.runKernel(Kt,a,i)}});function Go(e,t="float32"){if(B(e),"complex64"===t){const t=Go(e,"float32"),n=Go(e,"float32");return Es(t,n)}const n=z(g(e),t);return gs.makeTensor(n,e,t)}function Ho(e,t="float32"){if(B(e),"complex64"===t){const t=Ho(e,"float32"),n=Go(e,"float32");return Es(t,n)}const n=L(g(e),t);return gs.makeTensor(n,e,t)}const qo=Ts({onesLike_:function(e){const t={x:Ns(e,"x","onesLike")};return gs.runKernel(jt,t)}}),jo=Ts({pad_:function(e,t,n=0){const r=Ns(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return gs.runKernel(Yt,a,s)}}),Ko=Ts({prelu_:function(e,t){const n={x:Ns(e,"x","prelu"),alpha:Ns(t,"alpha","prelu")};return gs.runKernel(Zt,n)}});var Xo=n(377);class Yo{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Xo.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Jo{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Xo.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Zo=Ts({randomNormal_:function(e,t=0,n=1,r,s){if(B(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new Yo(t,n,r,!1,s),i=ha(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Qo=Ts({randomUniform_:function(e,t=0,n=1,r="float32",s){B(e);const a=ha(e,r),i=new Jo(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}});function el(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return gs.runKernel(rn,{},s)}const tl=Ts({relu_:function(e){const t={x:Ns(e,"x","relu")};return gs.runKernel(on,t)}}),nl=Ts({reverse_:function(e,t){const n={x:Ns(e,"x","reverse")},r={dims:t};return gs.runKernel(fn,n,r)}}),rl=Ts({selu_:function(e){const t={x:Ns(e,"x","selu")};return gs.runKernel(vn,t)}}),sl=Ts({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=Ns(e,"x","separableConv2d"),l=Ns(t,"depthwiseFilter","separableConv2d"),u=Ns(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Pi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");p(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),p(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),p(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),p(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),p(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],f=l.shape[3];p(u.shape[2]===d*f,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${u.shape[2]}.`));const m=oo(c,l,r,s,i,a),g=Qi(m,u,1,"valid",i);return h?Pi(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),al=Ts({sigmoid_:function(e){const t={x:Ns(e,"x","sigmoid","float32")};return gs.runKernel(Nn,t)}}),il=Ts({slice_:function(e,t,n){const r=Ns(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return gs.runKernel(wn,s,a)}}),ol=Ts({slice1d_:function(e,t,n){const r=Ns(e,"x","slice1d");return p(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),il(r,[t],[n])}}),ll=Ts({slice2d_:function(e,t,n){const r=Ns(e,"x","slice2d");return p(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),il(r,t,n)}}),ul=Ts({slice3d_:function(e,t,n){const r=Ns(e,"x","slice3d");return p(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),il(r,t,n)}}),cl=Ts({slice4d_:function(e,t,n){const r=Ns(e,"x","slice4d");return p(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),il(r,t,n)}}),hl=Ts({softmax_:function(e,t=-1){const n=Ns(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return gs.runKernel(An,r,s)}}),dl=Ts({softplus_:function(e){const t={x:Ns(e,"x","softplus")};return gs.runKernel($n,t)}}),pl=Ts({split_:function(e,t,n=0){const r={x:Ns(e,"x","split")},s={numOrSizeSplits:t,axis:n};return gs.runKernel(Rn,r,s)}}),fl=Ts({squeeze_:function(e,t){const n=Ns(e,"x","squeeze","string_or_numeric");return Pi(n,S(n.shape,t).newShape)}}),ml=Ts({stack_:function(e,t=0){const n=$s(e,"tensors","stack","string_or_numeric");p(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&p(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return gs.runKernel(Xt,r,s)}}),gl=Ts({tanh_:function(e){const t={x:Ns(e,"x","tanh","float32")};return gs.runKernel(Hn,t)}});function bl(e,t){m(e);const n=ks(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Rs(e,null,n,t)}const xl=Ts({truncatedNormal_:function(e,t=0,n=1,r,s){if(B(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Yo(t,n,r,!0,s),i=ha(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),yl=Ts({unstack_:function(e,t=0){const n=Ns(e,"x","unstack","string_or_numeric");p(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return gs.runKernel(Jn,r,s)}}),vl=Ts({where_:function(e,t,n){const r=Ns(t,"a","where"),s=Ns(n,"b","where"),a=Ns(e,"condition","where","bool"),i=Ua(Ua(a.shape,r.shape),s.shape),o={condition:qi(a,i),t:qi(r,i),e:qi(s,i)};return gs.runKernel(yn,o)}}),wl=Ts({imag_:function(e){const t={input:Ns(e,"input","imag")};return gs.runKernel(pt,t)}}),kl=Ts({real_:function(e){const t={input:Ns(e,"input","real")};return gs.runKernel(sn,t)}}),Il=Ts({transpose_:function(e,t,n){const r=Ns(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),p(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{p(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const s={x:r},a={perm:t};return"complex64"===r.dtype?ga((()=>{let e=kl(r),t=wl(r);return e=gs.runKernel(Xn,{x:e},a),t=gs.runKernel(Xn,{x:t},a),n&&(t=Wo(t)),Es(e,t)})):gs.runKernel(Xn,s,a)}}),Sl=Ts({dropout_:function(e,t,n,r){const s=Ns(e,"x","dropout");if(p("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),p(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Jr?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(b(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,o=ka(mo(va(Qo(a,0,1,"float32",r),i)),i);return Ia(s,o)}}),Nl=Ts({fft_:function(e){p("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return gs.runKernel(tt,t)}}),$l=Ts({rfft_:function(e,t){p("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=il(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=Ki([e,Go(r)],e.shape.length-1),n=t}else s=e;const a=$a(s),i=Pi(Es(s,a),[r,n]),o=Nl(i),l=Math.floor(n/2)+1,u=kl(o),c=wl(o),h=pl(u,[l,n-l],u.shape.length-1),d=pl(c,[l,n-l],c.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=l,Pi(Es(h[0],d[0]),f)}}),Cl=Ts({ifft_:function(e){p("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return gs.runKernel(dt,t)}}),Tl=Ts({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=Pi(e,[n,t]);r=Cl(s)}else{const s=[n,2*(t-1)],a=Pi(kl(e),[n,t]),i=Pi(wl(e),[n,t]),o=nl(il(a,[0,1],[n,t-2]),1),l=Ia(nl(il(i,[0,1],[n,t-2]),1),Ta(-1)),u=Ki([a,o],1),c=Ki([i,l],1),h=Pi(Es(u,c),[s[0],s[1]]);r=Cl(h)}if(r=kl(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Pi(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),El=Ts({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=Pi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Pi(t,[1,t.shape[0],t.shape[1],t.shape[2]])),p(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),p(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),p(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];p(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),p(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),zi("conv2dDerFilter",s,i);const h={x:o,dy:l},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return gs.runKernel(Ce,h,d)}}),Rl=Ts({relu6_:function(e){const t={x:Ns(e,"x","relu6")};return gs.runKernel(pn,t)}}),Al=Ts({step_:function(e,t=0){const n={x:Ns(e,"x","step")},r={alpha:t};return gs.runKernel(er,n,r)}});function Fl(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Ia(e,Al(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function _l(e,t){let n=t;const r=Wa(e.shape,t.shape);return r.length>0&&(n=Io(n,r)),Pi(n,e.shape)}function Dl(e,t,n,r){if("linear"===t)return e;if("relu"===t)return tl(e);if("elu"===t)return lo(e);if("relu6"===t)return Rl(e);if("prelu"===t)return Ko(e,n);if("leakyrelu"===t)return yo(e,r);if("sigmoid"===t)return al(e);throw new Error(`Unknown fused activation ${t}.`)}const Ol=(e,t)=>!(e>0)||"linear"===t,Ml=Ts({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Ol(gs.state.gradientDepth,l)){p("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=Qi(e,t,n,r,s,a,i);return null!=o&&(h=va(h,o)),Dl(h,l,u,c)}const h=Ns(e,"x","conv2d","float32"),d=Ns(t,"filter","conv2d","float32");let f=h,m=!1;3===h.rank&&(m=!0,f=Pi(h,[1,h.shape[0],h.shape[1],h.shape[2]])),p(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),p(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),zi("fused conv2d",r,i);const g="NHWC"===s?f.shape[3]:f.shape[1];p(d.shape[2]===g,(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`)),p(Oi(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const b=Ci(f.shape,d.shape,n,a,r,i);let x,y;if(null!=o&&(x=Ns(o,"bias","fused conv2d"),[x]=ls(x,h),"NHWC"===s?Ua(b.outShape,x.shape):(p(x.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`)),p(0===x.shape.length||x.shape[0]===b.outChannels||1===x.shape[0],(()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${b.outChannels})`)))),null!=u){const e=u.shape;if(p(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)p(1===e[0]||e[0]===b.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${b.outChannels}).`));else if(3===e.length)try{Ua(e,b.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(n)}y=Ns(u,"prelu weights","fused conv2d")}const v=(e,t)=>{p("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[i,o,u,c]=t,h=Fl(e,u,l);p(Di(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const d=[to(o.shape,h,i,n,r),El(o,h,i.shape,n,r)];if(null!=c){const e=_l(c,h);d.push(e)}return d},w={x:f,filter:d,bias:x,preluActivationWeights:y},k={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=Ca(((e,t,n)=>{let r=gs.runKernel(rr,w,k);return n([t,e,r]),m&&(r=Pi(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(f,d)}{const e=Ca(((e,t,n,r)=>{let s=gs.runKernel(rr,w,k);return r([t,e,s,n]),m&&(s=Pi(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}}));return e(f,d,x)}}}),Ll=Ts({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=Pi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Pi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return gs.runKernel(Be,u,c)}}),zl=Ts({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=Pi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e},h=gs.runKernel(We,u,c);return l?Pi(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Pl=Ts({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===Ol(gs.state.gradientDepth,a)){let l=$o(e,t,n,r);return null!=s&&(l=va(l,s)),Dl(l,a,i,o)}let l=Ns(e,"a","fused matMul"),u=Ns(t,"b","fused matMul");[l,u]=ls(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],f=r?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),b=u.shape.slice(0,-2),x=g(m),y=g(b);p(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=Ua(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,f]),w=Pi(l,n?[x,c,d]:[x,d,c]),k=Pi(u,r?[y,f,h]:[y,h,f]);let I,S;null!=s&&(I=Ns(s,"bias","fused matMul"),[I]=ls(I,l),Ua(v,I.shape)),null!=i&&(S=Ns(i,"prelu weights","fused matMul"));const N=(e,t)=>{const[i,o,l,u]=t,c=Fl(Pi(e,l.shape),l,a);let h,d;return n||r?!n&&r?(h=$o(c,o,!1,!1),d=$o(c,i,!0,!1)):n&&!r?(h=$o(o,c,!1,!0),d=$o(i,c,!1,!1)):(h=$o(o,c,!0,!0),d=$o(c,i,!0,!0)):(h=$o(c,o,!1,!0),d=$o(i,c,!0,!1)),null!=s?[h,d,_l(u,c)]:[h,d]},$={a:w,b:k,bias:I,preluActivationWeights:S},C={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};if(null==s){const e=Ca(((e,t,n)=>{const r=gs.runKernel(nr,$,C);return n([e,t,r]),{value:Pi(r,v),gradFunc:N}}));return e(w,k)}{const e=Ca(((e,t,n,r)=>{const s=gs.runKernel(nr,$,C);return r([e,t,s,n]),{value:Pi(s,v),gradFunc:N}}));return e(w,k,I)}}});function Bl(e,t,n){if(m(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=ks(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Rs(e,t,r,n)}const Wl=Ts({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=Ns(e,"image","cropAndResize"),o=Ns(t,"boxes","cropAndResize","float32"),l=Ns(n,"boxInd","cropAndResize","int32"),u=o.shape[0];p(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),p(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),p(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),p(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),p(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),p("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:i,boxes:o,boxInd:l},h={method:s,extrapolationValue:a,cropSize:r};return gs.runKernel(Me,c,h)}}),Ul=Ts({flipLeftRight_:function(e){const t=Ns(e,"image","flipLeftRight","float32");p(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return gs.runKernel(rt,n,{})}}),Vl=Ts({grayscaleToRGB_:function(e){const t=Ns(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];p(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),p(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,po(t,s)}}),Gl=Ts({rotateWithOffset_:function(e,t,n=0,r=.5){const s=Ns(e,"image","rotateWithOffset","float32");p(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return gs.runKernel(tr,a,i)}});function Hl(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),p(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),p(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),p(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),p(1===t.rank,(()=>"scores must be a 1D tensor")),p(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),p(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const ql=Ts({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Ns(e,"boxes","nonMaxSuppression","float32"),i=Ns(t,"scores","nonMaxSuppression","float32"),o=Hl(a,i,n,r,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return gs.runKernel(Gt,{boxes:a,scores:i},l)}});function jl(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||Kl)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Kl(e,t){return e>t?1:e<t?-1:0}function Xl(e,t,n,r,s){return Zl(e,t,n,r,s,0)}function Yl(e,t,n,r,s,a){return Zl(e,t,n,r,s,0,!1,a,!0)}function Jl(e,t,n,r,s,a){return Zl(e,t,n,r,s,a,!0)}function Zl(e,t,n,r,s,a,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>s&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(tu);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=Ql(e,a,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*eu(r,c,i),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>s&&jl(u,t,tu))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function Ql(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),b=Math.min(o,h),x=Math.min(l,d),y=Math.max(b-m,0)*Math.max(x-g,0);return y/(p+f-y)}function eu(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function tu(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const nu=Ts({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Ns(e,"boxes","nonMaxSuppression"),o=Ns(t,"scores","nonMaxSuppression"),l=Hl(i,o,n,r,s,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=gs.runKernel(qt,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),ru=Ts({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Ns(e,"boxes","nonMaxSuppression"),o=Ns(t,"scores","nonMaxSuppression"),l=Hl(i,o,n,r,s,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=gs.runKernel(Ht,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),su=Ts({resizeBilinear_:function(e,t,n=!1,r=!1){const s=Ns(e,"images","resizeBilinear");p(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),p(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),p(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=Pi(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=gs.runKernel(hn,o,l);return i?Pi(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),au=Ts({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=Ns(e,"images","resizeNearestNeighbor");p(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),p(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),p("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),p(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=Pi(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=gs.runKernel(un,o,l);return i?Pi(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),iu=Ts({bincount_:function(e,t,n){const r=Ns(e,"x","bincount"),s=Ns(t,"weights","bincount");p("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),p(n>=0,(()=>`size must be non-negative, but got ${n}.`)),p(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},i={size:n};return gs.runKernel(xe,a,i)}}),ou=Ts({lessEqual_:function(e,t){let n=Ns(e,"a","lessEqual","string_or_numeric"),r=Ns(t,"b","lessEqual","string_or_numeric");[n,r]=ls(n,r),Ua(n.shape,r.shape);const s={a:n,b:r};return gs.runKernel(yt,s)}}),lu=Ts({round_:function(e){const t={x:Ns(e,"x","round")};return gs.runKernel(mn,t)}}),uu=Ts({threshold_:function(e,t="binary",n=!1,r=.5){const s=Ns(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,o,l,u,c=Ia(bl([r]),255);if(p(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),p(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),p("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),p("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,o,l]=pl(s,[1,1,1],-1);const e=Ia(i,.2989),t=Ia(o,.587),n=Ia(l,.114);u=va(va(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,r,s,a,i,o,l=bl([-1]),u=bl([0]),c=bl([0]);for(let h=0;h<e.size-1;h++){n=il(e,0,h+1),r=il(e,h+1),i=ka(Io(n),t),o=ka(Io(r),t);const d=Io(Ia(n,el(0,n.size)));s=ka(d,Io(n));const p=Da(r.shape,n.size),f=va(el(0,r.size),p),m=Ia(r,f);a=ka(Io(m),Io(r));const g=La(s,a),b=La(s,a),x=Ia(i,o);c=Ia(Ia(x,g),b);const y=bo(c,u);u=vl(y,c,u),l=vl(y,bl([h]),l)}return l}(iu(da(lu(u),"int32"),As([]),256),a));const h=n?ou(u,c):bo(u,c);return da(Ia(h,255),"int32")}}),cu=Ts({transform_:function(e,t,n="nearest",r="constant",s=0,a){const i=Ns(e,"image","transform","float32"),o=Ns(t,"transforms","transform","float32");p(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),p(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),p(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return gs.runKernel(Kn,l,u)}}),hu=Ts({bandPart_:function(e,t,n){p(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),p(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Ns(e,"a","bandPart");p(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=Pi(el(0,a,1,"int32"),[-1,1]),l=el(0,i,1,"int32"),u=La(o,l),c=No(ou(u,Ta(+t,"int32")),xo(u,Ta(-n,"int32"))),h=Go([a,i],r.dtype);return Pi(ml(yl(Pi(r,[-1,a,i])).map((e=>vl(c,e,h)))),s)}});function du(e,t,n=null){if(0===e.rank)return Pa(e);if(1!==e.rank&&null===n)return du(Pi(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Io(Pa(e),n);if(t===1/0)return ko(Pa(e),n);if(t===-1/0)return Ro(Pa(e),n);if("euclidean"===t||2===t)return Sa(Io(Ma(Pa(e),Ta(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return ko(Io(Pa(e),n[0]),n[1]-1);if(t===1/0)return ko(Io(Pa(e),n[1]),n[0]);if(t===-1/0)return Ro(Io(Pa(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Sa(Io(Na(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const pu=Ts({norm_:function(e,t="euclidean",n=null,r=!1){const s=du(e=Ns(e,"x","norm"),t,n);let a=s.shape;if(r){const t=I(n,e.shape);a=Oo(s.shape,t)}return Pi(s,a)}}),fu=Ts({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,p(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)p(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=pl(e,e.shape[0],0).map((e=>fl(e,[0])));p(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(gs.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Ia(Io(Ia(n[r],e)),n[r]);e=La(e,t)}return ka(e,pu(e,"euclidean"))})));return t?ml(n,0):n}});function mu(e,t=!1){return gs.tidy((()=>{p(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=fo(n),a=pa(e);const i=Bl([[1]],[1,1]);let o=pa(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=o,u=s;[o,a,s]=gs.tidy((()=>{const t=il(a,[e,e],[n-e,1]),l=pu(t),u=il(a,[e,e],[1,1]),c=vl(bo(u,0),Bl([[-1]]),Bl([[1]])),h=La(u,Ia(c,l)),d=ka(t,h);o=1===d.shape[0]?pa(i):Ki([i,il(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Wo(ka($o(c,h),l)),f=il(a,[e,0],[n-e,r]),m=Ia(p,o),g=Il(o);if(0===e)a=La(f,$o(m,$o(g,f)));else{const t=La(f,$o(m,$o(g,f)));a=Ki([il(a,[0,0],[e,r]),t],0)}const b=Il(m),x=il(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=La(x,$o($o(x,o),b));else{const t=La(x,$o($o(x,o),b));s=Ki([il(s,[0,0],[n,e]),t],1)}return[o,a,s]})),ba([t,l,u])}return!t&&n>r&&(s=il(s,[0,0],[n,r]),a=il(a,[0,0],[r,r])),[s,a]}))}const gu=Ts({qr_:function(e,t=!1){if(p(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return mu(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=yl(Pi(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach((e=>{const[n,r]=mu(e,t);s.push(n),a.push(r)})),[Pi(ml(s,0),e.shape),Pi(ml(a,0),e.shape)]}}});var bu;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(bu||(bu={}));const xu=Ts({squaredDifference_:function(e,t){let n=Ns(e,"a","squaredDifference"),r=Ns(t,"b","squaredDifference");[n,r]=ls(n,r),Ua(n.shape,r.shape);const s={a:n,b:r};return gs.runKernel(Ln,s,{})}}),yu=Ts({logSumExp_:function(e,t=null,n=!1){const r=Ns(e,"x","logSumExp"),s=I(t,r.shape),a=ko(r,s,!0),i=La(r,a),o=co(i),l=Io(o,s),u=vo(l),c=va(Pi(a,u.shape),u);if(n){const e=Oo(c.shape,s);return Pi(c,e)}return c}}),vu={flipLeftRight:Ul,grayscaleToRGB:Vl,resizeNearestNeighbor:au,resizeBilinear:su,rotateWithOffset:Gl,cropAndResize:Wl,nonMaxSuppression:ql,nonMaxSuppressionAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Ns(e,"boxes","nonMaxSuppressionAsync"),i=Ns(t,"scores","nonMaxSuppressionAsync"),o=Hl(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=Xl(u,c,n,r,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),bl(h,"int32")},nonMaxSuppressionWithScore:nu,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Ns(e,"boxes","nonMaxSuppressionAsync"),o=Ns(t,"scores","nonMaxSuppressionAsync"),l=Hl(i,o,n,r,s,a);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=Jl(c,h,n,r,s,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:bl(d,"int32"),selectedScores:bl(p)}},nonMaxSuppressionPadded:ru,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Ns(e,"boxes","nonMaxSuppressionAsync"),o=Ns(t,"scores","nonMaxSuppressionAsync"),l=Hl(i,o,n,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Yl(d,p,u,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:bl(f,"int32"),validOutputs:Ta(m,"int32")}},threshold:uu,transform:cu},wu={bandPart:hu,gramSchmidt:fu,qr:gu},ku=class{static sgd(e){return new Ha(e)}static momentum(e,t,n=!1){return new qa(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new ja(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new za(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new _a(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new Ga(e,t,n,r,s)}static adagrad(e,t=.1){return new Oa(e,t)}},Iu="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Su(){return new Promise((e=>Iu((()=>e()))))}function Nu(e,t){const n=e[0].length;e.forEach(((e,t)=>{p(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),p(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)p(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function $u(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Cu;function Tu(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const a=n[s],i=r[r.length-n.length+s],o=r[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${a} but shape[${s+e}] = ${o}`)}else r[i]=a}return r}function Eu(e){const t={FIRST_DIM_SIZE:Cu.FIRST_DIM_SIZE,VALUE_ROWIDS:Cu.VALUE_ROWIDS,ROW_LENGTHS:Cu.ROW_LENGTHS,ROW_SPLITS:Cu.ROW_SPLITS,ROW_LIMITS:Cu.ROW_LIMITS,ROW_STARTS:Cu.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function Ru(e){return 0===e.length?0:e[0]===Cu.FIRST_DIM_SIZE?e.length-1:e.length}function Au(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(Cu||(Cu={}));const Fu=30;function _u(e){return e<=Fu?e:_(e,Math.floor(Math.sqrt(e)))}function Du(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Ou(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Mu(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Lu(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function zu(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Pu(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function Bu(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===g(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let e=0;e<s.length-1;++e)i*=s[e];const o=e.shape,l=s.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[...D(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}function Wu(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function Uu(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Wu(n,t,e)}function Vu(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let e=s;e<a;++e)i*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:g(t.shape)/o,sliceSize:i,strides:[...D(n.slice(0,s)),1],outputSize:g(n)}}const Gu=1.7580993408473768,Hu=1.0507009873554805,qu=.3275911,ju=.254829592,Ku=-.284496736,Xu=1.421413741,Yu=-1.453152027,Ju=1.061405429;function Zu(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Qu(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function ec(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function tc(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function nc(e,t){return{real:e[2*t],imag:e[2*t+1]}}function rc(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function sc(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function ac(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const ic="->",oc=/->/g,lc=",",uc="...";function cc(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(oc,"").length)/ic.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${ic}").`);const[r,s]=e.split(ic);p(-1===r.indexOf(uc),(()=>`The ellipsis notation ("${uc}") is not supported yet.`));const a=r.split(lc),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<s.length;++e){const t=s[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&t!==lc&&o.push(t)}const l=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<a[e].length;++t)l[e].push(o.indexOf(a[e][t]))}const u=o.length,c=[];for(let e=s.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function hc(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function dc(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:p(r[t[e][n]]===s[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function pc(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const a=[];for(let e=0;e<n.length;++e){const s=mc(t,n[e]);for(const t of s)-1===a.indexOf(t)&&(r[e].push(t),a.push(t))}return{path:n,steps:r}}function fc(e){return e.every(((e,t)=>e===t))}function mc(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function gc(e,t,n=0){let r=[];if("number"==typeof t)p(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);p(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}p(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function bc(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function xc(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function yc(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function vc(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function wc(e,t){return`size ${e} must be non-negative, not ${t}`}function kc(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Ic(e,t){return`Input to reshape is a SparseTensor with ${g(e)}\n  dense values, but the requested shape requires a multiple of ${g(t)}. inputShape=${e} outputShape= ${t}`}function Sc(e,t){return`Input to reshape is a tensor with ${g(e)} dense values, but the requested shape has ${g(t)}. inputShape=${e} outputShape=${t}`}function Nc(){return"segment ids must be >= 0"}function $c(){return"segment ids are not increasing"}function Cc(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Tc(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Ec(e,t){let n,r=!1;for(e<=Fu?(n=e,r=!0):n=_(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=_(e,n+1);return n}function Rc(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function Ac(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function Fc(e){try{return e.map((e=>_r(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function _c(e){return e.map((e=>Fr(e)))}function Dc(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=ha(e,"int32"),s=ha([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),i=t*e.length;s.values.set(a,i)}return s.toTensor()}!function(){for(const e of Ka)Aa(e)}();const Oc={kernelName:Z,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ia(e,Al(da(n,"float32"),-1))}}},Mc={kernelName:Q,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Na(da(n,"float32")),r=Sa(La(Ta(1),t));return Wo(ka(e,r))}}}},Lc={kernelName:ee,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Sa(La(Na(da(n,"float32")),1));return ka(e,t)}}}},zc={kernelName:te,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ua(n.shape,r.shape);return{a:()=>{let t=e;const r=Wa(n.shape,s);return r.length>0&&(t=Io(t,r)),Pi(t,n.shape)},b:()=>{let t=e;const n=Wa(r.shape,s);return n.length>0&&(t=Io(t,n)),Pi(t,r.shape)}}}},Pc={kernelName:ne,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Bc={kernelName:ae,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$a(n)}}},Wc={kernelName:ie,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$a(n)}}},Uc={kernelName:oe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ka(e,Sa(La(Ta(1),Na(da(n,"float32")))))}}},Vc={kernelName:le,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Sa(va(Ta(1),Na(da(n,"float32"))));return ka(e,t)}}}},Gc={kernelName:he,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ua(n.shape,r.shape);return{a:()=>{const t=va(Na(n),Na(r));let a=Ia(e,ka(r,t));const i=Wa(n.shape,s);return i.length>0&&(a=Io(a,i)),Pi(a,n.shape)},b:()=>{const t=va(Na(n),Na(r));let a=Wo(Ia(e,ka(n,t)));const i=Wa(r.shape,s);return i.length>0&&(a=Io(a,i)),Pi(a,r.shape)}}}},Hc={kernelName:ue,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ka(e,va(Na(da(n,"float32")),1))}}},qc={kernelName:ce,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ka(e,La(Ta(1),Na(da(n,"float32"))))}}},jc=Ts({avgPool3dGrad_:function(e,t,n,r,s,a){const i=Ns(e,"dy","avgPool3dGrad"),o=Ns(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=Pi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Pi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),p(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),p(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),zi("avgPool3dGrad",s,a);const h={dy:l,input:u},d={filterSize:n,strides:r,pad:s,dimRoundingMode:a},f=gs.runKernel(me,h,d);return c?Pi(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),Kc={kernelName:fe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>jc(e,r,s,a,i,o)}}},Xc=Ts({avgPoolGrad_:function(e,t,n,r,s){const a=Ns(e,"dy","avgPoolGrad"),i=Ns(t,"input","avgPoolGrad");p(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=Pi(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Pi(a,[1,a.shape[0],a.shape[1],a.shape[2]])),p(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),p(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:s},d=gs.runKernel(pe,c,h);return u?Pi(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Yc={kernelName:de,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>Xc(e,r,s,a,i)}}},Jc={kernelName:ge,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>$o(e,s,!1,!1),b:()=>$o(e,r,!0,!1)}:a&&!i?{a:()=>$o(s,e,!1,!0),b:()=>$o(r,e,!1,!1)}:{a:()=>$o(s,e,!0,!0),b:()=>$o(e,r,!0,!0)}:{a:()=>$o(e,s,!1,!0),b:()=>$o(r,e,!0,!1)}}},Zc=Ts({spaceToBatchND_:function(e,t,n){const r=Ns(e,"x","spaceToBatchND");p(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),p(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),p(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return gs.runKernel(En,s,a)}}),Qc={kernelName:be,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Zc(e,r,s)}}},eh={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Io(e,o,!0)}}},th={kernelName:ve,gradFunc:e=>({x:()=>e.clone()})},nh={kernelName:we,gradFunc:e=>({x:()=>$a(e)})},rh={kernelName:ke,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>vl(No(xo(r,s),ou(r,a)),e,$a(e))}}},sh={kernelName:Se,inputsToSave:["x"],gradFunc:Oc.gradFunc},ah={kernelName:Ne,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=I(s,t[0].shape)[0],i=r.map((e=>e[a]));return pl(e,i,a).map((e=>()=>e))}},ih={kernelName:$e,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return p(Di(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>to(r.shape,e,s,i,o,l),filter:()=>El(r,e,s.shape,i,o,l)}}},oh={kernelName:Te,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Qi(e,s,a,i,o,1,l),filter:()=>El(e,r,s.shape,a,i,o,l)}}},lh=Ts({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=Pi(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Pi(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),p(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),p(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),p(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),p(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),p(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:r,pad:s,filterShape:n};return gs.runKernel(Re,o,l)}}),uh={kernelName:Ee,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;p(Di(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>so(i.shape,e,o,s,a),filter:()=>lh(i,e,o.shape,s,a)}}},ch=Ts({sin_:function(e){const t={x:Ns(e,"x","sin","float32")};return gs.runKernel(kn,t)}}),hh={kernelName:Fe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ia(Wo(ch(da(n,"float32"))),e)}}},dh=Ts({sinh_:function(e){const t={x:Ns(e,"x","sinh")};return gs.runKernel(In,t)}}),ph={kernelName:_e,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ia(dh(da(n,"float32")),e)}}},fh=Ts({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:Ns(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return gs.runKernel(Oe,s,a)}}),mh={kernelName:Oe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=Lo([s],r.rank);let n=fh(e,s,a,!i);return null!=t&&(n=Il(n,t)),n}}}},gh={kernelName:Pe,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;p(Di(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return p(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),p(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),p(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),p(Oi(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),zi("depthwiseConv2d",a,i),{x:()=>zl(l.shape,e,u,s,a,o,i),filter:()=>Ll(l,e,u.shape,s,a,o,i)}}},bh={kernelName:Ve,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>gs.runKernel(Ge,a,n),filter:()=>gs.runKernel(He,i,n)}}},xh={kernelName:Ke,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>gs.runKernel(Xe,r)}}},yh={kernelName:Ye,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Ia(co(Wo(Na(n))),2/Math.sqrt(Math.PI));return{x:()=>Ia(e,r)}}},vh={kernelName:Ze,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ia(e,n)}}},wh={kernelName:Qe,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Pi(e,n.shape)}}},kh={kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ia(e,co(n))}}},Ih={kernelName:st,gradFunc:e=>({x:()=>$a(e)})},Sh={kernelName:at,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ua(n.shape,r.shape);return{a:()=>{const t=ka(e,da(r,"float32")),a=Wa(n.shape,s);return a.length>0?Pi(Io(t,a),n.shape):t},b:()=>{let t=Ia(e,da(n,"float32"));const a=Wa(r.shape,s);a.length>0&&(t=Pi(Io(t,a),r.shape));const i=Na(r);return Wo(ka(t,da(i,"float32")))}}}},Nh=Ts({rsqrt_:function(e){const t={x:Ns(e,"x","rsqrt","float32")};return gs.runKernel(gn,t)}}),$h={kernelName:it,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,l=null==o?Ta(1):o,u=Wa(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=La(s,a),d=Ia(e,l),p=Nh(va(i,Ta(r))),f=Ia(Ia(Ia(p,p),p),Ta(-.5));return{x:()=>1===a.rank?Pi(Ia(Ia(e,po(Pi(p,[1,1,1,a.shape[0]]),c)),l),s.shape):Pi(Ia(Ia(e,p),l),s.shape),mean:()=>{let e=Ia(Ia(p,Ta(-1)),d);return 1===a.rank&&(e=Io(e,u)),Pi(e,a.shape)},variance:()=>{let e=Ia(Ia(f,h),d);return 1===a.rank&&(e=Io(e,u)),Pi(e,a.shape)},scale:()=>{const t=Ia(h,p);let n=Ia(e,t);return 1===a.rank&&(n=Io(n,u)),Pi(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=Io(t,u)),Pi(t,a.shape)}}}},Ch=Ts({unsortedSegmentSum_:function(e,t,n){const r=Ns(e,"x","unsortedSegmentSum"),s=Ns(t,"segmentIds","unsortedSegmentSum","int32");p(x(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return gs.runKernel(Zn,a,i)}}),Th={kernelName:ot,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,i=I(a,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,o=t.slice(0,i),l=o.length,u=t.slice(a,t.length).slice(1),c=u.length,h=Eh(0,l),d=Eh(l+1,l+1+c),p=Rh([o,[n],u]),f=Pi(e,p),m=Pi(s,[n]),g=Rh([[l],h,d]),b=Il(f,g);let x=Ch(b,m,r.shape[i]);const y=zo(g);return x=Il(x,y),x},indices:()=>s}}};function Eh(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Rh(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Ah={kernelName:ct,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>$a(n),b:()=>$a(r)}}},Fh={kernelName:ht,gradFunc:e=>({x:()=>da(e,"float32")})},_h={kernelName:ft,gradFunc:e=>({x:()=>$a(e)})},Dh={kernelName:mt,gradFunc:e=>({x:()=>$a(e)})},Oh={kernelName:gt,gradFunc:e=>({x:()=>$a(e)})},Mh={kernelName:bt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=bo(r,0);return{x:()=>vl(a,e,Ia(e,s))}}},Lh={kernelName:kt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ka(e,va(n,1))}}},zh={kernelName:wt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ka(e,da(n,"float32"))}}},Ph={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=co(r);return La(e,Ia(Io(e,s,!0),t))}}}},Bh=Ts({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:r,bias:s,alpha:a,beta:i};return gs.runKernel(Ct,o,l)}}),Wh={kernelName:$t,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>Bh(r,s,e,a,i,o,l)}}};function Uh(e,t,n,r){return t.rank<n.rank&&(t=Pi(t,Oo(t.shape,r))),e.rank<n.rank&&(e=Pi(e,Oo(e.shape,r))),{x:()=>Ia(e,da(uo(n,t),e.dtype))}}const Vh={kernelName:Tt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=Uh(e,t[1],a,I(s,a.shape));return{x:()=>i.x()}}},Gh=Ts({less_:function(e,t){let n=Ns(e,"a","less","string_or_numeric"),r=Ns(t,"b","less","string_or_numeric");[n,r]=ls(n,r),Ua(n.shape,r.shape);const s={a:n,b:r};return gs.runKernel(xt,s)}}),Hh={kernelName:Et,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ia(e,da(xo(n,r),"float32")),b:()=>Ia(e,da(Gh(n,r),"float32"))}}},qh=Ts({maxPool3dGrad_:function(e,t,n,r,s,a,i){const o=Ns(e,"dy","maxPool3dGrad"),l=Ns(t,"input","maxPool3dGrad"),u=Ns(n,"output","maxPool3dGrad");let c=o,h=l,d=u,f=!1;4===l.rank&&(f=!0,c=Pi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Pi(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Pi(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),p(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),p(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),p(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),zi("maxPool3dGrad",a,i);const m={dy:c,input:h,output:d},g={filterSize:r,strides:s,pad:a,dimRoundingMode:i},b=gs.runKernel(_t,m,g);return f?Pi(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),jh={kernelName:Ft,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>qh(e,r,s,a,i,o,l)}}},Kh=Ts({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=Ns(e,"dy","maxPoolGrad"),l=Ns(t,"input","maxPoolGrad"),u=Ns(n,"output","maxPoolGrad");p(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),p(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),p(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),zi("maxPoolGrad",a,i);const c={dy:o,input:l,output:u},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return gs.runKernel(At,c,h)}}),Xh={kernelName:Rt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Kh(e,r,s,a,i,o)}}},Yh={kernelName:Ot,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=I(s,r.shape),i=g(Do(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=Pi(e,t);return ka(Ia(n,Ho(r.shape,"float32")),i)}}}},Jh={kernelName:Mt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=Uh(e,i,a,I(s,a.shape));return{x:()=>o.x()}}},Zh={kernelName:Lt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ia(e,da(ou(n,r),"float32")),b:()=>Ia(e,da(bo(n,r),"float32"))}}},Qh={kernelName:zt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>il(e,a,r.shape)}}},ed={kernelName:Pt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ua(n.shape,r.shape);return{a:()=>{const t=Wa(n.shape,s);return t.length>0?Pi(Io(e,t),n.shape):e},b:()=>{const t=Ia(e,Wo(mo(ka(n,r)))),a=Wa(r.shape,s);return a.length>0?Pi(Io(t,a),r.shape):t}}}},td={kernelName:Wt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ua(n.shape,r.shape);return{a:()=>{const t=Ia(e,da(r,"float32")),a=Wa(n.shape,s);return a.length>0?Pi(Io(t,a),n.shape):t},b:()=>{const t=Ia(e,da(n,"float32")),a=Wa(r.shape,s);return a.length>0?Pi(Io(t,a),r.shape):t}}}},nd={kernelName:Ut,gradFunc:e=>({x:()=>Wo(e)})},rd={kernelName:Kt,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Go(n.shape,"float32")}}},sd={kernelName:jt,gradFunc:e=>({x:()=>$a(e)})},ad={kernelName:Xt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return yl(e,r).map((e=>()=>e))}},id={kernelName:Yt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>il(e,a,r.shape)}}},od={kernelName:Jt,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=Ua(a.shape,i.shape);return{a:()=>{const t=da(i,"float32");let n=Ia(e,Ia(t,Ma(a,La(t,Ta(1)))));const r=Wa(a.shape,o);return r.length>0&&(n=Io(n,r)),Pi(n,a.shape)},b:()=>{const t=bo(a,0),n=vl(t,vo(a),$a(a));let r=Ia(e,Ia(s,n));const l=Wa(i.shape,o);return l.length>0&&(r=Io(r,l)),Pi(r,i.shape)}}}},ld={kernelName:Zt,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=bo(n,0);return{x:()=>vl(s,e,Ia(e,r)),alpha:()=>{let t=vl(s,$a(e),Ia(e,n));const a=Wa(r.shape,e.shape);return a.length>0&&(t=Io(t,a)),Pi(t,r.shape)}}}},ud=Ts({cumprod_:function(e,t=0,n=!1,r=!1){const s={x:Ns(e,"x","cumprod")},a={axis:t,exclusive:n,reverse:r};return gs.runKernel(De,s,a)}});const cd={kernelName:Qt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let a=[];return a=null==s?r.shape.map(((e,t)=>t)):"number"==typeof s?[s]:s,{x:()=>function(e,t,n){const r=e.shape.length,s=r-n.length,a=Lo(n,r);let i=e;null!=a&&(i=Il(e,a));const o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){const r=e.shape.slice();r[n]=1;const s=Pi(t,r),a=ud(e,n,!0,!1),i=ud(e,n,!0,!0),o=Ia(a,i);return Ia(s,o)}(i.reshape(o),t,s);if(u=u.reshape(i.shape),null!=a){const e=zo(a);u=Il(u,e)}return u}(r,e,a)}}},hd={kernelName:qe,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ua(n.shape,r.shape);return{a:()=>{const t=ka(e,da(r,"float32")),a=Wa(n.shape,s);return a.length>0?Pi(Io(t,a),n.shape):t},b:()=>{let t=Ia(e,da(n,"float32"));const a=Wa(r.shape,s);a.length>0&&(t=Pi(Io(t,a),r.shape));const i=Na(r);return Wo(ka(t,da(i,"float32")))}}}},dd={kernelName:an,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ka(e,Wo(Na(n)))}}},pd={kernelName:pn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Ia(ou(n,6),Al(n));return{x:()=>Ia(e,da(r,"float32"))}}},fd={kernelName:on,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ia(e,da(Al(n),"float32"))}}},md={kernelName:ln,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pi(e,n.shape)}}},gd={kernelName:hn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>gs.runKernel(dn,s,n)}}},bd={kernelName:un,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>gs.runKernel(cn,s,n)}}},xd={kernelName:fn,gradFunc:(e,t,n)=>{const{dims:r}=n,s=I(r,e.shape);return{x:()=>nl(e,s)}}},yd={kernelName:mn,gradFunc:e=>({x:()=>$a(e)})},vd={kernelName:gn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Wo(ka(e,Ia(Ma(n,1.5),2)))}}},wd=Ts({logicalNot_:function(e){const t={x:Ns(e,"x","logicalNot","bool")};return gs.runKernel(St,t)}}),kd={kernelName:yn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>da($a(n),"float32"),t:()=>Ia(e,da(n,e.dtype)),e:()=>Ia(e,da(wd(n),e.dtype))}}},Id={kernelName:vn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=bo(n,Ta(0)),r=Ta(Gu),s=Ta(Hu),a=Ia(e,s),i=Ia(Ia(e,r),co(da(n,"float32")));return vl(t,a,i)}}}},Sd={kernelName:Nn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ia(e,Ia(n,La(Ta(1),n)))}}},Nd={kernelName:Sn,gradFunc:e=>({x:()=>$a(e)})},$d=Ts({cos_:function(e){const t={x:Ns(e,"x","cos","float32")};return gs.runKernel(Fe,t)}}),Cd={kernelName:kn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ia($d(da(n,"float32")),e)}}},Td=Ts({cosh_:function(e){const t={x:Ns(e,"x","cosh","float32")};return gs.runKernel(_e,t)}}),Ed={kernelName:In,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ia(Td(da(n,"float32")),e)}}},Rd={kernelName:wn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,l]=xi(r,s,a),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>jo(e,u)}}},Ad={kernelName:An,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=Ia(e,r);return{logits:()=>La(a,Ia(Io(a,[s],!0),r))}}},Fd={kernelName:$n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ia(e,al(n))}}},_d=Ts({batchToSpaceND_:function(e,t,n){const r=Ns(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));p(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),p(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),p(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},i={blockShape:t,crops:n};return gs.runKernel(be,a,i)}}),Dd={kernelName:En,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>_d(e,r,s)}}},Od={kernelName:Rn,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Ki(e,r)}}},Md=[Oc,Mc,Lc,zc,Pc,Bc,Wc,Uc,Vc,Gc,Hc,qc,Kc,Yc,Jc,Qc,eh,th,nh,rh,sh,ah,oh,ih,uh,hh,ph,mh,gh,bh,hd,xh,yh,vh,wh,kh,Sh,Ih,$h,Th,Ah,Fh,_h,Dh,Oh,Mh,Lh,zh,Ph,Wh,Vh,Vh,Hh,jh,Xh,Yh,Jh,Zh,Qh,ed,td,nd,rd,sd,ad,id,id,od,ld,cd,dd,pd,fd,md,gd,bd,xd,yd,vd,kd,Id,Sd,Nd,Cd,Ed,Rd,Ad,Fd,Dd,Dd,Od,Od,{kernelName:Cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ka(e,Ia(Sa(da(n,"float32")),2))}}},{kernelName:Ln,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ta(2);return{a:()=>Ia(e,Ia(s,La(n,r))),b:()=>Ia(e,Ia(s,La(r,n)))}}},{kernelName:zn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ia(e,Ia(da(n,"float32"),2))}}},{kernelName:er,gradFunc:e=>({x:()=>$a(e)})},{kernelName:Vn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ua(n.shape,r.shape);return{a:()=>{let t=e;const r=Wa(n.shape,s);return r.length>0&&(t=Io(t,r)),Pi(t,n.shape)},b:()=>{let t=e;const n=Wa(r.shape,s);return n.length>0&&(t=Io(t,n)),Pi(Wo(t),r.shape)}}}},{kernelName:Tn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;I(a,r.shape).forEach((e=>{s[e]=1}));const i=Pi(e,s),o=Ia(i,Ho(r.shape,"float32"));return{x:()=>o}}},{kernelName:Gn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ka(e,Na($d(n)))}}},{kernelName:Hn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ia(La(Ta(1),Na(n)),e)}}},{kernelName:qn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=$a(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=va(t,il(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=va(t,il(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=va(t,il(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=va(t,il(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Xn,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=zo(s);return{x:()=>Il(e,a)}}},{kernelName:Jn,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>ml(e,s)}}},{kernelName:Zn,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Va(t,$a(t)),r=go(e,n);let s=xo(t,Ta(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=ho(s,e+1);s=No(s,Ho(r.shape,"bool"));const i=$a(r);return vl(s,r,i)}(e,n)}}},{kernelName:Qn,gradFunc:e=>({x:()=>$a(e)})}];for(const e of Md)pr(e);Zr().prototype.abs=function(){return this.throwIfDisposed(),Pa(this)};const Ld=Ts({acos_:function(e){const t={x:Ns(e,"x","acos")};return gs.runKernel(Q,t)}});Zr().prototype.acos=function(){return this.throwIfDisposed(),Ld(this)};const zd=Ts({acosh_:function(e){const t={x:Ns(e,"x","acosh")};return gs.runKernel(ee,t)}});Zr().prototype.acosh=function(){return this.throwIfDisposed(),zd(this)},Zr().prototype.add=function(e){return this.throwIfDisposed(),va(this,e)},Zr().prototype.all=function(e,t){return this.throwIfDisposed(),wi(this,e,t)},Zr().prototype.any=function(e,t){return this.throwIfDisposed(),ki(this,e,t)},Zr().prototype.argMax=function(e){return this.throwIfDisposed(),Ii(this,e)};const Pd=Ts({argMin_:function(e,t=0){const n={x:Ns(e,"x","argMin")},r={axis:t};return gs.runKernel(ie,n,r)}});Zr().prototype.argMin=function(e){return this.throwIfDisposed(),Pd(this,e)},Zr().prototype.asScalar=function(){return this.throwIfDisposed(),p(1===this.size,(()=>"The array must have only 1 element.")),Pi(this,[])},Zr().prototype.asType=function(e){return this.throwIfDisposed(),da(this,e)},Zr().prototype.as1D=function(){return this.throwIfDisposed(),Pi(this,[this.size])},Zr().prototype.as2D=function(e,t){return this.throwIfDisposed(),Pi(this,[e,t])},Zr().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Pi(this,[e,t,n])},Zr().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Pi(this,[e,t,n,r])},Zr().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),Pi(this,[e,t,n,r,s])};const Bd=Ts({asin_:function(e){const t={x:Ns(e,"x","asin")};return gs.runKernel(oe,t)}});Zr().prototype.asin=function(){return this.throwIfDisposed(),Bd(this)};const Wd=Ts({asinh_:function(e){const t={x:Ns(e,"x","asinh")};return gs.runKernel(le,t)}});Zr().prototype.asinh=function(){return this.throwIfDisposed(),Wd(this)};const Ud=Ts({atan_:function(e){const t={x:Ns(e,"x","atan")};return gs.runKernel(ue,t)}});Zr().prototype.atan=function(){return this.throwIfDisposed(),Ud(this)};const Vd=Ts({atan2_:function(e,t){let n=Ns(e,"a","atan2"),r=Ns(t,"b","atan2");[n,r]=ls(n,r);const s={a:n,b:r};return gs.runKernel(he,s)}});Zr().prototype.atan2=function(e){return this.throwIfDisposed(),Vd(this,e)};const Gd=Ts({atanh_:function(e){const t={x:Ns(e,"x","atanh")};return gs.runKernel(ce,t)}});Zr().prototype.atanh=function(){return this.throwIfDisposed(),Gd(this)},Zr().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Bi(this,e,t,n,r)},Zr().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),_d(this,e,t)},Zr().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),Ui(this,e,t,n,r,s)},Zr().prototype.broadcastTo=function(e){return this.throwIfDisposed(),qi(this,e)},Zr().prototype.cast=function(e){return this.throwIfDisposed(),da(this,e)};const Hd=Ts({ceil_:function(e){const t={x:Ns(e,"x","ceil","float32")};return gs.runKernel(we,t)}});Zr().prototype.ceil=function(){return this.throwIfDisposed(),Hd(this)},Zr().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),ji(this,e,t)},Zr().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Jr&&(e=[e]),Ki([this,...e],t)},Zr().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),eo(this,e,t,n,r,s,a)},Zr().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),no(this,e,t,n,r,s)},Zr().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Qi(this,e,t,n,r,s,a)},Zr().prototype.cos=function(){return this.throwIfDisposed(),$d(this)},Zr().prototype.cosh=function(){return this.throwIfDisposed(),Td(this)},Zr().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),ud(this,e,t,n)},Zr().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),fh(this,e,t,n)};const qd=Ts({depthToSpace_:function(e,t,n="NHWC"){const r=Ns(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];p(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),p(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),p(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),p(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:t,dataFormat:n};return gs.runKernel(ze,o,l)}});Zr().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),qd(this,e,t)},Zr().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),oo(this,e,t,n,r,s,a)};const jd=Ts({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=Ns(e,"x","dilation2d"),o=Ns(t,"filter","dilation2d");p(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),p(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),p("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=Pi(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),p(l.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`));const c={x:l,filter:o},h={strides:n,pad:r,dilations:s},d=gs.runKernel(Ve,c,h);return u?Pi(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});Zr().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),jd(this,e,t,n,r,s)};const Kd=Ts({divNoNan_:function(e,t){let n=Ns(e,"a","div"),r=Ns(t,"b","div");[n,r]=ls(n,r);const s=ka(n,r),a=$a(s),i=uo(r,a);return vl(i,a,s)}});Zr().prototype.divNoNan=function(e){return this.throwIfDisposed(),Kd(this,e)},Zr().prototype.div=function(e){return this.throwIfDisposed(),ka(this,e)};const Xd=Ts({dot_:function(e,t){const n=Ns(e,"t1","dot"),r=Ns(t,"t2","dot");p(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(p(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=Pi(n,[1,-1]),t=Pi(r,[-1,1]),s=$o(e,t);return Pi(s,[])}if(1===n.rank&&2===r.rank){const e=Pi(n,[1,-1]),t=Pi(r,[r.shape[0],r.shape[1]]),s=$o(e,t);return Pi(s,[s.size])}if(2===n.rank&&1===r.rank){const e=Pi(r,[-1,1]),t=$o(n,e);return Pi(t,[t.size])}{const e=Pi(r,[r.shape[0],r.shape[1]]);return $o(n,e)}}});Zr().prototype.dot=function(e){return this.throwIfDisposed(),Xd(this,e)},Zr().prototype.elu=function(){return this.throwIfDisposed(),lo(this)},Zr().prototype.equal=function(e){return this.throwIfDisposed(),uo(this,e)};const Yd=Ts({erf_:function(e){let t=Ns(e,"x","erf");p("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=da(t,"float32"));const n={x:t};return gs.runKernel(Ye,n)}});Zr().prototype.erf=function(){return this.throwIfDisposed(),Yd(this)};const Jd=Ts({euclideanNorm_:function(e,t=null,n=!1){return pu(e,"euclidean",t,n)}});Zr().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Jd(this,e,t)},Zr().prototype.exp=function(){return this.throwIfDisposed(),co(this)},Zr().prototype.expandDims=function(e){return this.throwIfDisposed(),ho(this,e)};const Zd=Ts({expm1_:function(e){const t={x:Ns(e,"x","expm1")};return gs.runKernel(et,t)}});Zr().prototype.expm1=function(){return this.throwIfDisposed(),Zd(this)},Zr().prototype.fft=function(){return this.throwIfDisposed(),Nl(this)},Zr().prototype.flatten=function(){return this.throwIfDisposed(),Pi(this,[this.size])},Zr().prototype.floor=function(){return this.throwIfDisposed(),mo(this)},Zr().prototype.floorDiv=function(e){return this.throwIfDisposed(),wa(this,e)},Zr().prototype.gather=function(e,t){return this.throwIfDisposed(),go(this,e,t)},Zr().prototype.greaterEqual=function(e){return this.throwIfDisposed(),xo(this,e)},Zr().prototype.greater=function(e){return this.throwIfDisposed(),bo(this,e)},Zr().prototype.ifft=function(){return this.throwIfDisposed(),Cl(this)},Zr().prototype.irfft=function(){return this.throwIfDisposed(),Tl(this)};const Qd=Ts({isFinite_:function(e){const t={x:Ns(e,"x","isFinite")};return gs.runKernel(ft,t)}});Zr().prototype.isFinite=function(){return this.throwIfDisposed(),Qd(this)};const ep=Ts({isInf_:function(e){const t={x:Ns(e,"x","isInf")};return gs.runKernel(mt,t)}});Zr().prototype.isInf=function(){return this.throwIfDisposed(),ep(this)};const tp=Ts({isNaN_:function(e){const t={x:Ns(e,"x","isNaN")};return gs.runKernel(gt,t)}});Zr().prototype.isNaN=function(){return this.throwIfDisposed(),tp(this)},Zr().prototype.leakyRelu=function(e){return this.throwIfDisposed(),yo(this,e)},Zr().prototype.lessEqual=function(e){return this.throwIfDisposed(),ou(this,e)},Zr().prototype.less=function(e){return this.throwIfDisposed(),Gh(this,e)};const np=Ts({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=Ns(e,"x","localResponseNormalization");p(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),p(x(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=Pi(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:s},c=gs.runKernel($t,l,u);return o?Pi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});Zr().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),np(this,e,t,n,r)};const rp=Ts({logSigmoid_:function(e){const t=Ns(e,"x","logSigmoid");return Ca((e=>({value:Wo(dl(Wo(e))),gradFunc:t=>Ia(t,al(Wo(e)))})))(t)}});Zr().prototype.logSigmoid=function(){return this.throwIfDisposed(),rp(this)},Zr().prototype.logSoftmax=function(e){return this.throwIfDisposed(),So(this,e)},Zr().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),yu(this,e,t)},Zr().prototype.log=function(){return this.throwIfDisposed(),vo(this)},Zr().prototype.log1p=function(){return this.throwIfDisposed(),wo(this)},Zr().prototype.logicalAnd=function(e){return this.throwIfDisposed(),No(this,e)},Zr().prototype.logicalNot=function(){return this.throwIfDisposed(),wd(this)};const sp=Ts({logicalOr_:function(e,t){const n=Ns(e,"a","logicalOr","bool"),r=Ns(t,"b","logicalOr","bool");Ua(n.shape,r.shape);const s={a:n,b:r};return gs.runKernel(Nt,s)}});Zr().prototype.logicalOr=function(e){return this.throwIfDisposed(),sp(this,e)};const ap=Ts({logicalXor_:function(e,t){const n=Ns(e,"a","logicalXor","bool"),r=Ns(t,"b","logicalXor","bool");return Ua(n.shape,r.shape),No(sp(e,t),wd(No(e,t)))}});Zr().prototype.logicalXor=function(e){return this.throwIfDisposed(),ap(this,e)},Zr().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),$o(this,e,t,n)},Zr().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Co(this,e,t,n,r)},Zr().prototype.max=function(e,t){return this.throwIfDisposed(),ko(this,e,t)},Zr().prototype.maximum=function(e){return this.throwIfDisposed(),Va(this,e)},Zr().prototype.mean=function(e,t){return this.throwIfDisposed(),Eo(this,e,t)},Zr().prototype.min=function(e,t){return this.throwIfDisposed(),Ro(this,e,t)},Zr().prototype.minimum=function(e){return this.throwIfDisposed(),Ao(this,e)};const ip=Ts({mirrorPad_:function(e,t,n){p("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Ns(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");p(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)p(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),p(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},i={x:r};return gs.runKernel(zt,i,a)}});Zr().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),ip(this,e,t)};const op=Ts({mod_:function(e,t){let n=Ns(e,"a","mod"),r=Ns(t,"b","mod");[n,r]=ls(n,r);const s={a:n,b:r};return gs.runKernel(Pt,s)}});Zr().prototype.mod=function(e){return this.throwIfDisposed(),op(this,e)},Zr().prototype.mul=function(e){return this.throwIfDisposed(),Ia(this,e)},Zr().prototype.neg=function(){return this.throwIfDisposed(),Wo(this)},Zr().prototype.norm=function(e,t,n){return this.throwIfDisposed(),pu(this,e,t,n)},Zr().prototype.notEqual=function(e){return this.throwIfDisposed(),Uo(this,e)},Zr().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Vo(this,e,t,n)},Zr().prototype.onesLike=function(){return this.throwIfDisposed(),qo(this)},Zr().prototype.pad=function(e,t){return this.throwIfDisposed(),jo(this,e,t)};const lp=Ts({pool_:function(e,t,n,r,s,a,i){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const o=Ns(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=Pi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),p(Oi(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const c=Ni(l.shape,t,a,s,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const f=1===h[0]&&1===h[1],[m,g]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([c.inHeight,c.inWidth],h,d),b=f?r:"valid",x=f?l:Zc(l,h,m),y=("avg"===n?()=>Bi(x,t,a,b,i):()=>Co(x,t,a,b,i))(),v=f?y:_d(y,h,g);return u?Pi(v,[v.shape[1],v.shape[2],v.shape[3]]):v}});Zr().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),lp(this,e,t,n,r,s,a)},Zr().prototype.pow=function(e){return this.throwIfDisposed(),Ma(this,e)},Zr().prototype.prelu=function(e){return this.throwIfDisposed(),Ko(this,e)};const up=Ts({prod_:function(e,t=null,n=!1){let r=Ns(e,"x","prod");"bool"===r.dtype&&(r=da(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return gs.runKernel(Qt,s,a)}});Zr().prototype.prod=function(e,t){return this.throwIfDisposed(),up(this,e,t)};const cp=Ts({reciprocal_:function(e){const t={x:Ns(e,"x","reciprocal")};return gs.runKernel(an,t)}});Zr().prototype.reciprocal=function(){return this.throwIfDisposed(),cp(this)},Zr().prototype.relu=function(){return this.throwIfDisposed(),tl(this)},Zr().prototype.relu6=function(){return this.throwIfDisposed(),Rl(this)},Zr().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Pi(this,e.shape)},Zr().prototype.reshape=function(e){return this.throwIfDisposed(),Pi(this,e)},Zr().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),su(this,e,t,n)},Zr().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),au(this,e,t,n)},Zr().prototype.reverse=function(e){return this.throwIfDisposed(),nl(this,e)},Zr().prototype.rfft=function(){return this.throwIfDisposed(),$l(this)},Zr().prototype.round=function(){return this.throwIfDisposed(),lu(this)},Zr().prototype.rsqrt=function(){return this.throwIfDisposed(),Nh(this)},Zr().prototype.selu=function(){return this.throwIfDisposed(),rl(this)},Zr().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),sl(this,e,t,n,r,s,a)},Zr().prototype.sigmoid=function(){return this.throwIfDisposed(),al(this)};const hp=Ts({sign_:function(e){const t={x:Ns(e,"x","sign")};return gs.runKernel(Sn,t)}});Zr().prototype.sign=function(){return this.throwIfDisposed(),hp(this)},Zr().prototype.sin=function(){return this.throwIfDisposed(),ch(this)},Zr().prototype.sinh=function(){return this.throwIfDisposed(),dh(this)},Zr().prototype.slice=function(e,t){return this.throwIfDisposed(),il(this,e,t)},Zr().prototype.softmax=function(e){return this.throwIfDisposed(),hl(this,e)},Zr().prototype.softplus=function(){return this.throwIfDisposed(),dl(this)},Zr().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Zc(this,e,t)},Zr().prototype.split=function(e,t){return this.throwIfDisposed(),pl(this,e,t)},Zr().prototype.sqrt=function(){return this.throwIfDisposed(),Sa(this)},Zr().prototype.square=function(){return this.throwIfDisposed(),Na(this)},Zr().prototype.squaredDifference=function(e){return this.throwIfDisposed(),xu(this,e)},Zr().prototype.squeeze=function(e){return this.throwIfDisposed(),fl(this,e)},Zr().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Jr?[this,e]:[this,...e];return ml(n,t)},Zr().prototype.step=function(e){return this.throwIfDisposed(),Al(this,e)};const dp=Ts({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,l=0){const u={x:Ns(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return gs.runKernel(Pn,u,c)}});Zr().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),dp(this,e,t,n,r,s,a,i,o)},Zr().prototype.sub=function(e){return this.throwIfDisposed(),La(this,e)},Zr().prototype.sum=function(e,t){return this.throwIfDisposed(),Io(this,e,t)};const pp=Ts({tan_:function(e){const t={x:Ns(e,"x","tan","float32")};return gs.runKernel(Gn,t)}});Zr().prototype.tan=function(){return this.throwIfDisposed(),pp(this)},Zr().prototype.tanh=function(){return this.throwIfDisposed(),gl(this)},Zr().prototype.tile=function(e){return this.throwIfDisposed(),po(this,e)},Zr().prototype.toBool=function(){return this.throwIfDisposed(),da(this,"bool")},Zr().prototype.toFloat=function(){return this.throwIfDisposed(),da(this,"float32")},Zr().prototype.toInt=function(){return this.throwIfDisposed(),da(this,"int32")};const fp=Ts({topk_:function(e,t=1,n=!0){const r=Ns(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[o,l]=gs.runKernel(jn,a,i);return{values:o,indices:l}}});Zr().prototype.topk=function(e,t){return this.throwIfDisposed(),fp(this,e,t)},Zr().prototype.transpose=function(e){return this.throwIfDisposed(),Il(this,e)};const mp=Ts({unique_:function(e,t=0){const n=Ns(e,"x","unique","string_or_numeric");p(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,i]=gs.runKernel(Yn,r,s);return{values:a,indices:i}}});Zr().prototype.unique=function(e){return this.throwIfDisposed(),mp(this,e)},Zr().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Ch(this,e,t)},Zr().prototype.unstack=function(e){return this.throwIfDisposed(),yl(this,e)},Zr().prototype.where=function(e,t){return this.throwIfDisposed(),vl(e,this,t)},Zr().prototype.zerosLike=function(){return this.throwIfDisposed(),$a(this)};class gp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,gp.prototype)}}class bp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,bp.prototype)}}class xp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,xp.prototype)}}class yp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,yp.prototype)}}class vp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,vp.prototype)}}class wp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,wp.prototype)}}class kp{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function Ip(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Sp(e,t){if(!e)throw new vp(t)}function Np(e,t){let n=0;for(const r of e)r===t&&n++;return n}function $p(e){return 1===e.length?e[0]:e}function Cp(e){return Array.isArray(e)?e:[e]}function Tp(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Ep(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Rp={};function Ap(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Fp(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Fp(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Fp(t):e[n]=t.value)}}}function _p(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in Rp)a=Rp[s];else if(a=t[s],null==a)throw new xp(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new xp(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in Rp?[o,l]=Rp.className:i in t&&([o,l]=t[i]),null==o)throw new xp(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(Rp))e[t]=Rp[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},Rp);for(const e of Object.keys(n))Rp[e]=n[e];Fp(a.config);const r=l(o,a.config,n,s);return Rp=Object.assign({},t),r}{const e=Object.assign({},Rp);for(const e of Object.keys(n))Rp[e]=n[e];const t=new o(a.config);return Rp=Object.assign({},e),t}}}function Dp(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Op(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Mp(e){if(null==e)throw new xp(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Lp(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new xp(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function zp(e,t,n=0,r=1/0){return Sp(n>=0),Sp(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function Pp(e,t){Array.isArray(e)?(p(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Pp(e,`element ${n+1} of ${t}`)))):p(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Bp(e)}.`))}function Bp(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Bp(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Wp(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Up=0;function Vp(){return Up++}const Gp={};function Hp(e=""){return e in Gp||(Gp[e]=0),Gp[e]+=1,e+Gp[e].toString()}const qp=["channelsFirst","channelsLast"],jp=["nearest","bilinear"],Kp=["valid","same","causal"],Xp=["max","avg"],Yp=["sum","mul","concat","ave"],Jp=new Map;function Zp(e){Lp(qp,"DataFormat",e)}function Qp(e){Lp(Kp,"PaddingMode",e)}function ef(e){Lp(Xp,"PoolMode",e)}const tf=[],nf="/";function rf(e,t){tf.push(e);try{const e=t();return tf.pop(),e}catch(e){throw tf.pop(),e}}function sf(e){if(!lf(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===tf.length?"":tf.join(nf)+nf)+e}function af(e){if(!lf(e))throw new Error("Not a valid tensor name: '"+e+"'");Jp.has(e)||Jp.set(e,0);const t=Jp.get(e);if(Jp.set(e,Jp.get(e)+1),t>0){const n=`${e}_${t}`;return Jp.set(n,1),n}return e}const of=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function lf(e){return!!e.match(of)}function uf(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function cf(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function hf(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function df(e,t){if(t<e)throw new xp(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let pf;function ff(){return null==pf&&(pf=gs.backend.epsilon()),pf}function mf(e,t){return da(e,t)}function gf(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Pi(e,n)}function bf(e,t,n){return ga((()=>{switch(e.rank){case 1:return ol(e,t,n);case 2:return ll(e,[t,0],[n,e.shape[1]]);case 3:return ul(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return cl(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return il(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return il(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new xp(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function xf(e,t,n){return ga((()=>{switch(e.rank){case 1:return ol(e,t,n);case 2:return ll(e,[0,t],[e.shape[0],n]);case 3:return ul(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return cl(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new xp(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function yf(e,t,n,r){return ga((()=>{switch(e.rank){case 1:return ol(e,t,n);case 2:switch(r){case 1:return bf(e,t,n);case 2:return xf(e,t,n);default:throw new xp(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return bf(e,t,n);case 2:return ul(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return xf(e,t,n);default:throw new xp(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return bf(e,t,n);case 2:return cl(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return cl(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return xf(e,t,n);default:throw new xp(`The axis is not within the rank of the tensor ${r}`)}default:throw new xp(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function vf(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Ki(e,t)}function wf(e,t){switch(e.rank){case 1:return Xi([e,t]);case 2:return Yi([e,t],0);case 3:return Ji([e,t],0);case 4:return Zi([e,t],0);default:throw new xp(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function kf(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new xp(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return po(e,t)}function If(e,t=0,n=1,r,s){return Zo(e,t,n,r,s)}function Sf(e,t,n,r){if(e.rank<2||t.rank<2)throw new yp(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new yp(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Pl({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Cf(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),a=s.pop();e=Pi(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Pi(Il(t,c),[l,-1]);const h=[...s,...u];return Pi(Pl({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Cf(e.rank,r,"channelsLast"):null,activation:n}),h)}}function Nf(e,t,n){return ga((()=>(t=Array.isArray(t)?bl(t,"int32"):da(t,"int32"),go(e,t,n))))}function $f(e){return Ia(e,e)}function Cf(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new xp(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Pi(t,[1,r[0],1,1,1]):Pi(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Pi(t,[1,1,1,1,r[0]]):Pi(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Pi(t,[1,r[0],1,1]):Pi(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Pi(t,[1,1,1,r[0]]):Pi(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Pi(t,[1,r[0],1]):Pi(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Pi(t,[1,1,r[0]]):Pi(t,[1].concat(r))}else if(e<3)return t;throw new xp(`Unsupported input rank by biasAdd: ${t.rank}`)}function Tf(e,t,n){return ga((()=>(null==n&&(n="channelsLast"),Zp(n),va(e,Cf(e.rank,t,n)))))}function Ef(e,t,n,r){return ga((()=>Sl(e,t,n,r)))}function Rf(e,t,n=!1){return n?e():t()}const Af=["fanIn","fanOut","fanAvg"],Ff=["normal","uniform","truncatedNormal"];class _f extends Ea{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Df extends _f{apply(e,t){return Go(e,t)}}Df.className="Zeros",Aa(Df);class Of extends _f{apply(e,t){return Ho(e,t)}}Of.className="Ones",Aa(Of);class Mf extends _f{constructor(e){if(super(),"object"!=typeof e)throw new xp(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new xp(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return ga((()=>Ia(Ta(this.value),Ho(e,t))))}getConfig(){return{value:this.value}}}Mf.className="Constant",Aa(Mf);class Lf extends _f{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Qo(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Lf.className="RandomUniform",Aa(Lf);class zf extends _f{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new yp(`randomNormal does not support dType ${t}.`);return If(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}zf.className="RandomNormal",Aa(zf);class Pf extends _f{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new yp(`truncatedNormal does not support dType ${t}.`);return xl(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Pf.className="TruncatedNormal",Aa(Pf);class Bf extends _f{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return ga((()=>{if(2!==e.length||e[0]!==e[1])throw new xp("Identity matrix initializer can only be used for 2D square matrices.");return Ia(this.gain,fo(e[0]))}))}getConfig(){return{gain:this.gain}}}Bf.className="Identity",Aa(Bf);class Wf extends _f{constructor(e){if(super(),e.scale<0)throw new xp(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Lp(Af,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Lp(Ff,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Zp(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=uf(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=uf(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=uf(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new yp(`${this.getClassName()} does not support dType ${t}.`);return xl(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return Qo(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Wf.className="VarianceScaling",Aa(Wf);class Uf extends Wf{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Wf.className}}Uf.className="GlorotUniform",Aa(Uf);class Vf extends Wf{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Wf.className}}Vf.className="GlorotNormal",Aa(Vf);class Gf extends Wf{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Wf.className}}Gf.className="HeNormal",Aa(Gf);class Hf extends Wf{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Wf.className}}Hf.className="HeUniform",Aa(Hf);class qf extends Wf{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Wf.className}}qf.className="LeCunNormal",Aa(qf);class jf extends Wf{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Wf.className}}jf.className="LeCunUniform",Aa(jf);class Kf extends _f{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new yp("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return ga((()=>{if(e.length<2)throw new yp("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=If(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=wu.gramSchmidt(t);return e[0]>e[1]&&(n=Il(n)),Ia(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Kf.className="Orthogonal",Aa(Kf);const Xf={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Yf(e,t={}){return _p(e,Ra.getMap().classNameMap,t,"initializer")}function Jf(e){return Ap(e)}function Zf(e){if("string"==typeof e){const t=e in Xf?Xf[e]:e;if("GlorotNormal"===t)return new Vf;if("GlorotUniform"===t)return new Uf;if("HeNormal"===t)return new Gf;if("HeUniform"===t)return new Hf;if("LeCunNormal"===t)return new qf;if("LeCunUniform"===t)return new jf;{const e={};return e.className=t,e.config={},Yf(e)}}return e instanceof _f?e:Yf(e)}function Qf(e){return Array.isArray(e)&&Array.isArray(e[0])}function em(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function tm(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new xp(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function nm(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new xp(`Expected exactly 1 Shape; got ${e.length}`)}return e}function rm(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const sm="Variable";class am{constructor(e,t="float32",n=sm,r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Vp(),n=null==n?sm:n,this.originalName=sf(n),this.name=af(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(e,t=!0,n,r){return gs.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function im(e){return e.map((e=>e.read()))}function om(e){e.forEach((e=>{e[0].write(e[1])}))}class lm{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class um{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=Vp(),null!=a&&(this.originalName=sf(a),this.name=af(this.originalName)),this.rank=t.length}}let cm=0;class hm{constructor(e,t){this.callArgs=t,this.id=cm++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let dm=0;class pm extends Ea{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=dm++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Tp(e)+"_"+Hp(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new bp(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new xp(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return $p(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return $p(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new gp(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new gp(`Layer ${this.name} is not connected, no input to return.`);return $p(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new gp(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new gp(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return $p(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Cp(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=Cp(this.inputSpec);if(e.length!==t.length)throw new xp(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new xp(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new xp(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new xp(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new xp(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new xp(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new xp(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Cp(e);let r=!0;for(const e of n)if(!(e instanceof um)){r=!1;break}let s=!0;for(const e of n)if(e instanceof um){s=!1;break}if(r===s)throw new xp("Arguments to apply() must be all SymbolicTensors or all Tensors");return rf(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Cp(e))t.push(n.shape);this.build($p(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=Cp(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=$p(a),null!=this.activityRegularizer)throw new yp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=Cp(e);const t=[];for(const n of e)t.push(n.shape);return $p(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new um(a,n,this,Cp(e),t,this.name,r))):new um(a,r,this,Cp(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new yp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new gp(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new gp(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new bp(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return rm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return im(e?this.trainableWeights:this.weights)}setWeights(e){ga((()=>{const t=this.weights;if(t.length!==e.length)throw new xp(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=im(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!b(a.shape,o.shape))throw new xp(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}om(n)}))}addWeight(e,t,n,r,s,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new xp(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():Zf("zeros"));const l=r.apply(t,n),u=new am(l,n,e,a,i);return l.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Cp(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,s,a,i=null){const o=Cp(e);t=Cp(t),n=Cp(n),r=Cp(r),s=em(s),a=em(a);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new hm({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function fm(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=fm(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class mm extends pm{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Hp("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new xp("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new xp("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new xp("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new um(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new hm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new xp(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}mm.className="InputLayer",Aa(mm);class gm{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof gm)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new xp(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return da(t,e.dtype)}catch(n){throw new xp(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof um){if(null==this.id2Value[e.id])throw new xp(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new xp(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof um){if(null==this.id2Value[e.id])throw new xp(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new xp(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&ba(this.id2Mask)}}const bm=new kp,xm=new kp;function ym(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=bm.get(c);if(null==d){const e=function(e,t){p(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=wm(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=wm(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:vm(r)}}(i,t);d=e.sorted,h=e.recipientCounts,bm.put(c,d),xm.put(c,h)}h={},s||Object.assign(h,xm.get(c));const f=new gm(t);for(let e=0;e<d.length;++e){if(null!=r){const e=ma().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=d[e],i=a.sourceLayer;if(i instanceof mm)continue;const u=[],c=[],p=[];let m=!1;for(const e of a.inputs){const n=f.getValue(e),r=f.getMask(e);u.push(n),c.push(r),null!=r&&(m=!0),s||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||p.push(n))}m&&((n=n||{}).mask=c[0]);const g=Cp(i.apply(u,n));let b=null;i.supportsMasking&&(b=i.computeMask(u,c));const x=km(a),y=Array.isArray(x)?x:[x];for(let e=0;e<y.length;++e){f.hasKey(y[e])||f.add(y[e],g[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(y[e].name);-1!==t&&(l[t]=g[e])}s||ba(p)}return f.disposeMasks(),a?l:l[0]}function vm(e){const t={};for(const n in e)t[n]=e[n].size;return t}function wm(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function km(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Im(e,t){return ga((()=>Sa(Io(Ia(e,e),t,!0))))}j().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=bm&&bm.setMaxEntries(e),null!=xm&&xm.setMaxEntries(e)}));class Sm extends Ea{getConfig(){return{}}}class Nm extends Sm{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ga((()=>{const t=Im(e,this.axis),n=ji(t,0,this.maxValue);return Ia(e,ka(n,va(ff(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Nm.className="MaxNorm",Aa(Nm);class $m extends Sm{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ga((()=>ka(e,va(ff(),Im(e,this.axis)))))}getConfig(){return{axis:this.axis}}}$m.className="UnitNorm",Aa($m);class Cm extends Sm{apply(e){return tl(e)}}Cm.className="NonNeg",Aa(Cm);class Tm extends Sm{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ga((()=>{const t=Im(e,this.axis),n=va(Ia(this.rate,ji(t,this.minValue,this.maxValue)),Ia(1-this.rate,t));return Ia(e,ka(n,va(ff(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Tm.className="MinMaxNorm",Aa(Tm);const Em={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Rm(e){return Ap(e)}function Am(e,t={}){return _p(e,Ra.getMap().classNameMap,t,"constraint")}function Fm(e){return null==e?null:"string"==typeof e?Am({className:e in Em?Em[e]:e,config:{}}):e instanceof Sm?e:Am(e)}async function _m(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];ba(r)}}function Dm(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Om;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Om||(Om={}));class Mm{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Lm{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class zm extends Mm{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=ga((()=>va(this.totals[e],Ia(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:ga((()=>{const n=Ia(ka(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),xa(t[e])})))}}class Pm extends Mm{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class Bm extends Mm{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Su,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");R(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():Ar();return(...a)=>{const i=null!=n?n():Ar();return i-s<t||(s=i,r=e(...a)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await _m(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await _m(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await _m(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await _m(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await _m(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):R(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await _m(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await _m(e),await this.trainEnd(e))}}function Wm(e,t){return null==e&&(e={}),e instanceof Mm?[e]:Array.isArray(e)&&e[0]instanceof Mm?e:Cp(e).map((e=>new Bm(e,t)))}class Um{constructor(){}static registerCallbackConstructor(e,t){p(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Um.checkForDuplicate(t),null==Um.constructors[e]&&(Um.constructors[e]=[]),Um.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Um.constructors)Um.constructors[+t].forEach((t=>{if(t===e)throw new xp("Duplicate callback constructor.")}))}static clear(){Um.constructors={}}static createCallbacks(e){const t=[];for(const n in Um.constructors){const r=+n;e>=r&&t.push(...Um.constructors[r])}return t.map((e=>new e))}}function Vm(e,t,n,r,s,a,i,o,l){const u=new Pm,c=[new zm,...Um.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new Lm(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Gm(e,t={},n=!1){return _p(e,Ra.getMap().classNameMap,t,"layer",n)}function Hm(e,t){return ga((()=>{"float32"!==e.dtype&&(e=da(e,"float32"));const n=Io($f(e),t,!0),r=Da(n.shape,ff()),s=Sa(Va(n,r));return ka(e,s)}))}function qm(e,t){return ga((()=>Eo($f(La(t,e)),-1)))}function jm(e,t){return ga((()=>Eo(Pa(La(t,e)),-1)))}function Km(e,t){return ga((()=>{const n=La(e,t),r=ji(Pa(e),ff(),Number.MAX_VALUE),s=Pa(ka(n,r));return Ia(100,Eo(s,-1))}))}function Xm(e,t,n=!1){return ga((()=>{if(n)t=hl(t);else{const e=Io(t,t.shape.length-1,!0);t=ka(t,e)}return t=ji(t,ff(),1-ff()),Wo(Io(Ia(da(e,"float32"),vo(t)),t.shape.length-1))}))}function Ym(e,t,n=!1){return ga((()=>{const r=da(mo(function(e){const t=[uf(e.shape)];return Pi(e,t)}(e)),"int32"),s=(t=ji(t,ff(),1-ff())).shape;return Xm(Pi(Vo(r,s[s.length-1]),s),t,n)}))}function Jm(e,t){return ga((()=>{let n;return n=ji(t,ff(),1-ff()),n=vo(ka(n,La(1,n))),Eo(function(e,t){if(!b(e.shape,t.shape))throw new xp(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return ga((()=>{const n=tl(t),r=Wo(Pa(t));return va(La(n,Ia(t,e)),wo(co(r)))}))}(e,n),-1)}))}function Zm(e,t){return ga((()=>{const n=Hm(e,-1),r=Hm(t,-1),s=Ia(n,r);return Wo(Io(s,-1))}))}Um.constructors={};const Qm={meanSquaredError:qm,meanAbsoluteError:jm,meanAbsolutePercentageError:Km,meanSquaredLogarithmicError:function(e,t){return ga((()=>{const n=ji(t,ff(),Number.MAX_VALUE),r=vo(va(1,n)),s=ji(e,ff(),Number.MAX_VALUE),a=vo(va(1,s));return Eo($f(La(r,a)),-1)}))},squaredHinge:function(e,t){return ga((()=>{const n=Va(0,La(1,Ia(e,t)));return Eo($f(n),-1)}))},hinge:function(e,t){return ga((()=>{const n=Va(0,La(1,Ia(e,t)));return Eo(n,-1)}))},categoricalHinge:function(e,t){return ga((()=>{const n=Io(Ia(e,t),-1),r=ko(Ia(La(1,e),t),-1);return Va(0,va(1,La(r,n)))}))},logcosh:function(e,t){return ga((()=>{const n=Math.log(2),r=La(t,e),s=La(va(r,dl(Ia(-2,r))),n);return Eo(s,-1)}))},categoricalCrossentropy:Xm,sparseCategoricalCrossentropy:Ym,binaryCrossentropy:Jm,kullbackLeiblerDivergence:function(e,t){return ga((()=>{const n=ji(e,ff(),1),r=ji(t,ff(),1);return Io(Ia(e,vo(ka(n,r))),-1)}))},poisson:function(e,t){return ga((()=>{const n=vo(va(ff(),t));return Eo(La(t,Ia(e,n)),-1)}))},cosineProximity:Zm};function eg(e){if("string"==typeof e){if(e in Qm)return Qm[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new xp(t)}return e}function tg(e,t){return ga((()=>{const n=Ia(.5,qo(t)),r=mf(bo(t,n),e.dtype);return Eo(uo(e,r),-1)}))}function ng(e,t){return ga((()=>mf(uo(Ii(e,-1),Ii(t,-1)),"float32")))}function rg(e,t){return Jm(e,t)}function sg(e,t){return e.rank===t.rank&&(e=fl(e,[e.rank-1])),(t=Ii(t,-1)).dtype!==e.dtype&&(t=da(t,e.dtype)),da(uo(e,t),"float32")}const ag=Xm,ig=Ym,og={binaryAccuracy:tg,categoricalAccuracy:ng,precision:function(e,t){return ga((()=>{const n=function(e,t){return ga((()=>da(Io(No(uo(e,1),uo(t,1))),"float32")))}(e,t),r=function(e,t){return ga((()=>da(Io(No(uo(e,0),uo(t,1))),"float32")))}(e,t),s=va(n,r);return da(vl(bo(s,0),ka(n,s),0),"float32")}))},categoricalCrossentropy:ag,sparseCategoricalCrossentropy:ig,mse:qm,MSE:qm,mae:jm,MAE:jm,mape:Km,MAPE:Km,cosine:Zm};function lg(e){if("string"==typeof e&&e in og)return og[e];if("string"!=typeof e&&null!=e)return e;throw new xp(`Unknown metric ${e}`)}function ug(e){if(Sp(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Qm))if(Qm[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(og))if(og[n]===e){t=n;break}return void 0!==t?t:e.name}}const cg=1048576;function hg(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!dg(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>cg&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${cg}.`)}}function dg(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!dg(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!dg(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function pg(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function fg(e,t,n){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}pg([`${e.name} (${e.getClassName()})`,s,r,e.countParams().toString()],t,n)}function mg(e,t,n,r){let s,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];i.push(`${n}[${r}][${s}]`)}const o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];pg([`${o} (${l})`,a,s,e.countParams().toString(),u],t,r);for(let e=1;e<i.length;++e)pg(["","","","",i[e]],t,r)}function gg(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function bg(e,t){if(null===e)return null;if("string"==typeof e)return Ep(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];gg(t,s,r)?n.push(r):n.push(bg(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Ep(n);t[e]=bg(r,e)}}return t}}function xg(e,t){if(null==e)return null;if("string"==typeof e)return Tp(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];gg(t,s,r)?n.push(r):n.push(xg(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[Tp(n)]="name"!==n&&"className"!==n||"string"!=typeof r?xg(r,n):r}return t}}const yg="4.2.0";class vg extends pm{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Hp(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Op(this.inputs).length!==this.inputs.length)throw new xp(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Op(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;Sp(0===n,"input layer has >1 nodes"),Sp(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof mm))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new bp(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(vg.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const r=u.inputTensors[e],s=u.inboundLayers[e],a=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,s,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,i),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=s.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(s[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(Dp);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof vg&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(Dp);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new bp(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new bp(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new hm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new xp("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new xp(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const s=[];for(const r in e){let a=r;if(null==n[r]){const e=r.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[r]]);else if(t)throw new xp(`Provided weight data has no target variable: ${r}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new xp(`${e.length} of ${r} weights are not set: ${e}`)}om(s)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${yg}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=xg(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return ga((()=>{e=Cp(e);const n=new gm;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return ym(this.outputs,n,t)}))}computeMask(e,t){return ga((()=>{let n;return e=Cp(e),n=null==t?Ip(null,e.length):Cp(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=em(e);if(t.length!==this.inputLayers.length)throw new xp(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Dp);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=em(t.computeOutputShape($p(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${a}_${e}`]=s[e]}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];Sp(t in n),s.push(n[t])}return $p(s)}runInternalGraph(e,t){null==t&&(t=Ip(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],i=t[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Dp);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),o=Cp(t.call(e,u)),l=Cp(t.computeMask(e,n)),r=[e],i=[n]}else r=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=Cp(t.call(r,u)),l=Cp(t.computeMask(r,i));if(t.activityRegularizer)throw new yp("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=l[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const e of this.outputs){Sp(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),s.push(t),a.push(r)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof vg?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=vg.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new xp(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new xp("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new xp(`No such layer: ${e}`)}calculateLosses(){return ga((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=vg.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=vg.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let l=t[vg.nodeKey(s,a)];null==l&&(l=0),e.push([s.name,l,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=vg.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=vg.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],l=a[1],u=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply($p(n),r)}function l(e){const n=e.name,a=Gm(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new xp(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!Mp(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];Sp(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];Sp(t in s);const a=s[t].inboundNodes[n].outputTensors;d.push(a[r])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new xp("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){ga((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function wg(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function kg(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=ga((()=>{if(1===e.shape.length)return pa(e);if(2===e.shape.length){if(e.shape[1]>1)return Ii(e,1);if(1===e.shape[1])return Pi(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());ba(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),bl(s,"float32")}return null}function Ig(e,t){return Ia(e,t)}const Sg=32;function Ng(e,t){let n,r;const s=t;n=s.xs,r=s.ys,p(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=$g("input",e.inputNames,n),i=$g("output",e.outputNames,r),o=a[0].shape[0];p(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),p(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)p(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)p(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function $g(e,t,n){if(n instanceof Jr)return[n];if(Array.isArray(n))return p(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new xp(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function Cg(e){return"function"==typeof e.iterator}function Tg(e){p(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Eg(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>bf(e,t,n-t))):bf(e,t,n-t)}function Rg(e,t){return ga((()=>null==e?null:Array.isArray(e)?e.map((e=>Rg(e,t))):Nf(e,"int32"===t.dtype?t:da(t,"int32"))))}function Ag(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function Fg(e){const t=[];e instanceof Jr&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(gf(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function _g(e,t){if(null==e)return;const n=[];if(t instanceof Jr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof Jr)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Dg(e){return Array.isArray(e)}function Og(e){return!function(e){return e instanceof Jr}(e)&&!Dg(e)}function Mg(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Dg(e)&&e.length>0)t=!0;else if(Og(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new xp(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(Og(e)){a=[];for(const n of t){if(null==e[n])throw new xp(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(Dg(e)){if(e.length!==t.length)throw new xp(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new xp(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Fg(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new xp(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const a=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&a!==o)throw new xp(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function Lg(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new xp(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new xp(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new xp(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l!==o)throw new xp(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class zg extends vg{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new xp("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),pg(a,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?fg(o[e],n,r):mg(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?rm(e.collectedTrainableWeights):rm(e.trainableWeights),t}(e),u=rm(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>ku.adagrad(.01),Adadelta:()=>ku.adadelta(1,.95,ff()),Adam:()=>ku.adam(.001,.9,.999,ff()),Adamax:()=>ku.adamax(.002,.9,.999,ff(),0),RMSProp:()=>ku.rmsprop(.001,.9,0,ff()),SGD:()=>ku.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new xp(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Fa))throw new xp("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new xp(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>eg(e)))}else{const n=eg(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new xp(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(eg(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],rf("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};rf("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===Jm?-1!==["accuracy","acc"].indexOf(i)?r=tg:-1!==["crossentropy","ce"].indexOf(i)&&(r=rg):this.lossFunctions[e]===Ym?-1!==["accuracy","acc"].indexOf(i)?r=sg:-1!==["crossentropy","ce"].indexOf(i)&&(r=ig):-1!==["accuracy","acc"].indexOf(i)?r=ng:-1!==["crossentropy","ce"].indexOf(i)&&(r=ag),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=lg(i);a=e,n=""+ug(i)}let t;rf(n,(()=>{t=a})),s(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Tg(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const e=s[0].concat(s[1]);this.makeTestFunction();const t=this.testFunction;return $p(this.testLoop(t,e,r,n.verbose,n.steps))}finally{_g(s[0],e),_g(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new yp("Verbose mode is not implemented yet.");p(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!r||l<n.batches;){const t=await i.next();if(a=ga((()=>{if(t.value){const{xs:n,ys:r}=Ng(e,t.value),i=n.concat(r),u=ga((()=>s(i)));if(ba(i),0===l)for(let e=0;e<u.length;++e)a.push(Ta(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=ga((()=>va(a[e],Ia(c,t)))),l>0&&ba(n)}ba(u),o+=c,++l}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=ka(a[e],o),ba(t)}return $p(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new xp(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new xp(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new xp("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new gm;if(e instanceof Jr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new xp(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new xp(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=ym(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Ip(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new xp(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return ga((()=>{const r=this.checkNumSamples(e);if(n)throw new yp("Verbose predictLoop() is not implemented yet.");const s=Ag(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)ga((()=>{const n=s[t][0],r=s[t][1],a=Eg(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new gm(i);return ym(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return $p(a.map((e=>Ki(e,0))))}))}predict(e,t={}){const n=Fg(e);Lg(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Tg(e),this.predictLoop(n,e)}finally{_g(n,e)}}predictOnBatch(e){Lg(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new bp("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Ym?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t,n){const r=Op(e.map((e=>e.shape[0])));r.sort();const s=Op(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new xp(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new xp(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!b(r,s))throw new xp(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=Mg(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Mg(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[qm,Jm,Xm];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===Xm&&1===a.shape[a.shape.length-1])throw new xp(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new xp(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new xp(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=wg(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await kg(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,s){return ga((()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new yp("Verbose mode is not implemented yet.");if(null!=s)throw new yp("steps mode in testLoop() is not implemented yet");{const r=Ag(a,n),s=bl(df(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],l=bf(s,a,o-a),u=Rg(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(Ta(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=va(i[e],Ia(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=ka(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;Np(e,r)>1&&(s+=`_${Np(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new gm(e),o=ym(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=Ig(n,s[e]));const a=Eo(n);t.push(a),l=0===e?n:va(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=Eo(t(r[s],o[s]))}xa(n),a.push(n)}return l=Eo(l),this.calculateLosses().forEach((e=>{l=va(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>ga((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new gm(a),o=ym(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=Eo(r(s[e],o[e]));n=0===e?a:va(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=Eo(n(s[r],o[r]));t.push(a)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,s,a,i,o,l,u,c,h;this.isTraining=!0;try{const d=null==n.batchSize?32:n.batchSize;Tg(d);const p=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,p,d);r=f[0],s=f[1],h=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new yp("validationData including sample weights is not supported yet."):new xp(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,l,null,null,e,d);u=t[0],c=t[1],m=u.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;const e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];u=Eg(r,e,t),a=r,r=Eg(r,0,e),c=Eg(s,e,t),i=s,s=Eg(s,0,e),m=u.concat(c)}else null!=n.validationSteps&&(g=!0);const b=r.concat(s).concat(h);this.checkTrainableWeightsConsistency();const x=this.makeTrainFunction(),y=this.getDedupedMetricsNames();let v,w;g?(this.makeTestFunction(),v=this.testFunction,w=y.slice().concat(y.map((e=>"val_"+e)))):(v=null,m=[],w=y.slice());const k=Wm(n.callbacks,n.yieldEvery);return await this.fitLoop(x,b,y,d,n.epochs,n.verbose,k,v,m,n.shuffle,w,n.initialEpoch,null,null)}finally{this.isTraining=!1,_g(r,e),_g(s,t),_g(a,e),_g(i,t),_g(u,o),_g(c,l),null!=h&&ba(h)}}async fitLoop(e,t,n,r,s,a,i,o,l,c,h,d,p,f){null==r&&(r=32),null==s&&(s=1),null==c&&(c=!0),null==d&&(d=0);let m=!1;if(null!=o&&null!=l&&(m=!0),null!=f&&(m=!0,null==p))throw new xp("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,r,p,"steps_per_epoch");let b;null!=g&&(b=df(0,g)),null==a&&(a=1);const{callbackList:x,history:y}=Vm(i,a,s,d,g,p,r,m,h);x.setModel(this),this.history=y,await x.onTrainBegin(),this.stopTraining_=!1;for(let a=d;a<s;++a){await x.onEpochBegin(a);const s={};if(null!=p)throw new yp("stepsPerEpoch mode is not implemented yet.");{if("batch"===c)throw new yp("batch shuffling is not implemneted yet");c&&u(b);const a=bl(b),i=Ag(g,r);for(let u=0;u<i.length;++u){const c={};if(await x.onBatchBegin(u,c),ga((()=>{const h=i[u][0],d=i[u][1],p=bf(a,h,d-h);c.batch=u,c.size=d-h;const f=Rg(t,p),g=e(f);for(let e=0;e<n.length;++e){const t=n[e],r=g[e];c[t]=r,xa(r)}if(u===i.length-1&&m){const e=this.testLoop(o,l,r);for(let t=0;t<n.length;++t){const r=n[t],a=e[t];xa(a),s["val_"+r]=a}}})),await x.onBatchEnd(u,c),Dm(c),this.stopTraining_)break}a.dispose()}if(await x.onEpochEnd(a,s),this.stopTraining_)break}return await x.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(p(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),p(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),p(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),p(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),p(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(Cg(n.validationData))p(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new yp("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=Wm(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:f}=Vm(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,u);d.setModel(e),e.history=f,await d.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const u={};await d.onEpochBegin(m);let c=0,h=0;for(r||(g=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await g.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=Ng(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=wg(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await kg(s[e],null,t[e]))}const u=r.concat(s).concat(i),p=o(u);ba(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];a[t]=n,xa(n)}await d.onBatchEnd(h,a),Dm(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=Cg(n.validationData)?Cp(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Cp(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?Sg:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(m,u),m++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return ba(a),_g(n[0],e),_g(n[1],t),$p(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=ma().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ma().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Tp(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Tp(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=Tp(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Tp(ug(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Tp(ug(e))));{const e={};for(const t in this.metrics)e[t]=Tp(ug(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Gm(bg(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Ep(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Ep(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Ep(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>Ep(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Ep(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,Bs.getSaveHandlers(n));if(0===t.length)throw new xp(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new xp(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new xp("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await _s(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${yg}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await _s(await this.optimizer.getWeights(),e);r.specs.push(...n),r.data=Ls([r.data,t])}if(null!=this.userDefinedMetadata){const e=!0;hg(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=r.data,s.weightSpecs=r.specs,e.save(s)}setUserDefinedMetadata(e){hg(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}zg.className="Model",Aa(zg);class Pg extends zg{}Pg.className="Functional",Aa(Pg);class Bg extends zg{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Hp("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new xp(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Bg||e instanceof zg;let n;if(t){if(n=e,1!==n.outputs.length)throw new xp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new xp("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new xp("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new xp("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new mm({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new xp(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new xp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=fm(this.outputs[0])}this.inboundNodes=[],new hm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ip(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(nm(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new zg({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new bp("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new bp("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new bp("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new bp("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new xp("Legacy serialization format not supported yet.");s=t}else p(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof Bg))throw new yp(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of s){const t=Gm(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new xp("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new xp("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Bg.className="Sequential",Aa(Bg);class Wg extends Ea{getConfig(){return{}}}class Ug extends Wg{apply(e,t=1){return function(e,t=1){if(1!==t)throw new yp(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return lo(e)}(e,t)}}Ug.className="elu",Aa(Ug);class Vg extends Wg{apply(e){return rl(e)}}Vg.className="selu",Aa(Vg);class Gg extends Wg{apply(e){return tl(e)}}Gg.className="relu",Aa(Gg);class Hg extends Wg{apply(e){return ga((()=>Ao(6,tl(e))))}}Hg.className="relu6",Aa(Hg);class qg extends Wg{apply(e){return e}}qg.className="linear",Aa(qg);class jg extends Wg{apply(e){return al(e)}}jg.className="sigmoid",Aa(jg);class Kg extends Wg{apply(e){return function(e){return ga((()=>{const t=va(.5,Ia(.2,e));return ji(t,0,1)}))}(e)}}Kg.className="hardSigmoid",Aa(Kg);class Xg extends Wg{apply(e){return dl(e)}}Xg.className="softplus",Aa(Xg);class Yg extends Wg{apply(e){return function(e){return ga((()=>ka(e,va(Pa(e),1))))}(e)}}Yg.className="softsign",Aa(Yg);class Jg extends Wg{apply(e){return gl(e)}}Jg.className="tanh",Aa(Jg);class Zg extends Wg{apply(e,t=-1){return hl(e,t)}}Zg.className="softmax",Aa(Zg);class Qg extends Wg{apply(e,t=-1){return So(e,t)}}Qg.className="logSoftmax",Aa(Qg);class eb extends Wg{apply(e,t=1){return ga((()=>Ia(al(Ia(e,t)),e)))}}eb.className="swish",Aa(eb);class tb extends Wg{apply(e){return ga((()=>Ia(e,gl(dl(e)))))}}function nb(e){return e.getClassName()}function rb(e,t={}){return _p(e,Ra.getMap().classNameMap,t,"activation")}function sb(e){if(null==e){return rb({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},rb(t)}return e instanceof Wg?e:rb(e)}tb.className="mish",Aa(tb);class ab extends Ea{}class ib extends ab{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return ga((()=>{let t=Go([1]);return this.hasL1&&(t=va(t,Io(Ia(this.l1,Pa(e))))),this.hasL2&&(t=va(t,Io(Ia(this.l2,$f(e))))),Pi(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}ib.className="L1L2",Aa(ib);const ob={l1l2:"L1L2"};function lb(e){return Ap(e)}function ub(e,t={}){return _p(e,Ra.getMap().classNameMap,t,"regularizer")}function cb(e){return null==e?null:"string"==typeof e?ub({className:e in ob?ob[e]:e,config:{}}):e instanceof ab?e:ub(e)}class hb extends pm{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=tm(e);let n=tl(e);return null!=this.maxValue&&(n=ji(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}hb.className="ReLU",Aa(hb);class db extends pm{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=tm(e);return yo(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}db.className="LeakyReLU",Aa(db);class pb extends pm{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Zf(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=cb(e.alphaRegularizer),this.alphaConstraint=Fm(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new xp(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=nm(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new lm({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=tm(e),Ko(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Jf(this.alphaInitializer),alphaRegularizer:lb(this.alphaRegularizer),alphaConstraint:Rm(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}pb.className="PReLU",Aa(pb);class fb extends pm{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new yp(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=tm(e);return lo(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}fb.className="ELU",Aa(fb);class mb extends pm{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=tm(e);return Ia(n,da(bo(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}mb.className="ThresholdedReLU",Aa(mb);class gb extends pm{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Zg).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=tm(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function bb(e,t,n){if("number"==typeof e)return Ip(e,t);if(e.length!==t)throw new xp(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new xp(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function xb(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function yb(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+hf([n-t,0]);else{if("same"!==r)throw new xp(`Unsupport padding mode: ${r}.`);e*=t}return e}function vb(e,t){return ga((()=>(Zp(t),"channelsFirst"===t?Il(e,[0,2,3,1]):e)))}function wb(e,t){return ga((()=>(Zp(t),"channelsFirst"===t?Il(e,[0,2,3,4,1]):e)))}function kb(e,t,n,r=[1,1],s="valid",a,i,o=null){return ga((()=>{if(null==a&&(a="channelsLast"),Zp(a),3!==e.rank&&4!==e.rank)throw new xp(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new xp(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=vb(e,a);if("causal"===s)throw new yp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Ml({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=Il(l,[0,3,1,2])),l}))}gb.className="Softmax",Aa(gb);class Ib extends pm{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ib.verifyArgs(t),this.rank=e,Pp(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new yp(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=bb(t.kernelSize,e,"kernelSize"),this.strides=bb(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Qp(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Zp(this.dataFormat),this.activation=sb(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Zf(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Fm(t.biasConstraint),this.biasRegularizer=cb(t.biasRegularizer),this.activityRegularizer=cb(t.activityRegularizer),this.dilationRate=bb(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new xp(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new xp(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new xp(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Sp("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!zp(e.kernelSize,"number",1,3))throw new xp(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:nb(this.activation),useBias:this.useBias,biasInitializer:Jf(this.biasInitializer),biasRegularizer:lb(this.biasRegularizer),activityRegularizer:lb(this.activityRegularizer),biasConstraint:Rm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Sb extends Ib{constructor(e,t){super(e,t),this.kernel=null,Sb.verifyArgs(t),this.filters=t.filters,Pp(this.filters,"filters"),this.kernelInitializer=Zf(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Fm(t.kernelConstraint),this.kernelRegularizer=cb(t.kernelRegularizer)}build(e){e=nm(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new xp(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return ga((()=>{let t;e=tm(e);const n=null==this.bias?null:this.bias.read(),r=Wp(this.activation.getClassName());if(null!=r&&2===this.rank)t=kb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,i=1){return ga((()=>{if(null==a&&(a="channelsLast"),Zp(a),3!==e.shape.length)throw new xp(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new xp(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new xp(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=Il(e,[0,2,1])),"causal"===s)throw new yp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=eo(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=Tf(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=kb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new yp("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,i){return ga((()=>{if(null==a&&(a="channelsLast"),Zp(a),4!==e.rank&&5!==e.rank)throw new xp(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new xp(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=wb(e,a);if("causal"===s)throw new yp("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=ro(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=Tf(o,n)),"channelsFirst"===a&&(o=Il(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=nm(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=xb(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Jf(this.kernelInitializer),kernelRegularizer:lb(this.kernelRegularizer),kernelConstraint:Rm(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new xp(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Nb extends Sb{constructor(e){super(2,e),Nb.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!zp(e.kernelSize,"number",1,2))throw new xp(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Nb.className="Conv2D",Aa(Nb);class $b extends Sb{constructor(e){super(3,e),$b.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new xp(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}$b.className="Conv3D",Aa($b);class Cb extends Nb{constructor(e){if(super(e),this.inputSpec=[new lm({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new xp(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=nm(e)).length)throw new xp("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new xp("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new lm({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return ga((()=>{let t=tm(e);if(4!==t.shape.length)throw new xp(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,yb(i,c,l,this.padding),yb(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Il(t,[0,2,3,1]));let p=no(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Il(p,[0,3,1,2])),null!=this.bias&&(p=Tf(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=nm(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=yb(t[r],o,a,this.padding),t[s]=yb(t[s],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Cb.className="Conv2DTranspose",Aa(Cb);class Tb extends $b{constructor(e){if(super(e),this.inputSpec=[new lm({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new xp(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=nm(e)).length)throw new xp("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new xp("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new lm({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return ga((()=>{let t=tm(e);if(5!==t.shape.length)throw new xp(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a,i;"channelsFirst"===this.dataFormat?(i=2,s=3,a=4):(i=1,s=2,a=3);const o=n[i],l=n[s],u=n[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,yb(o,p,c,this.padding),yb(l,f,h,this.padding),yb(u,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Il(t,[0,2,3,4,1]));let b=ao(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=Il(b,[0,4,1,2,3])),null!==this.bias&&(b=Tf(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=nm(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=yb(t[r],u,i,this.padding),t[s]=yb(t[s],c,o,this.padding),t[a]=yb(t[a],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Tb.className="Conv3DTranspose",Aa(Tb);class Eb extends Sb{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new xp("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new xp("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new xp(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Zf(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=cb(t.depthwiseRegularizer),this.depthwiseConstraint=Fm(t.depthwiseConstraint),this.pointwiseInitializer=Zf(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=cb(t.pointwiseRegularizer),this.pointwiseConstraint=Fm(t.pointwiseConstraint)}build(e){if((e=nm(e)).length<this.rank+2)throw new xp(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new xp(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new lm({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return ga((()=>{let t;if(e=tm(e),1===this.rank)throw new yp("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Il(e,[0,2,3,1])),t=sl(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Tf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Il(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Jf(this.depthwiseInitializer),e.pointwiseInitializer=Jf(this.pointwiseInitializer),e.depthwiseRegularizer=lb(this.depthwiseRegularizer),e.pointwiseRegularizer=lb(this.pointwiseRegularizer),e.depthwiseConstraint=Rm(this.depthwiseConstraint),e.pointwiseConstraint=Rm(this.pointwiseConstraint),e}}Eb.className="SeparableConv";class Rb extends Eb{constructor(e){super(2,e)}}Rb.className="SeparableConv2D",Aa(Rb);class Ab extends Sb{constructor(e){super(1,e),Ab.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!zp(e.kernelSize,"number",1,1))throw new xp(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Ab.className="Conv1D",Aa(Ab);class Fb extends pm{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return ga((()=>{if(e=tm(e),"channelsLast"===this.dataFormat){const t=yf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return yf(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=yf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return yf(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Fb.className="Cropping2D",Aa(Fb);class _b extends pm{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Zp(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Lp(jp,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return ga((()=>{let t=tm(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Il(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?vu.resizeNearestNeighbor(t,[e,r]):vu.resizeBilinear(t,[e,r]);return Il(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?vu.resizeNearestNeighbor(t,[e,r]):vu.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}_b.className="UpSampling2D",Aa(_b);class Db extends Ib{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Zf(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Fm(e.depthwiseConstraint),this.depthwiseRegularizer=cb(e.depthwiseRegularizer)}build(e){if((e=nm(e)).length<4)throw new xp(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new xp(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ga((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return ga((()=>{null==s&&(s="channelsLast"),Zp(s);let i=vb(e,s);if(4!==e.rank)throw new xp(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new xp(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=oo(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=Il(i,[0,3,1,2])),i}))}(e=tm(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Tf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=nm(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=xb(t,this.kernelSize[0],this.padding,this.strides[0]),a=xb(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Jf(this.depthwiseInitializer),e.depthwiseRegularizer=lb(this.depthwiseRegularizer),e.depthwiseConstraint=Rm(this.depthwiseRegularizer),e}}function Ob(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new xp("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function Mb(e,t,n,r=!1,s,a,i=!1,o=!1){return ga((()=>{const l=t.shape.length;if(l<3)throw new xp(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(df(2,l));if(t=Il(t,u),null!=a)throw new yp("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=da(da(s,"bool"),"float32")).rank===l-1&&(s=ho(s,-1)),s=Il(s,u)),r&&(t=nl(t,0),null!=s&&(s=nl(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=yl(t);let m,g;null!=s&&(m=yl(s));for(let t=0;t<p;++t){const n=f[t],r=ga((()=>e(n,d)));if(null==s)h=r[0],d=r[1];else{const e=ga((()=>{const e=m[t],n=La(qo(e),e);return{output:va(Ia(r[0],e),Ia(d[0],n)),newStates:d.map(((t,s)=>va(Ia(r[1][s],e),Ia(t,n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(g=ml(c,1)),[h,g,d]}))}Db.className="DepthwiseConv2D",Aa(Db);class Lb extends pm{constructor(e){let t;if(super(e),null==e.cell)throw new xp("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Hb({cells:e.cell}):e.cell,null==t.stateSize)throw new xp("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new lm({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?df(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Qf(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return ga((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new yp("Constants support is not implemented in RNN yet.");Qf(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new lm({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!b(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new xp(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new lm({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){ga((()=>{if(!this.stateful)throw new gp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new xp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Go([n,e]))):this.states_=[Go([n,this.cell.stateSize])];else if(null==e)ba(this.states_),null!=this.keptStates&&(ba(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Go([n,e]))):this.states_[0]=Go([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new xp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):ba(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!b(r.shape,a))throw new xp(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>xa(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Ob(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new lm({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof um){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return ga((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=tm(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new xp(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=Mb(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return ga((()=>{let t=Go(e.shape);return t=Io(t,[1,2]),t=gf(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?kf(t,[1,e]):t)):this.cell.stateSize>1?[kf(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Lb.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const r=Gm(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Lb.className="RNN",Aa(Lb);class zb extends pm{}class Pb extends zb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Pp(this.units,"units"),this.activation=sb(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Zf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Zf(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Zf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=cb(e.kernelRegularizer),this.recurrentRegularizer=cb(e.recurrentRegularizer),this.biasRegularizer=cb(e.biasRegularizer),this.kernelConstraint=Fm(e.kernelConstraint),this.recurrentConstraint=Fm(e.recurrentConstraint),this.biasConstraint=Fm(e.biasConstraint),this.dropout=cf([1,hf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=cf([1,hf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=nm(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ga((()=>{if(2!==e.length)throw new xp(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=qb({ones:()=>qo(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=qb({ones:()=>qo(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=Sf(null!=a?Ia(e,a):e,this.kernel.read()),null!=this.bias&&(s=Tf(s,this.bias.read())),null!=i&&(n=Ia(n,i));let o=va(s,Sf(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:nb(this.activation),useBias:this.useBias,kernelInitializer:Jf(this.kernelInitializer),recurrentInitializer:Jf(this.recurrentInitializer),biasInitializer:Jf(this.biasInitializer),kernelRegularizer:lb(this.kernelRegularizer),recurrentRegularizer:lb(this.recurrentRegularizer),biasRegularizer:lb(this.biasRegularizer),activityRegularizer:lb(this.activityRegularizer),kernelConstraint:Rm(this.kernelConstraint),recurrentConstraint:Rm(this.recurrentConstraint),biasConstraint:Rm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Pb.className="SimpleRNNCell",Aa(Pb);class Bb extends Lb{constructor(e){e.cell=new Pb(e),super(e)}call(e,t){return ga((()=>{null!=this.cell.dropoutMask&&(ba(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ba(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}Bb.className="SimpleRNN",Aa(Bb);class Wb extends zb{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new xp("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Pp(this.units,"units"),this.activation=sb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=sb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Zf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Zf(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Zf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=cb(e.kernelRegularizer),this.recurrentRegularizer=cb(e.recurrentRegularizer),this.biasRegularizer=cb(e.biasRegularizer),this.kernelConstraint=Fm(e.kernelConstraint),this.recurrentConstraint=Fm(e.recurrentConstraint),this.biasConstraint=Fm(e.biasConstraint),this.dropout=cf([1,hf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=cf([1,hf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=nm(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ga((()=>{if(2!==e.length)throw new xp(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=qb({ones:()=>qo(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=qb({ones:()=>qo(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=Ia(e,s[0]));let u=Sf(e,this.kernel.read());this.useBias&&(u=Tf(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ia(r,a[0]));const c=this.recurrentKernel.read(),[h,d]=pl(c,[2*this.units,this.units],c.rank-1),p=Sf(r,h),[f,m,g]=pl(u,3,u.rank-1),[b,x]=pl(p,2,p.rank-1);i=this.recurrentActivation.apply(va(f,b)),o=this.recurrentActivation.apply(va(m,x));const y=Sf(Ia(o,r),d);l=this.activation.apply(va(g,y));const v=va(Ia(i,r),Ia(va(1,Wo(i)),l));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:nb(this.activation),recurrentActivation:nb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Jf(this.kernelInitializer),recurrentInitializer:Jf(this.recurrentInitializer),biasInitializer:Jf(this.biasInitializer),kernelRegularizer:lb(this.kernelRegularizer),recurrentRegularizer:lb(this.recurrentRegularizer),biasRegularizer:lb(this.biasRegularizer),activityRegularizer:lb(this.activityRegularizer),kernelConstraint:Rm(this.kernelConstraint),recurrentConstraint:Rm(this.recurrentConstraint),biasConstraint:Rm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Wb.className="GRUCell",Aa(Wb);class Ub extends Lb{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Wb(e),super(e)}call(e,t){return ga((()=>{null!=this.cell.dropoutMask&&(ba(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ba(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Ub.className="GRU",Aa(Ub);class Vb extends zb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Pp(this.units,"units"),this.activation=sb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=sb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Zf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Zf(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Zf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=cb(e.kernelRegularizer),this.recurrentRegularizer=cb(e.recurrentRegularizer),this.biasRegularizer=cb(e.biasRegularizer),this.kernelConstraint=Fm(e.kernelConstraint),this.recurrentConstraint=Fm(e.recurrentConstraint),this.biasConstraint=Fm(e.biasConstraint),this.dropout=cf([1,hf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=cf([1,hf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=nm(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends _f{apply(t,r){const s=e.apply([n]),a=(new Of).apply([n]),i=e.apply([2*n]);return wf(wf(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return ga((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new xp(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=qb({ones:()=>qo(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=qb({ones:()=>qo(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=Ia(e,a[0]));let h=Sf(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ia(r,i[0])),h=va(h,Sf(r,this.recurrentKernel.read())),this.useBias&&(h=Tf(h,this.bias.read()));const[d,p,f,m]=pl(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=va(Ia(l,s),Ia(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Ia(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:nb(this.activation),recurrentActivation:nb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Jf(this.kernelInitializer),recurrentInitializer:Jf(this.recurrentInitializer),biasInitializer:Jf(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:lb(this.kernelRegularizer),recurrentRegularizer:lb(this.recurrentRegularizer),biasRegularizer:lb(this.biasRegularizer),activityRegularizer:lb(this.activityRegularizer),kernelConstraint:Rm(this.kernelConstraint),recurrentConstraint:Rm(this.recurrentConstraint),biasConstraint:Rm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Vb.className="LSTMCell",Aa(Vb);class Gb extends Lb{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Vb(e),super(e)}call(e,t){return ga((()=>{null!=this.cell.dropoutMask&&(ba(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ba(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Gb.className="LSTM",Aa(Gb);class Hb extends zb{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return ga((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;Qf(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{rf(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(Gm(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return im(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}om(t)}}function qb(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):Ef(t(),n),o=()=>Rf(i,t,r);return!s||s<=1?xa(o().clone()):Array(s).fill(void 0).map(o).map((e=>xa(e.clone())))}Hb.className="StackedRNNCells",Aa(Hb);class jb extends Lb{constructor(e){if(e.unroll)throw new yp("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new yp("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new lm({ndim:5})]}call(e,t){return ga((()=>{if(null!=this.cell.dropoutMask&&(ba(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ba(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new xp("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return ga((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=Go([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){ga((()=>{if(!this.stateful)throw new gp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new xp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Go(s))):this.states_=[Go(s)];else if(null==e)ba(this.states_),null!=this.keptStates&&(ba(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Go(s))):this.states_[0]=Go(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new xp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ba(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!b(n.shape,r))throw new xp(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>xa(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=xb(l,r[0],s,a[0],i[0]),h=xb(u,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}jb.className="ConvRNN2D";class Kb extends Vb{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Pp(this.filters,"filters"),this.kernelSize=bb(n,2,"kernelSize"),this.kernelSize.forEach((e=>Pp(e,"kernelSize"))),this.strides=bb(r||1,2,"strides"),this.strides.forEach((e=>Pp(e,"strides"))),this.padding=s||"valid",Qp(this.padding),this.dataFormat=a||"channelsLast",Zp(this.dataFormat),this.dilationRate=bb(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Pp(e,"dilationRate")))}build(e){var t;e=nm(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new xp(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends _f{apply(e,t){return vf([n.apply([r]),Ho([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return ga((()=>{if(3!==e.length)throw new xp(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=qb({ones:()=>qo(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Ia(t[n],e):e;let l=o(r,i,0),u=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=qb({ones:()=>qo(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),m=o(s,d,2),g=o(s,d,3);const[b,x,y,v]=pl(this.kernel.read(),4,3),[w,k,I,S]=this.useBias?pl(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,w,this.padding),u=this.inputConv(u,x,k,this.padding),c=this.inputConv(c,y,I,this.padding),h=this.inputConv(h,v,S,this.padding);const[N,$,C,T]=pl(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,N),f=this.recurrentConv(f,$),m=this.recurrentConv(m,C),g=this.recurrentConv(g,T);const E=this.recurrentActivation.apply(va(l,p)),R=this.recurrentActivation.apply(va(u,f)),A=va(Ia(R,a),Ia(E,this.activation.apply(va(c,m)))),F=Ia(this.recurrentActivation.apply(va(h,g)),this.activation.apply(A));return[F,F,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){const s=Qi(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Tf(s,n,this.dataFormat):s}recurrentConv(e,t){return Qi(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Kb.className="ConvLSTM2DCell",Aa(Kb);class Xb extends jb{constructor(e){const t=new Kb(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}Xb.className="ConvLSTM2D",Aa(Xb);class Yb extends pm{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return ga((()=>{this.invokeCallHook(e,t);const n=tm(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Rf((()=>Ef(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Yb.className="Dropout",Aa(Yb);class Jb extends Yb{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Jb.className="SpatialDropout1D",Aa(Jb);class Zb extends pm{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Pp(this.units,"units"),this.activation=sb(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Zf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Zf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Fm(e.kernelConstraint),this.biasConstraint=Fm(e.biasConstraint),this.kernelRegularizer=cb(e.kernelRegularizer),this.biasRegularizer=cb(e.biasRegularizer),this.activityRegularizer=cb(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=nm(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=nm(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return ga((()=>{this.invokeCallHook(e,t);const n=tm(e),r=Wp(this.activation.getClassName());let s;return null!=r?s=Sf(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=Sf(n,this.kernel.read()),null!=this.bias&&(s=Tf(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:nb(this.activation),useBias:this.useBias,kernelInitializer:Jf(this.kernelInitializer),biasInitializer:Jf(this.biasInitializer),kernelRegularizer:lb(this.kernelRegularizer),biasRegularizer:lb(this.biasRegularizer),activityRegularizer:lb(this.activityRegularizer),kernelConstraint:Rm(this.kernelConstraint),biasConstraint:Rm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Zb.className="Dense",Aa(Zb);class Qb extends pm{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=nm(e);for(const t of e.slice(1))if(null==t)throw new xp(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],uf(e,1)]}call(e,t){return ga((()=>{this.invokeCallHook(e,t);let n=tm(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Il(n,e)}return function(e){if(e.rank<=1)throw new xp(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],uf(e.shape,1)];return Pi(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Qb.className="Flatten",Aa(Qb);class ex extends pm{constructor(e){super(e),this.supportsMasking=!0,this.activation=sb(e.activation)}call(e,t){return ga((()=>{this.invokeCallHook(e,t);const n=tm(e);return this.activation.apply(n)}))}getConfig(){const e={activation:nb(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}ex.className="Activation",Aa(ex);class tx extends pm{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return ga((()=>{return e=tm(e),t=e,n=this.n,ga((()=>{if(2!==t.shape.length)throw new xp(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return kf(gf(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}tx.className="RepeatVector",Aa(tx);class nx extends pm{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new xp("Can only specifiy one unknown dimension.");a=e}else s*=t}const i=uf(e);if(null!==a){if(0===s||i%s!=0)throw new xp(n);r[a]=i/s}else if(i!==s)throw new xp(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return ga((()=>{this.invokeCallHook(e,t);const n=tm(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Pi(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}nx.className="Reshape",Aa(nx);class rx extends pm{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=df(1,e.dims.length+1);if(!b(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new lm({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=nm(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Il(tm(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}rx.className="Permute",Aa(rx);class sx extends pm{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=tm(e);return ki(Uo(n,this.maskValue),-1)}call(e,t){return ga((()=>{this.invokeCallHook(e,t);const n=tm(e),r=ki(Uo(n,this.maskValue),-1,!0);return Ia(n,da(r,n.dtype))}))}}sx.className="Masking",Aa(sx);class ax extends pm{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Cp(e.inputLength))}this.inputDim=e.inputDim,Pp(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Pp(this.outputDim,"outputDim"),this.embeddingsInitializer=Zf(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=cb(e.embeddingsRegularizer),this.activityRegularizer=cb(e.activityRegularizer),this.embeddingsConstraint=Fm(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return ga((()=>this.maskZero?(e=tm(e),Uo(e,$a(e))):null))}computeOutputShape(e){if(e=nm(e),null==this.inputLength)return[...e,this.outputDim];const t=Cp(this.inputLength);if(t.length!==e.length-1)throw new xp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new xp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return ga((()=>{this.invokeCallHook(e,t);let n=tm(e);"int32"!==n.dtype&&(n=mf(n,"int32"));const r=Nf(this.embeddings.read(),Pi(n,[n.size]));return Pi(r,nm(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Jf(this.embeddingsInitializer),embeddingsRegularizer:lb(this.embeddingsRegularizer),activityRegularizer:lb(this.activityRegularizer),embeddingsConstraint:Rm(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}ax.className="Embedding",Aa(ax);class ix extends pm{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new yp}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new xp("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[nm(e)]),e.length<2)throw new xp(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Op(t),t.length>1)throw new xp(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===Op(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return ga((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=hf(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=gf(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let i=Pi(r,[s].concat(uf(e.slice(1))));i=Il(i,[1,0]),i=Pi(i,a),t.push(i),n=!0}else if(e>1){const s=df(1,e).concat([0]);t.push(Il(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Pi(Il(Pi(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(df(0,s-1));r=Il(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Op(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return ga((()=>{if(null==t)return null;if(!Array.isArray(t))throw new xp("`mask` should be an Array");if(!Array.isArray(e))throw new xp("`inputs` should be an Array");if(t.length!==e.length)throw new xp(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:ho(e,0))))[0];for(let e=1;e<t.length-1;++e)n=No(n,t[e]);return n}))}}class ox extends ix{constructor(e){super(e)}mergeFunction(e){return ga((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=va(t,e[n]);return t}))}}ox.className="Add",Aa(ox);class lx extends ix{constructor(e){super(e)}mergeFunction(e){return ga((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ia(t,e[n]);return t}))}}lx.className="Multiply",Aa(lx);class ux extends ix{constructor(e){super(e)}mergeFunction(e){return ga((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=va(t,e[n]);return Ia(1/e.length,t)}))}}ux.className="Average",Aa(ux);class cx extends ix{constructor(e){super(e)}mergeFunction(e){return ga((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Va(t,e[n]);return t}))}}cx.className="Maximum",Aa(cx);class hx extends ix{constructor(e){super(e)}mergeFunction(e){return ga((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ao(t,e[n]);return t}))}}hx.className="Minimum",Aa(hx);class dx extends ix{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new xp("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(b(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new xp("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return ga((()=>vf(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new xp("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new xp("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new xp("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new xp(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return ga((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(da(qo(e[n]),"bool")):t[n].rank<e[n].rank?r.push(ho(t[n],-1)):r.push(t[n]);const s=Ki(r,this.axis);return wi(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function px(e,t){for(;e<0;)e+=t;return e}dx.className="Concatenate",Aa(dx);class fx extends ix{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){p(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new yp("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new xp(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new xp(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>px(t,e[n].shape.length))):[px(this.axes,n.shape.length),px(this.axes,r.shape.length)],this.normalize&&(n=Hm(n,t[0]),r=Hm(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new yp("batchDot is not implemented for tensors of 4D or higher rank yet");if(p(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),p(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new yp("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return ga((()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=Pi(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=Pi(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?Io(Ia(e,t),a[0]):Io(Ia(Il(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=$o(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=fl(i,t)}return 1===i.shape.length&&(i=ho(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[px(this.axes,e.length),px(this.axes,t.length)],n}computeOutputShape(e){p(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new yp("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}fx.className="Dot",Aa(fx);class mx extends pm{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return ga((()=>{this.invokeCallHook(e,t);const n=tm(e);return Rf((()=>va(If(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}mx.className="GaussianNoise",Aa(mx);class gx extends pm{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ga((()=>{this.invokeCallHook(e,t);const n=tm(e);return this.rate>0&&this.rate<1?Rf((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Ia(n,If(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}gx.className="GaussianDropout",Aa(gx);class bx extends pm{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||tm(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ga((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Rf((()=>{const t=tm(e),r=-1.7580993408473766;let s=xo(Qo(n),this.rate);s=mf(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate,o=va(Ia(t,s),Ia(va(s,-1),r));return va(Ia(o,a),i)}),(()=>tm(e)),t.training||!1)}return e}))}}function xx(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=Vi(e,t,n,r,s,a);else if(3===e.rank)i=Gi(e,t,n,r,s,a);else{if(4!==e.rank)throw new yp(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Hi(e,t,n,r,s,a)}return i}bx.className="AlphaDropout",Aa(bx);class yx extends pm{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Zf(e.betaInitializer||"zeros"),this.gammaInitializer=Zf(e.gammaInitializer||"ones"),this.movingMeanInitializer=Zf(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Zf(e.movingVarianceInitializer||"ones"),this.betaConstraint=Fm(e.betaConstraint),this.gammaConstraint=Fm(e.gammaConstraint),this.betaRegularizer=cb(e.betaRegularizer),this.gammaRegularizer=cb(e.gammaRegularizer)}build(e){e=nm(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new xp(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new lm({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return ga((()=>{const n=null!=t.training&&t.training,r=tm(e),s=r.shape,a=s.length,i=df(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=Ip(1,a);l[o]=s[o];const u=i.slice();u.sort();const c=!b(u,df(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=Pi(this.movingMean.read(),l),t=Pi(this.movingVariance.read(),l),n=this.center?Pi(this.beta.read(),l):null,s=this.scale?Pi(this.gamma.read(),l):null;return xx(r,e,t,n,s,this.epsilon)}return xx(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,r,s=.001){return b(r.slice().sort(),df(0,e.rank-1))?function(e,t,n,r,s=.001){return ga((()=>{const a=Bo(e,r),i=a.mean,o=a.variance;return[xx(e,i,o,n,t,s),i,o]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return ga((()=>{const a=Bo(e,r),i=a.mean,o=a.variance,l=[];for(const t of df(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=Pi(i,l),c=Pi(o,l),h=null==t?null:Pi(t,l),d=null==n?null:Pi(n,l);return[xx(e,u,c,d,h,s),i,o]}))}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{ga((()=>{const r=1-n,s=e.read(),a=Ia(La(s,t),r);e.write(La(s,a))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Jf(this.betaInitializer),gammaInitializer:Jf(this.gammaInitializer),movingMeanInitializer:Jf(this.movingMeanInitializer),movingVarianceInitializer:Jf(this.movingVarianceInitializer),betaRegularizer:lb(this.betaRegularizer),gammaRegularizer:lb(this.gammaRegularizer),betaConstraint:Rm(this.betaConstraint),gammaConstraint:Rm(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}yx.className="BatchNormalization",Aa(yx);class vx extends pm{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Zf(e.betaInitializer||"zeros"),this.gammaInitializer=Zf(e.gammaInitializer||"ones"),this.betaRegularizer=cb(e.betaRegularizer),this.gammaRegularizer=cb(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=nm(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Op(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=tm(e),r=n.shape,s=r.length;return ga((()=>{let{mean:e,variance:t}=Bo(n,this.axis,!0);const a=Ip(1,s);for(const e of this.axis)a[e]=r[e];const i=e=>null!=e&&e.shape.length!==s?Pi(e,a):e;let o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const u=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),c.push(1)):(u.push(1),c.push(r[e]));return e=po(e,u),t=po(t,u),null!=o&&(o=po(o,c)),null!=l&&(l=po(l,c)),xx(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Jf(this.betaInitializer),gammaInitializer:Jf(this.gammaInitializer),betaRegularizer:lb(this.betaRegularizer),gammaRegularizer:lb(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}vx.className="LayerNormalization",Aa(vx);class wx extends pm{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new xp(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new xp(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new xp(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new lm({ndim:4})]}computeOutputShape(e){let t,n;return e=nm(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return ga((()=>{return t=tm(e),n=this.padding,r=this.dataFormat,ga((()=>{if(4!==t.rank)throw new xp(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new xp("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new xp(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],jo(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function kx(e,t,n,r,s,a){return ga((()=>{let i;Zp(s),ef(a),Qp(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=vb(e,s);const o="same"===r?"same":"valid";return i="max"===a?Co(e,t,n,o):Bi(e,t,n,o),"channelsFirst"===s&&(i=Il(i,[0,3,1,2])),i}))}function Ix(e,t,n,r,s,a){return ga((()=>{let i;Zp(s),ef(a),Qp(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=wb(e,s);const o="same"===r?"same":"valid";return i="max"===a?To(e,t,n,o):Wi(e,t,n,o),"channelsFirst"===s&&(i=Il(i,[0,4,1,2,3])),i}))}wx.className="ZeroPadding2D",Aa(wx);class Sx extends pm{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new xp(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Pp(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new xp(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Pp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Qp(this.padding),this.inputSpec=[new lm({ndim:3})]}computeOutputShape(e){const t=xb((e=nm(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return ga((()=>{this.invokeCallHook(e,t),e=gf(tm(e),2);const n=this.poolingFunction(tm(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return fl(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Nx extends Sx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Zp(s),Qp(r),kx(e,t,n,r,s,"max")}}Nx.className="MaxPooling1D",Aa(Nx);class $x extends Sx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Zp(s),Qp(r),kx(e,t,n,r,s,"avg")}}$x.className="AveragePooling1D",Aa($x);class Cx extends pm{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new xp(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Pp(this.poolSize,"poolSize"),Pp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Zp(this.dataFormat),Qp(this.padding),this.inputSpec=[new lm({ndim:4})]}computeOutputShape(e){e=nm(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=xb(t,this.poolSize[0],this.padding,this.strides[0]),n=xb(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return ga((()=>(this.invokeCallHook(e,t),this.poolingFunction(tm(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Tx extends Cx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Zp(s),Qp(r),kx(e,t,n,r,s,"max")}}Tx.className="MaxPooling2D",Aa(Tx);class Ex extends Cx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Zp(s),Qp(r),kx(e,t,n,r,s,"avg")}}Ex.className="AveragePooling2D",Aa(Ex);class Rx extends pm{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new xp(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Pp(this.poolSize,"poolSize"),Pp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Zp(this.dataFormat),Qp(this.padding),this.inputSpec=[new lm({ndim:5})]}computeOutputShape(e){e=nm(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=xb(t,this.poolSize[0],this.padding,this.strides[0]),n=xb(n,this.poolSize[1],this.padding,this.strides[1]),r=xb(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return ga((()=>(this.invokeCallHook(e,t),this.poolingFunction(tm(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ax extends Rx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Zp(s),Qp(r),Ix(e,t,n,r,s,"max")}}Ax.className="MaxPooling3D",Aa(Ax);class Fx extends Rx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Zp(s),Qp(r),Ix(e,t,n,r,s,"avg")}}Fx.className="AveragePooling3D",Aa(Fx);class _x extends pm{constructor(e){super(e),this.inputSpec=[new lm({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new yp}}class Dx extends _x{constructor(e){super(e||{})}call(e,t){return ga((()=>{const t=tm(e);return Eo(t,1)}))}}Dx.className="GlobalAveragePooling1D",Aa(Dx);class Ox extends _x{constructor(e){super(e||{})}call(e,t){return ga((()=>{const t=tm(e);return ko(t,1)}))}}Ox.className="GlobalMaxPooling1D",Aa(Ox);class Mx extends pm{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Zp(this.dataFormat),this.inputSpec=[new lm({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new yp}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Lx extends Mx{call(e,t){return ga((()=>{const t=tm(e);return"channelsLast"===this.dataFormat?Eo(t,[1,2]):Eo(t,[2,3])}))}}Lx.className="GlobalAveragePooling2D",Aa(Lx);class zx extends Mx{call(e,t){return ga((()=>{const t=tm(e);return"channelsLast"===this.dataFormat?ko(t,[1,2]):ko(t,[2,3])}))}}zx.className="GlobalMaxPooling2D",Aa(zx);class Px extends pm{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Gm(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class Bx extends Px{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=nm(e)).length<3)throw new xp(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=nm(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return ga((()=>Mb(((e,n)=>[tm(this.layer.call(e,t)),[]]),e=tm(e),[],!1,null,null,!1,!0)[1]))}}Bx.className="TimeDistributed",Aa(Bx);class Wx extends Px{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Gm(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Gm(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,Lp(Yp,"BidirectionalMergeMode",s),e.weights)throw new yp("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):$p(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Ob(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new xp("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new lm({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new yp("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof um;for(const e of a)if(e instanceof um!==o)throw new xp("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return ga((()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=nl(s,1)),"concat"===this.mergeMode?i=vf([r,s]):"sum"===this.mergeMode?i=va(r,s):"ave"===this.mergeMode?i=Ia(.5,va(r,s)):"mul"===this.mergeMode?i=Ia(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){rf(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),rf(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Gm(t.layer);if(delete t.layer,null!=t.numConstants)throw new yp("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}Wx.className="Bidirectional",Aa(Wx);class Ux extends pm{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ga((()=>("float32"!==(e=tm(e)).dtype&&(e=mf(e,"float32")),va(Ia(e,this.scale),this.offset))))}}Ux.className="Rescaling",Aa(Ux);const{resizeBilinear:Vx,cropAndResize:Gx}=vu;class Hx extends pm{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,s,a,i,o){return ga((()=>{let l,u=!1;const c=[t/a,n/i,(r+t)/a,(s+n)/i],h=[];3===e.rank?(u=!0,l=ml([e])):l=e;for(let e=0;e<l.shape[0];e++)h.push(c);const d=As(h,[h.length,4]),p=el(0,h.length,1,"int32"),f=Gx(l,d,p,[r,s],"nearest");return mf(u?tm(yl(f)):f,o)}))}upsize(e,t,n,r){return ga((()=>mf(Vx(e,[t,n]),r)))}call(e,t){return ga((()=>{const t=tm(e),n=t.dtype,r=t.shape,s=r[r.length-3],a=r[r.length-2];let i=0;s!==this.height&&(i=Math.floor((s-this.height)/2));let o=0;return a!==this.width&&(o=Math.floor((a-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,s,a,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=nm(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}Hx.className="CenterCrop",Aa(Hx);class qx extends pm{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=nm(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return ga((()=>{let n;if("int32"!==(e=tm(e)).dtype&&(e=mf(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new xp(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=tm(t.countWeights)}const r=ko(e),s=Ro(e),a=bo(this.numTokens,r).bufferSync().get(0),i=xo(s,0).bufferSync().get(0);if(!a||!i)throw new xp(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let s=tm(e);if("int32"!==s.dtype&&(s=mf(s,"int32")),"int"===t)return s;const a=s.shape;if(0===s.rank&&(s=ho(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=ho(s,-1)),s.rank>2)throw new xp(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${a} which would result in output rank ${s.rank}.`);const i=["multiHot","oneHot"].includes(t);let o;if(o=io(s,void 0!==r&&"count"===t?r:[],n,i),"tfIdf"!==t)return o;if(r)return Ia(o,r);throw new xp("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}qx.className="CategoryEncoding",Aa(qx);const jx=new Set(["bilinear","nearest"]);class Kx extends pm{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!jx.has(e.interpolation))throw new xp(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=nm(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ga((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return vu.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return vu.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...jx]} are supported`)}))}}var Xx,Yx,Jx,Zx;function Qx(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(ry(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=Qx(e[a],t,n,r);s[a]=i}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function ey(e,t=ny){return ty(e,t)}function ty(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(ry(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=ty(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function ny(e){return null===e?null:ry(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function ry(e){let t=!1;if(j().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(977);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Jr)&&!(e instanceof Promise)&&!t)}function sy(e){return Qx(e,ay)}function ay(e){return e instanceof Jr?{value:e.clone(),recurse:!1}:ry(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}Kx.className="Resizing",Aa(Kx),j().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(Xx||(Xx={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Yx||(Yx={}));class iy{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class oy extends iy{constructor(){super(oy.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}oy.INITIAL_CAPACITY=32;class ly{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new by(this,e)}filter(e){return new my(this,e)}map(e){return new gy(this,e)}mapAsync(e){return new xy(this,e)}serialMapAsync(e){return new xy(this,e).serial()}flatmap(e){return new vy(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new fy(this,e,t)}columnMajorBatch(e,t=!0,n=ny){return this.rowMajorBatch(e,t).map((e=>ey(e,n)))}concatenate(e,t){return new wy(new uy([this,e]),t)}take(e){return e<0||null==e?this:new py(this,e)}skip(e){return e<0||null==e?this:new dy(this,e)}prefetch(e){return new ky(this,e)}shuffle(e,t){return new Iy(this,e,t)}serial(){return new hy(this)}}class uy extends ly{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:sy(e),done:!1}}}class cy extends ly{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class hy extends ly{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class dy extends ly{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;ba(e.value)}return this.upstream.next()}}class py extends ly{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class fy extends ly{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class my extends ly{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;ba(e.value)}}}class gy extends ly{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=cs(e.value),n=this.transform(e.value),r=cs(n);for(const e of t)us(e,r)||e.dispose();return{value:n,done:!1}}}class by extends ly{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class xy extends ly{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=cs(e.value),n=await this.transform(e.value),r=cs(n);for(const e of t)us(e,r)||e.dispose();return{value:n,done:!1}}}class yy extends ly{constructor(){super(),this.outputQueue=new oy,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class vy extends yy{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=cs(e.value),n=this.transform(e.value),r=cs(n);this.outputQueue.pushAll(n);for(const e of t)us(e,r)||e.dispose();return!0}}class wy extends ly{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(Zx=Jx||(Jx={}))[Zx.FAIL=0]="FAIL",Zx[Zx.SHORTEST=1]="SHORTEST",Zx[Zx.LONGEST=2]="LONGEST";class ky extends ly{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new iy(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Iy extends ky{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Xo.alea(n||Ar().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Sy{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return p(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Ny((async()=>(await n.iterator()).columnMajorBatch(e,t,$y)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Ny((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Ny((async()=>(await t.iterator()).filter((t=>ga((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Ny((async()=>(await t.iterator()).map((t=>ga((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Ny((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Ny((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Ny((async()=>{return n=(s=async()=>({value:await t.iterator(),done:!1}),new cy(s)).take(e),new wy(n,r);var n,r,s}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Ny((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Xo.alea(t||Ar().toString());return Ny((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Ny((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Ny(e,t=null){return new class extends Sy{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function $y(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof Jr||Dr(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Jr?ml(e):As(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function Cy(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&p("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}Sy.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const Ty=Dc;class Ey extends o{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new i(this,fa())}nextDataId(){return Ey.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,j().get("IS_NODE")&&ar("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&E(n[0])){const s=n.map((e=>Fr(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?Zu(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>_r(e)));return ha(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ha(e.shape,e.dtype,t)}makeOutput(e,t,n){return fa().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Ar();return e(),{kernelMs:Ar()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Cy([e],"where");const t=this.readSync(e.dataId);return Ty(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function Ry(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(Cy(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=g(i.shape),c=n||i.dtype,h=$(c,u);for(let e=0;e<u;++e)h[e]=t(l[e],s);return o.makeTensorInfo(i.shape,c,h)}}function Ay(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(Cy(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,s);return o.makeTensorInfo(i.shape,u,c)}}Ey.nextDataId=0,ya("cpu",(()=>new Ey),1);const Fy=Ry(Ke,(e=>e>=0?e:Math.exp(e)-1)),_y={kernelName:Ke,backendName:"cpu",kernelFunc:Fy};function Dy(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Oy={kernelName:ht,backendName:"cpu",kernelFunc:Dy};function My(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;Cy([s],"leakyRelu");const i=g(s.shape),o=n.data.get(s.dataId).values,l=N("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",l)}const Ly={kernelName:bt,backendName:"cpu",kernelFunc:My};function zy(e){return(t,n,r,s,a)=>{const i=Ua(t,n),o=i.length,l=D(i),u=N(a,g(i)),c=t.length,h=n.length,d=D(t),p=D(n),f=Ba(t,i),m=Ba(n,i);if(f.length+m.length===0)for(let t=0;t<u.length;++t)u[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<u.length;++t){const n=U(t,o,l),a=n.slice(-c);f.forEach((e=>a[e]=0));const i=W(a,c,d),g=n.slice(-h);m.forEach((e=>g[e]=0));const b=W(g,h,p);u[t]=e(r[i],s[b])}return[u,i]}}const Py=zy(((e,t)=>e<0?t*e:e));function By(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;Cy([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,l]=Py(r.shape,s.shape,a,i,"float32");return n.makeTensorInfo(l,"float32",o)}const Wy={kernelName:Zt,backendName:"cpu",kernelFunc:By},Uy=Ry(on,(e=>Math.max(0,e))),Vy={kernelName:on,backendName:"cpu",kernelFunc:Uy},Gy=Ry(pn,(e=>Math.min(Math.max(0,e),6))),Hy={kernelName:pn,backendName:"cpu",kernelFunc:Gy};function qy(e){return(t,n,r)=>{const s=N(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}const jy=qy((e=>1/(1+Math.exp(-e)))),Ky=Ry(Nn,(e=>1/(1+Math.exp(-e)))),Xy={kernelName:Nn,backendName:"cpu",kernelFunc:Ky};function Yy(e,t,n,r,s){if("linear"===n)return Dy({inputs:{x:t},backend:e});if("relu"===n)return Uy({inputs:{x:t},backend:e});if("elu"===n)return Fy({inputs:{x:t},backend:e});if("relu6"===n)return Gy({inputs:{x:t},backend:e});if("prelu"===n)return By({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return My({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return Ky({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Jy(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const Zy={kernelName:Ie,backendName:"cpu",kernelFunc:Jy};function Qy(e,t,n="float32"){if("complex64"===n)return Jy({inputs:{real:Qy(e,t,"float32"),imag:Qy(e,t,"float32")},backend:e});const r=z(g(t),n);return e.makeTensorInfo(t,n,r)}function ev(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const tv={kernelName:sn,backendName:"cpu",kernelFunc:ev};function nv(e,t,n,r){if("int32"===r)return[t,"int32",Int32Array.from(e)];if("bool"===r){const r=Rr([0],n),[s,a]=zy(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function rv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return Dy({inputs:{x:s},backend:n});const e=Qy(n,s.shape,s.dtype),t=rv({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=Jy({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=ev({inputs:{input:s},backend:n}),t=rv({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!C(s.dtype,a)){const e=Dy({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const i=n.data.get(s.dataId).values,[o,l,u]=nv(i,s.shape,s.dtype,a);return n.makeTensorInfo(o,l,u)}const sv={kernelName:ve,backendName:"cpu",kernelFunc:rv};function av(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:i}=n,o=s;Cy([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c="string"===a.dtype?Fc(l):l,h="string"===a.dtype?Fc(u):u,d=r||a.dtype,[p,f]=t(a.shape,i.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:s})=>{const{a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=rv({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(s.dataId).values,c=rv({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,b,x]=n(a.shape,i.shape,l,u,f,m),y=o.makeTensorInfo(x,"float32",g),v=o.makeTensorInfo(x,"float32",b),w=Jy({inputs:{real:y,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[l,u]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(u,s,l)}}}function iv(e){return(t,n,r,s,a,i)=>{const o=Ua(t,n),l=g(o),u=o.length,c=D(o),h=N("float32",l),d=N("float32",l),p=Ba(t,o),f=Ba(n,o),m=Zu(r,s),b=Zu(a,i),x=t.length,y=D(t),v=n.length,w=D(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%b.length,s=e(m[2*n],m[2*n+1],b[2*r],b[2*r+1]);h[t]=s.real,d[t]=s.imag}else for(let t=0;t<h.length;t++){const n=U(t,u,c),r=n.slice(-x);p.forEach((e=>r[e]=0));const s=W(r,x,y),a=n.slice(-v);f.forEach((e=>a[e]=0));const i=W(a,v,w),o=e(m[2*s],m[2*s+1],b[2*i],b[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const ov=zy(((e,t)=>e+t)),lv=iv(((e,t,n,r)=>({real:e+n,imag:t+r}))),uv=av(te,ov,lv),cv={kernelName:te,backendName:"cpu",kernelFunc:uv};function hv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=g(s.shape),o=k(a,i),l=g(o);p(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const dv={kernelName:ln,backendName:"cpu",kernelFunc:hv};function pv(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;Cy([s,a],"matMul");const l=s.shape.length,u=a.shape.length,c=i?s.shape[l-2]:s.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],d=i?s.shape[l-1]:s.shape[l-2],f=o?a.shape[u-2]:a.shape[u-1],m=s.shape.slice(0,-2),b=a.shape.slice(0,-2),x=g(m),y=g(b),v=Ua(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,f]);p(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const w=o?[y,f,h]:[y,h,f],k=hv({inputs:{x:s},backend:n,attrs:{shape:i?[x,c,d]:[x,d,c]}}),I=hv({inputs:{x:a},backend:n,attrs:{shape:w}}),S=i?k.shape[1]:k.shape[2],N=i?k.shape[2]:k.shape[1],$=o?I.shape[1]:I.shape[2],C=Math.max(x,y),T=n.data.get(k.dataId).values,E=n.data.get(I.dataId).values,R=D(k.shape),A=D(I.shape),[F,_,O]=i?[R[0],1,R[1]]:[R[0],R[1],1],[M,L,z]=o?[1,A[1],A[0]]:[A[1],1,A[0]],P=N*$,B=ha([C,N,$],k.dtype),W=B.values,U=n.blockSize;for(let e=0;e<C;e++){const t=e%x,n=e%y;for(let r=0;r<N;r+=U){const s=Math.min(r+U,N);for(let a=0;a<$;a+=U){const i=Math.min(a+U,$);for(let o=0;o<S;o+=U){const l=Math.min(o+U,S);for(let u=r;u<s;u++)for(let r=a;r<i;r++){let s=0;for(let e=o;e<l;e++)s+=T[t*F+u*_+e*O]*E[e*M+r*L+n*z];W[e*P+(u*$+r)]+=s}}}}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(v,B.dtype,B.values)}const fv={kernelName:ge,backendName:"cpu",kernelFunc:pv},mv={kernelName:nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=pv({inputs:{a:s,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=uv({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=Yy(n,d,c,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}};function gv(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const bv={kernelName:Z,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Cy(t,"abs");let r=new Float32Array(g(t.shape));return r=gv(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},xv=Ry(Q,(e=>Math.acos(e))),yv={kernelName:Q,backendName:"cpu",kernelFunc:xv},vv=Ry(ee,(e=>Math.acosh(e))),wv={kernelName:ee,backendName:"cpu",kernelFunc:vv},kv={kernelName:ne,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;Cy(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=ha(r[0].shape,r[0].dtype),i=a.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function Iv(e,t,n,r,s){const a=t.length,i=g(t),o=D(t),l=D(s),u=N(n,g(s));for(let t=0;t<i;++t){const n=U(t,a,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];u[W(s,a,l)]=e[t]}return u}function Sv(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;Cy(s,"transpose");const i=s.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=s.shape[a[e]];const l=Iv(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const Nv={kernelName:Xn,backendName:"cpu",kernelFunc:Sv},$v={kernelName:re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;Cy(s,"all");const o=I(a,s.shape);let l=o;const u=Lo(l,s.shape.length);let c=s;null!=u&&(c=Sv({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Po(l.length,s.shape.length)),Mo("all",l,c.shape.length);const[h,d]=Do(c.shape,l),p=g(d),f=z(g(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const b=n.makeTensorInfo(h,c.dtype,f);if(i){const e=hv({inputs:{x:b},backend:n,attrs:{shape:Oo(h,o)}});return n.disposeIntermediateTensorInfo(b),e}return b}},Cv={kernelName:se,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;Cy(s,"any");const o=I(a,s.shape);let l=o;const u=Lo(l,s.shape.length);let c=s;null!=u&&(c=Sv({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Po(l.length,s.shape.length)),Mo("any",l,c.shape.length);const[h,d]=Do(c.shape,l),p=g(d),f=z(g(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const b=n.makeTensorInfo(h,c.dtype,f);if(i){const e=hv({inputs:{x:b},backend:n,attrs:{shape:Oo(h,o)}});return n.disposeIntermediateTensorInfo(b),e}return b}},Tv={kernelName:ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;Cy(s,"argMax");let i=I(a,s.shape);const o=Lo(i,s.shape.length);let l=s;const u=[];null!=o&&(l=Sv({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Po(i.length,l.shape.length)),i=[i[0]],Mo("argMax",i,l.shape.length);const[c,h]=Do(l.shape,i),d=z(g(c),"int32"),p=g(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s>n&&(n=s,r=e)}d[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},Ev={kernelName:ie,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;Cy(s,"argMin");let i=I(a,s.shape);const o=Lo(i,s.shape.length);let l=s;const u=[];null!=o&&(l=Sv({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Po(i.length,l.shape.length)),i=[i[0]],Mo("argMin",i,l.shape.length);const[c,h]=Do(l.shape,i),d=z(g(c),"int32"),p=g(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s<n&&(n=s,r=e)}d[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},Rv=Ry(oe,(e=>Math.asin(e))),Av={kernelName:oe,backendName:"cpu",kernelFunc:Rv},Fv=Ry(le,(e=>Math.asinh(e))),_v={kernelName:le,backendName:"cpu",kernelFunc:Fv},Dv=Ry(ue,(e=>Math.atan(e))),Ov={kernelName:ue,backendName:"cpu",kernelFunc:Dv},Mv=zy(((e,t)=>Math.atan2(e,t))),Lv=av(he,Mv),zv={kernelName:he,backendName:"cpu",kernelFunc:Lv},Pv=Ry(ce,(e=>Math.atanh(e))),Bv={kernelName:ce,backendName:"cpu",kernelFunc:Pv};function Wv(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ha(s.outShape,n),g=m.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],x=s.outShape[2]*s.outShape[3],y=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*b,m=t*r[0];for(let t=0;t<s.inChannels;++t)for(let b=0;b<s.outHeight;++b){const v=b*i-d,w=Math.max(0,v),k=Math.min(s.inHeight,c+v),I=n+b*x;for(let n=0;n<s.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(s.inWidth,h+i);let b=f,x=0,v=0;for(let n=w;n<k;n+=l){const s=m+n*r[1];for(let n=c;n<d;n+=u){const i=e[s+n*r[2]+t];"max"===a&&i>b?b=i:"avg"===a&&(x+=i,v++)}if(isNaN(b))break}g[I+n*y+t]="avg"===a?x/v:b}}}return m}function Uv(e,t,n,r,s=!1,a=!1){const i=ha(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=ha(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let b=g;for(;b<0;)b+=u;const x=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const y=Math.min(r.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=b;n<x;n+=u){const i=n-g;for(let o=p;o<y;o+=c){const l=o-h,u=m.get(e,n,o,t);u>v&&(v=u,w=s?a?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+l)}}i.set(w,e,n,o,t)}}return i}function Vv(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,b=s.padInfo.left,x="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=ha(s.outShape,n),v=y.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],S=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*w,y=t*r[0];for(let t=0;t<s.inChannels;++t)for(let w=0;w<s.outDepth;++w){const N=w*i-m;let $=N;for(;$<0;)$+=u;const C=Math.min(s.inDepth,d+N),T=n+w*k;for(let n=0;n<s.outHeight;++n){const i=n*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(s.inHeight,p+i),w=T+n*I;for(let n=0;n<s.outWidth;++n){const i=n*l-b;let o=i;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+i),g=w+n*S;let k=x,I=0,N=0;for(let n=$;n<C;n+=u){const s=y+n*r[1];for(let n=d;n<m;n+=c){const i=s+n*r[2];for(let n=o;n<p;n+=h){const s=e[i+n*r[3]+t];if("max"===a&&s>k?k=s:"avg"===a&&(I+=s,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===a?I/Math.max(N,1):k}}}}return y}const Gv={kernelName:de,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Cy(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;p(Oi(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Ni(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&b(u.inShape,u.outShape))c=Dy({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=D(s.shape),r=Wv(e,s.shape,s.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},Hv={kernelName:fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;Cy(s,"avgPool3d");const c=$i(s.shape,a,i,1,o,l,u),h=Vv(n.data.get(s.dataId).values,s.shape,s.dtype,D(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},qv={kernelName:me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;Cy([s,a],"avgPool3DGrad");const c=$i(a.shape,i,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,b=c.dilationDepth,x=c.dilationHeight,y=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=v-1-c.padInfo.front,S=k-1-c.padInfo.left,N=w-1-c.padInfo.top,$=ha(a.shape,"float32"),C=1/(f*m*g),T=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-I,i=r-N,o=s-S;let l=0;for(let n=0;n<v;n+=b){const r=(a+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=x){const s=(i+n)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<k;n+=y){const a=(o+n)/p;a<0||a>=c.outWidth||Math.floor(a)!==a||(l+=T.get(e,r,s,a,t))}}}$.set(l*C,e,n,r,s,t)}return n.makeTensorInfo($.shape,$.dtype,$.values)}},jv={kernelName:pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;Cy([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Ni(i.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,b=c.effectiveFilterHeight,x=c.effectiveFilterWidth,y=x-1-c.padInfo.left,v=b-1-c.padInfo.top,w=ha(i.shape,"float32"),k=1/(p*f),I=n.data.get(s.dataId).values,S=ha(s.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-v,a=r-y;let i=0;for(let n=0;n<b;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<x;n+=g){const s=(a+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(i+=S.get(e,r,s,t))}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},Kv={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:l}=t;p(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),p(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),p(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Cy([s,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,f=a?n.data.get(a.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),b=m.length,x=f.length,y=d.length,v=h.length;let w=0,k=0,I=0,S=0;for(let e=0;e<c.length;++e)g[e]=m[w++]+(c[e]-h[k++])*f[I++]/Math.sqrt(d[S++]+u),w>=b&&(w=0),k>=v&&(k=0),I>=x&&(I=0),S>=y&&(S=0);return n.makeTensorInfo(s.shape,s.dtype,g)}};function Xv(e,t,n,r,s){const a=gi(r,t,n),i=g(n),o=D(r);if(a){const n=bi(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const l=ha(r,s,"string"===s?Fc(e):e),u=ha(n,s);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===s?_c(u.values):u.values}function Yv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;Cy(s,"slice");const[o,l]=xi(s,a,i);si(s,o,l);const u=Xv(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const Jv={kernelName:wn,backendName:"cpu",kernelFunc:Yv},Zv={kernelName:be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;Cy([s],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=Ou(s.shape,a,o),u=Mu(l.length,a.length),c=Lu(s.shape,a,o),h=zu(i,a.length),d=Pu(c,i,a.length),p=hv({inputs:{x:s},backend:n,attrs:{shape:l}}),f=Sv({inputs:{x:p},backend:n,attrs:{perm:u}}),m=hv({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Yv({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function Qv(e,t,n,r,s){const a=g(r),i=z(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=a>0?t[n]:1)}return i}function ew(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=ha([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}const tw={kernelName:xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=Qv(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},nw={kernelName:ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=Ua(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},rw=qy((e=>Math.ceil(e))),sw=Ay(we,rw),aw={kernelName:we,backendName:"cpu",kernelFunc:sw},iw=Ry(ke,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),ow={kernelName:ke,backendName:"cpu",kernelFunc:iw},lw={kernelName:Se,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(g(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function uw(e,t,n,r){const s=$(n,g(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=g(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?Fc(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]}))}return s}function cw(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const hw={kernelName:pt,backendName:"cpu",kernelFunc:cw};function dw(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=I(s,t[0].shape)[0];Nu(t.map((e=>e.shape)),a);let i=$u(t.map((e=>e.shape)),a);if(0===g(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>g(e.shape)>0));if(1===o.length)return Dy({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const e=o.map((e=>ev({inputs:{input:e},backend:n}))),t=o.map((e=>cw({inputs:{input:e},backend:n}))),r=dw({inputs:e,backend:n,attrs:{axis:a}}),s=dw({inputs:t,backend:n,attrs:{axis:a}}),i=Jy({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const l=o.map((e=>{const t=g(e.shape.slice(a));return hv({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=$u(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=uw(u,i,t[0].dtype,c),d=$u(o.map((e=>e.shape)),a),p=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const pw={kernelName:Ne,backendName:"cpu",kernelFunc:dw};function fw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;Cy([s,a],"conv2d");const h=Li(l),d=Ci(s.shape,a.shape,i,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,b=d.padInfo.left,x=d.padInfo.top,y="channelsLast"===d.dataFormat,v=new jr(d.outShape,s.dtype),w=D(s.shape),k=D(a.shape),I=w[0],S=y?w[1]:w[2],N=y?w[2]:1,$=y?1:w[1],C=v.strides[0],T=y?v.strides[1]:v.strides[2],E=y?v.strides[2]:1,R=y?1:v.strides[1],A=n.data.get(s.dataId).values,F=n.data.get(a.dataId).values,_=v.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*C;for(let e=0;e<d.outHeight;++e){const r=n+e*T,s=e*d.strideHeight-x;for(let e=0;e<p;++e){const n=s+e*m;if(n<0||n>=d.inHeight)continue;const a=e*k[0],i=t+n*S;for(let e=0;e<d.outWidth;++e){const t=r+e*E,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=d.inWidth)continue;const s=i+r*N;let o=a+e*k[1];for(let e=0;e<d.inChannels;++e){const n=A[s+e*$];for(let e=0;e<d.outChannels;++e)_[t+e*R]+=n*F[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,_)}const mw={kernelName:$e,backendName:"cpu",kernelFunc:fw},gw={kernelName:Ce,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;Cy([s,a],"conv2dBackpropFilter");const h=Li(l),d=Ci(s.shape,c,i,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,b="channelsLast"===d.dataFormat,x=new jr(d.filterShape,"float32"),y=d.padInfo.left,v=d.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=new jr(s.shape,s.dtype,w),S=new jr(a.shape,a.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((v-e)/p)),n=Math.min(d.outHeight,(d.inHeight+v-e)/p);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((y-r)/f)),a=Math.min(d.outWidth,(d.inWidth+y-r)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-v;for(let e=s;e<a;++e){const n=r+e*f-y;l+=b?I.get(u,t,n,i)*S.get(u,c,e,o):I.get(u,i,t,n)*S.get(u,o,c,e)}}x.set(l,e,r,i,o)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},bw={kernelName:Te,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;Cy([s,a],"conv2dBackpropInput");const h=D(a.shape),d=D(s.shape);let p=Li(u);const f=Ci(i,a.shape,o,1,l,c,!1,p),m=new jr(f.inShape,"float32"),g=m.values,b=n.data.get(s.dataId).values,x=n.data.get(a.dataId).values,[y,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:$,inWidth:C,outChannels:T,outHeight:E,outWidth:R,strideHeight:A,strideWidth:F}=f;p=f.dataFormat;const _=I-1-f.padInfo.top,O=S-1-f.padInfo.left,M="channelsLast"===p,L=m.strides[0],z=M?m.strides[1]:m.strides[2],P=M?m.strides[2]:1,B=M?1:m.strides[1],W=d[0],U=M?d[1]:d[2],V=M?d[2]:1,G=M?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<$;++n){const r=n-_,s=Math.max(0,Math.ceil(r/A)),a=Math.min(E,(I+r)/A);for(let i=0;i<C;++i){const o=i-O,l=Math.max(0,Math.ceil(o/F)),u=Math.min(R,(S+o)/F);let c=0;for(let n=s;n<a;++n){const s=n*A-r;for(let r=l;r<u;++r){const a=W*e+U*n+V*r,i=y*(I-1-s)+v*(S-1-(r*F-o))+w*t;for(let e=0;e<T;++e)c+=b[a+G*e]*x[i+e]}}g[L*e+z*n+P*i+B*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},xw={kernelName:Ee,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r;Cy([s,a],"conv3d");const u=Ti(s.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,b=g.front,x=g.left,y=g.top,v=new jr(u.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=v.values,S=D(s.shape),N=D(a.shape);for(let e=0;e<u.batchSize;++e){const t=e*S[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){const r=n+e*v.strides[1],s=e*u.strideDepth-b;for(let e=0;e<c;++e){const n=s+e*p;if(n<0||n>=u.inDepth)continue;const a=e*N[0],i=t+n*S[1];for(let e=0;e<u.outHeight;++e){const t=r+e*v.strides[2],n=e*u.strideHeight-y;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=u.inHeight)continue;const s=a+e*N[1],o=i+r*S[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-x;for(let e=0;e<d;++e){const t=r+e*m;if(t<0||t>=u.inWidth)continue;const a=s+e*N[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=w[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},yw={kernelName:Re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r;Cy([s,a],"conv3dBackpropFilterV2");const u=D(s.shape),c=D(a.shape),h=Ti(s.shape,l,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,b=h.filterWidth,x=new jr(h.filterShape,"float32"),y=x.values,[v,w,k,I]=x.strides,S=n.data.get(a.dataId).values,[N,$,C,T]=c,E=n.data.get(s.dataId).values,[R,A,F,_]=u,O=h.padInfo.front,M=h.padInfo.left,L=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((O-e)/d)),n=Math.min(h.outDepth,(h.inDepth+O-e)/d),r=e*v;for(let s=0;s<g;++s){const a=Math.max(0,Math.ceil((L-s)/p)),i=Math.min(h.outHeight,(h.inHeight+L-s)/p),o=s*w+r;for(let r=0;r<b;++r){const l=Math.max(0,Math.ceil((M-r)/f)),u=Math.min(h.outWidth,(h.inWidth+M-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*R,b=m*N;for(let m=t;m<n;++m){const t=(e+m*d-O)*A+h,n=m*$+b;for(let e=a;e<i;++e){const a=(s+e*p-L)*F+t,i=e*C+n;for(let e=l;e<u;++e){const t=e*T+i;g+=E[(r+e*f-M)*_+a+o]*S[t+c]}}}}y[m+c]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},vw={kernelName:Ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r;Cy([s],"conv3dBackpropInputV2");const u=D(s.shape),c=D(a.shape),h=Ti(l,a.shape,o,1,i),d=new jr(h.inShape,"float32"),p=d.values,[f,m,g,b]=d.strides,x=n.data.get(s.dataId).values,[y,v,w,k]=u,I=n.data.get(a.dataId).values,[S,N,$,C]=c,{batchSize:T,filterDepth:E,filterHeight:R,filterWidth:A,inChannels:F,inDepth:_,inHeight:O,inWidth:M,outChannels:L,outDepth:z,outHeight:P,outWidth:B,strideDepth:W,strideHeight:U,strideWidth:V}=h,G=E-1-h.padInfo.front,H=R-1-h.padInfo.top,q=A-1-h.padInfo.left;for(let e=0;e<T;++e)for(let t=0;t<F;++t)for(let n=0;n<_;++n){const r=n-G,s=Math.max(0,Math.ceil(r/W)),a=Math.min(z,(E+r)/W);for(let i=0;i<O;++i){const o=i-H,l=Math.max(0,Math.ceil(o/U)),u=Math.min(P,(R+o)/U);for(let c=0;c<M;++c){const h=c-q,d=Math.max(0,Math.ceil(h/V)),T=Math.min(B,(A+h)/V);let F=0;for(let n=s;n<a;++n){const s=n*W-r;for(let r=l;r<u;++r){const a=r*U-o;for(let i=d;i<T;++i){const o=y*e+v*n+w*r+k*i,l=S*(E-1-s)+N*(R-1-a)+$*(A-1-(i*V-h))+C*t;for(let e=0;e<L;++e)F+=x[o+e]*I[l+e]}}}p[f*e+m*n+g*i+b*c+t]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},ww=Ry(Fe,(e=>Math.cos(e))),kw={kernelName:Fe,backendName:"cpu",kernelFunc:ww},Iw=Ry(_e,(e=>Math.cosh(e))),Sw={kernelName:_e,backendName:"cpu",kernelFunc:Iw},Nw={kernelName:Me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,d,p]=s.shape,f=a.shape[0],[m,g]=o,b=ha([f,m,g,p],"float32"),x=n.data.get(a.dataId).values,y=n.data.get(i.dataId).values,v=n.data.get(s.dataId).values,w=D(s.shape),k=D(b.shape);for(let e=0;e<f;e++){const t=4*e,n=x[t],r=x[t+1],s=x[t+2],a=x[t+3],i=y[e];if(i>=c)continue;const o=m>1?(s-n)*(h-1)/(m-1):0,f=g>1?(a-r)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];b.values[s]=u}else if("bilinear"===l){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?r*(d-1)+l*f:.5*(r+a)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+l*k[2]+t*k[1]+e*k[0];b.values[r]=u}continue}const h=Math.floor(c),m=Math.ceil(c),x=c-h;for(let r=0;r<p;r++){let a=r+h*w[2]+n*w[1]+i*w[0];const u=v[a];a=r+m*w[2]+n*w[1]+i*w[0];const c=v[a];a=r+h*w[2]+s*w[1]+i*w[0];const d=v[a];a=r+m*w[2]+s*w[1]+i*w[0];const p=u+(c-u)*x,f=d+(v[a]-d)*x;a=r+l*k[2]+t*k[1]+e*k[0],b.values[a]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const s=g>1?r*(d-1)+n*f:.5*(r+a)*(d-1);if(s<0||s>d-1){for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];b.values[s]=u}continue}const o=Math.round(s),l=Math.round(c);for(let r=0;r<p;r++){const s=r+o*w[2]+l*w[1]+i*w[0],a=r+n*k[2]+t*k[1]+e*k[0];b.values[a]=v[s]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},$w={kernelName:De,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;Cy(s,"cumprod");const l=Lo([a],s.shape.length);let u=s;null!=l&&(u=Sv({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=Po(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=is(u.dtype,"int32"),d=L(g(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?1:p[n];else{const r=m(e,t-1);d[n]=i?p[r]*d[r]:p[n]*d[r]}}const b=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=Sv({inputs:{x:b},backend:n,attrs:{perm:zo(l)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(u),e}return b}},Cw={kernelName:Oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;Cy(s,"cumsum");const l=Lo([a],s.shape.length);let u=s;null!=l&&(u=Sv({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=Po(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=is(u.dtype,"int32"),d=z(g(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?0:p[n];else{const r=m(e,t-1);d[n]=i?p[r]+d[r]:p[n]+d[r]}}const b=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=Sv({inputs:{x:b},backend:n,attrs:{perm:zo(l)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(u),e}return b}},Tw={kernelName:Le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=Qv(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=ew(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},Ew={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;p("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],h=l*a,d=u*a,f=c/(a*a),m=n.data.get(s.dataId).values,g=new Float32Array(o*h*d*f);let b=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),r=t%a;for(let t=0;t<d;++t){const s=Math.floor(t/a),i=(r*a+t%a)*f;for(let t=0;t<f;++t){const r=t+i+c*(s+u*(n+l*e));g[b++]=m[r]}}}return n.makeTensorInfo([o,h,d,f],s.dtype,g)}};function Rw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;Cy([s,a],"depthwiseConv2DNative");const c=D(s.shape),h=D(a.shape);let d=l;null==d&&(d=[1,1]),p(Oi(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const f=Ci(s.shape,a.shape,i,d,o,u,!0),{filterHeight:m,filterWidth:g,dilationHeight:b,dilationWidth:x,padInfo:y}=f,v=y.left,w=y.top,k=f.outChannels/f.inChannels,I=new jr(f.outShape,s.dtype),S=n.data.get(s.dataId).values,N=n.data.get(a.dataId).values,$=I.values;for(let e=0;e<f.batchSize;++e){const t=e*c[0],n=e*I.strides[0];for(let e=0;e<f.outHeight;++e){const r=n+e*I.strides[1],s=e*f.strideHeight-w;for(let e=0;e<m;++e){const n=s+e*b;if(n<0||n>=f.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<f.outWidth;++e){const t=r+e*I.strides[2],n=e*f.strideWidth-v;for(let e=0;e<g;++e){const r=n+e*x;if(r<0||r>=f.inWidth)continue;const s=a+e*h[1],o=i+r*f.inChannels;let l=t,u=s;for(let e=0;e<f.inChannels;++e){const t=S[o+e];for(let e=0;e<k;++e)$[l+e]+=t*N[u+e];l+=k,u+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const Aw={kernelName:Pe,backendName:"cpu",kernelFunc:Rw},Fw={kernelName:Be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;Cy([s,a],"depthwiseConv2dNativeBackpropFilter");const h=Ci(s.shape,c,i,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new jr(h.filterShape,"float32"),b=h.padInfo.left,x=h.padInfo.top,y=h.outChannels/h.inChannels,v=n.data.get(s.dataId).values,w=new jr(s.shape,s.dtype,v),k=n.data.get(a.dataId).values,I=new jr(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((x-e)/d)),n=Math.min(h.outHeight,(h.inHeight+x-e)/d);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((b-r)/p)),a=Math.min(h.outWidth,(h.inWidth+b-r)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/y),l=i%y;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-x;for(let e=s;e<a;++e){const n=r+e*p-b;u+=w.get(l,t,n,o)*I.get(l,c,e,i)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},_w={kernelName:We,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;Cy([s,a],"depthwiseConv2DNativeBackpropInput");const h=D(s.shape),d=D(a.shape),p=Ci(c,a.shape,i,o,l,u,!0),f=new jr(p.inShape,"float32"),m=f.values,[g,b,x]=f.strides,y=n.data.get(s.dataId).values,[v,w,k]=h,I=n.data.get(a.dataId).values,[S,N,$]=d,{batchSize:C,filterHeight:T,filterWidth:E,inChannels:R,inHeight:A,inWidth:F,outChannels:_,outHeight:O,outWidth:M,strideHeight:L,strideWidth:z}=p,P=T-1-p.padInfo.top,B=E-1-p.padInfo.left,W=_/R;for(let e=0;e<C;++e)for(let t=0;t<R;++t)for(let n=0;n<A;++n){const r=n-P,s=Math.max(0,Math.ceil(r/L)),a=Math.min(O,(T+r)/L);for(let i=0;i<F;++i){const o=i-B,l=Math.max(0,Math.ceil(o/z)),u=Math.min(M,(E+o)/z);let c=0;for(let n=s;n<a;++n){const s=n*L-r;for(let r=l;r<u;++r){const a=v*e+w*n+k*r,i=S*(T-1-s)+N*(E-1-(r*z-o))+$*t;for(let e=0;e<W;++e)c+=y[a+(t*W+e)]*I[i+e]}}m[g*e+b*n+x*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Dw={kernelName:Ue,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=g(r.shape),a=n.data.get(r.dataId).values,i=ha([s,s],r.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*s+e]=a[e];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},Ow={kernelName:Ve,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:x,outWidth:y,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:S,dilationHeight:N,dilationWidth:C,outShape:T}=Si(r.shape,s.shape,a,i,"NHWC",o),E=g(T),R=T.length,A=$(r.dtype,E);for(let e=0;e<p;++e)for(let t=0;t<x;++t){const n=t*w-v.top;for(let a=0;a<y;++a){const i=a*k-v.left;for(let o=0;o<b;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const a=n+t*N;if(a>=0&&a<f)for(let n=0;n<S;++n){const p=i+n*C;if(p>=0&&p<m){const i=W([e,a,p,o],c,D(r.shape)),f=W([t,n,o],d,D(s.shape)),m=u[i]+h[f];m>l&&(l=m)}}}A[W([e,t,a,o],R,D(T))]=l}}}return{dataId:l.write(Rr(A,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},Mw={kernelName:He,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=M(r.shape,u.data.get(r.dataId).values),h=M(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:x,padInfo:y,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:$}=Si(r.shape,s.shape,i,o,"NHWC",l);p(a.rank===$.length,(()=>`Error in ${He}, dy must have the same rank as output ${$.length}, but got ${a.rank}`));const C=M($,u.data.get(a.dataId).values),T=P(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<b;++t){const n=t*v-y.top;for(let r=0;r<x;++r){const s=r*w-y.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<k;++t){const r=n+t*S;if(r>=0&&r<f)for(let n=0;n<I;++n){const u=s+n*N;if(u>=0&&u<m){const s=c[e][r][u][a]+h[t][n][a];s>i&&(i=s,o=t,l=n)}}}T[o][l][a]+=C[e][t][r][a]}}}return{dataId:u.write(Rr(T,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Lw={kernelName:Ge,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=M(r.shape,u.data.get(r.dataId).values),h=M(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:x,padInfo:y,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:$}=Si(r.shape,s.shape,i,o,"NHWC",l);p(a.rank===$.length,(()=>`Error in ${Ge}, dy must have the same rank as output ${$.length}, but got ${a.rank}`));const C=M($,u.data.get(a.dataId).values),T=P(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<b;++t){const n=t*v-y.top;for(let r=0;r<x;++r){const s=r*w-y.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=s<0?0:s;for(let t=0;t<k;++t){const r=n+t*S;if(r>=0&&r<f)for(let n=0;n<I;++n){const u=s+n*N;if(u>=0&&u<m){const s=c[e][r][u][a]+h[t][n][a];s>i&&(i=s,o=r,l=u)}}}T[e][o][l][a]+=C[e][t][r][a]}}}return{dataId:u.write(Rr(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},zw=zy(((e,t)=>e*t)),Pw=iv(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),Bw=av(Wt,zw,Pw),Ww={kernelName:Wt,backendName:"cpu",kernelFunc:Bw};function Uw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;let o;Cy(s,"sum"),o="bool"===s.dtype?rv({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):Dy({inputs:{x:s},backend:n});const l=o.shape.length,u=I(a,o.shape),c=Lo(u,l);let h=u,d=o;null!=c&&(d=Sv({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Po(h.length,l)),Mo("sum",h,d.shape.length);const[p,f]=Do(d.shape,h);let m=Qy(n,p,is(d.dtype,"int32"));const b=g(f),x=n.data.get(m.dataId).values,y=n.data.get(d.dataId).values;for(let e=0;e<x.length;++e){const t=e*b;let n=0;for(let e=0;e<b;++e)n+=y[t+e];x[e]=n}if(i){const e=m;m=hv({inputs:{x:m},backend:n,attrs:{shape:Oo(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const Vw={kernelName:Tn,backendName:"cpu",kernelFunc:Uw},Gw={kernelName:je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=cc(s,a.length);dc(i.length,l,a);const{path:u,steps:c}=pc(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=hc(p,l[t]);let s;fc(e)?s=a[t]:(s=Sv({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);b(s.shape,i)||(s=hv({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=Bw({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=Uw({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},Hw={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;Cy([r,s],"eluGrad");const a=new Float32Array(g(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",a)}},qw=zy(((e,t)=>e===t?1:0)),jw=av(Je,qw,null,"bool"),Kw={kernelName:Je,backendName:"cpu",kernelFunc:jw},Xw=qu,Yw=ju,Jw=Ku,Zw=Xu,Qw=Yu,ek=Ju,tk=Ry(Ye,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Xw*n);return t*(1-((((ek*r+Qw)*r+Zw)*r+Jw)*r+Yw)*r*Math.exp(-n*n))})),nk={kernelName:Ye,backendName:"cpu",kernelFunc:tk},rk=qy((e=>Math.exp(e))),sk=Ay(Ze,rk,"float32"),ak={kernelName:Ze,backendName:"cpu",kernelFunc:sk};function ik(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let l=a;return a<0&&(p(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),hv({inputs:{x:s},backend:n,attrs:{shape:o}})}const ok={kernelName:Qe,backendName:"cpu",kernelFunc:ik},lk=qy((e=>Math.expm1(e))),uk=Ay(et,lk),ck={kernelName:et,backendName:"cpu",kernelFunc:uk},hk=zy(((e,t)=>e/t)),dk=av(qe,hk),pk={kernelName:qe,backendName:"cpu",kernelFunc:dk},fk=zy(((e,t)=>e-t)),mk=iv(((e,t,n,r)=>({real:e-n,imag:t-r}))),gk=av(Vn,fk,mk),bk={kernelName:Vn,backendName:"cpu",kernelFunc:gk};function xk(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[s,a],c=g(u),h=N("float32",c),d=N("float32",c);for(let e=0;e<s;e++){const r=Yv({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),s=Yv({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=Jy({inputs:{real:r,imag:s},backend:n}),{real:u,imag:c}=yk(i,t,n),p=Zu(u,c);for(let t=0;t<a;t++){const n=nc(p,t);h[e*a+t]=n.real,d[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=Jy({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function yk(e,t,n){const r=g(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const s=vk(a,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",Er(r,"float32")),i=Dy({inputs:{x:a},backend:n}),l=pk.kernelFunc({inputs:{a:e,b:a},backend:n}),u=pk.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return s}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=ac(s*r,t,n),l=nc(e,r);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),rc(r,a,i,s)}return r}(Zu(a,i),r,t);return Qu(e)}var o}function vk(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=Zu(e,t),i=n/2,o=ec(a),l=o.real,u=o.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),d=s.makeTensorInfo(c,"float32",u),p=Jy({inputs:{real:h,imag:d},backend:s}),f=tc(a),m=f.real,g=f.imag,b=[m.length],x=s.makeTensorInfo(b,"float32",m),y=s.makeTensorInfo(b,"float32",g),v=Jy({inputs:{real:x,imag:y},backend:s}),w=vk(l,u,i,r,s),k=w.real,I=w.imag,S=[k.length],N=s.makeTensorInfo(S,"float32",k),$=s.makeTensorInfo(S,"float32",I),C=Jy({inputs:{real:N,imag:$},backend:s}),T=vk(m,g,i,r,s),E=T.real,R=T.imag,A=[E.length],F=s.makeTensorInfo(A,"float32",E),_=s.makeTensorInfo(A,"float32",R),D=Jy({inputs:{real:F,imag:_},backend:s}),O=sc(n,r),M=[O.real.length],L=s.makeTensorInfo(M,"float32",O.real),z=s.makeTensorInfo(M,"float32",O.imag),P=Jy({inputs:{real:L,imag:z},backend:s}),B=Bw({inputs:{a:P,b:D},backend:s}),W=uv({inputs:{a:C,b:B},backend:s}),U=gk({inputs:{a:C,b:B},backend:s}),V=ev({inputs:{input:W},backend:s}),G=ev({inputs:{input:U},backend:s}),H=cw({inputs:{input:W},backend:s}),q=cw({inputs:{input:U},backend:s}),j=dw({inputs:[V,G],backend:s,attrs:{axis:0}}),K=dw({inputs:[H,q],backend:s,attrs:{axis:0}}),X=s.data.get(j.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const wk={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=g(r.shape),a=r.shape[r.shape.length-1],i=hv({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=xk(i,!1,n),l=hv({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function kk(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||A(s),o=$(i,g(r));return function(e,t,n){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}const Ik={kernelName:nt,backendName:"cpu",kernelFunc:kk},Sk={kernelName:rt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=N(r.dtype,g(r.shape)),[i,o,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let e=0;e<l;e++){const r=e*u;for(let s=0;s<u;s++){const i=Math.round(l-e-1),o=t+n+r+s;let h=c[o];i>=0&&i<l&&(h=c[t+n+i*u+s]),a[o]=h}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Nk=qy((e=>Math.floor(e))),$k=Ay(st,Nk),Ck={kernelName:st,backendName:"cpu",kernelFunc:$k},Tk=zy(((e,t)=>Math.floor(e/t))),Ek=av(at,Tk,null,"int32"),Rk={kernelName:at,backendName:"cpu",kernelFunc:Ek},Ak={kernelName:rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=fw({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=hv({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=uv({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=uv({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=hv({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=Yy(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=Yy(n,m,p,o,f);n.disposeIntermediateTensorInfo(e)}return m}},Fk={kernelName:sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=Rw({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=uv({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=Yy(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function _k(e,t,n,r,s,a,i,o,l){const u=ha([r,a],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<s;t++){const a=e[n*s+t];c+=a*i[t],r.push(a)}if(c<0||c>=l/a)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<a;e++)u.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return u}const Dk={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=g(r.shape),i=s.shape,o=i[i.length-1],[l,u,c,h]=Bu(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const d=_k(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,u,o,c,h,r.shape,a);return n.makeTensorInfo(l,r.dtype,d.values)}};function Ok(e,t,n){const r=ha(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=t.locToIndex([a,i]);s[2]=t.values[o];const l=e.locToIndex(s);0<=l&&l<e.values.length&&(r.values[n]=e.values[l])}return r}const Mk={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;Cy([s,a],"gatherV2");const l=I(i,s.shape)[0],u=n.data.get(a.dataId).values,c=s.shape[l];for(let e=0;e<u.length;++e){const t=u[e];p(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=g(a.shape),f=Ac(s,a,l,h),m=hv({inputs:{x:s},backend:n,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),b=hv({inputs:{x:a},backend:n,attrs:{shape:[f.batchSize,d/f.batchSize]}}),x=[f.batchSize,f.outerSize,d/f.batchSize,f.sliceSize],y=n.bufferSync(b),v=Ok(n.bufferSync(m),y,x);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.makeTensorInfo(f.outputShape,v.dtype,v.values)}},Lk=zy(((e,t)=>e>t?1:0)),zk=av(ut,Lk,null,"bool"),Pk={kernelName:ut,backendName:"cpu",kernelFunc:zk},Bk=zy(((e,t)=>e>=t?1:0)),Wk=av(ct,Bk,null,"bool"),Uk={kernelName:ct,backendName:"cpu",kernelFunc:Wk},Vk={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=g(r.shape),a=r.shape[r.shape.length-1],i=hv({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=xk(i,!0,n),l=hv({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},Gk=Ry(ft,(e=>Number.isFinite(e)?1:0),"bool"),Hk={kernelName:ft,backendName:"cpu",kernelFunc:Gk},qk=Ry(mt,(e=>Math.abs(e)===1/0?1:0),"bool"),jk={kernelName:mt,backendName:"cpu",kernelFunc:qk},Kk=Ry(gt,(e=>Number.isNaN(e)?1:0),"bool"),Xk={kernelName:gt,backendName:"cpu",kernelFunc:Kk},Yk=zy(((e,t)=>e<t?1:0)),Jk=av(xt,Yk,null,"bool"),Zk={kernelName:xt,backendName:"cpu",kernelFunc:Jk},Qk=zy(((e,t)=>e<=t?1:0)),eI=av(yt,Qk,null,"bool"),tI={kernelName:yt,backendName:"cpu",kernelFunc:eI};function nI(e,t,n){const r=(t-e)/(n-1),s=z(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const rI={kernelName:vt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=nI(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},sI=qy((e=>Math.log(e))),aI=Ay(wt,sI),iI={kernelName:wt,backendName:"cpu",kernelFunc:aI},oI=Ry(kt,(e=>Math.log1p(e))),lI={kernelName:kt,backendName:"cpu",kernelFunc:oI},uI=zy(((e,t)=>e&&t)),cI=av(It,uI,null,"bool"),hI={kernelName:It,backendName:"cpu",kernelFunc:cI},dI=Ry(St,(e=>e?0:1),"bool"),pI={kernelName:St,backendName:"cpu",kernelFunc:dI},fI=zy(((e,t)=>e||t)),mI=av(Nt,fI,null,"bool"),gI={kernelName:Nt,backendName:"cpu",kernelFunc:mI},bI={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r;Cy(s,"LRN");const u=s.shape[3],c=u-1,h=n.data.get(s.dataId).values,d=g(s.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-l);p[e]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}},xI={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r;Cy(i,"LRNGrad");const h=g(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,b=new Float32Array(h),x=h;for(let e=0;e<x;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=u*s+l;for(let t=n;t<r;t++){let n=-2*u*c*f[t]*m[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=p[e],b[t]+=n}}return n.makeTensorInfo(i.shape,s.dtype,b)}};function yI(e,t,n,r){const s=N(r,g(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}function vI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=n;let l=s.shape;const u=l.length,c=I(a,l);let h=c;const d=Lo(h,u);let p=o.data.get(s.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=Iv(p,l,s.dtype,d,e),h=Po(h.length,u),l=e}Cy(s,"max"),Mo("max",h,u);const[f,m]=Do(l,h),b=yI(p,g(m),f,s.dtype),x=o.write(b,f,s.dtype);let y=f;return i&&(y=Oo(f,c)),{dataId:x,shape:y,dtype:s.dtype}}const wI={kernelName:Tt,backendName:"cpu",kernelFunc:vI},kI=zy(((e,t)=>Math.max(e,t))),II=av(Et,kI),SI={kernelName:Et,backendName:"cpu",kernelFunc:II},NI={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Cy(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;p(Oi(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Ni(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&b(u.inShape,u.outShape))c=Dy({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=D(s.shape),r=Wv(e,s.shape,s.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},$I={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;Cy(s,"maxPool3d");const c=$i(s.shape,a,i,1,o,l,u),h=Vv(n.data.get(s.dataId).values,s.shape,s.dtype,D(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},CI={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;Cy([s,a],"maxPool3DGrad");const c=$i(a.shape,i,o,1,l,u),h=function(e,t){const n=ha(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){const x=b*r-d;let y=x;for(;y<0;)y+=i;const v=Math.min(t.inDepth,u+x);for(let r=0;r<t.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const p=s*a-f;let k=p;for(;k<0;)k+=l;const I=Math.min(t.inWidth,h+p);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=y;t<v;t+=i){const n=t-x;for(let r=d;r<w;r+=o){const s=r-u;for(let a=k;a<I;a+=l){const i=a-p,o=e.get(m,t,r,a,g);o>=S&&(S=o,N=n*c*h+s*c+i)}}}n.set(N,m,b,r,s,g)}}}return n}(n.bufferSync(a),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,b=c.dilationWidth,x=c.effectiveFilterDepth,y=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=x-1-c.padInfo.front,k=v-1-c.padInfo.left,I=y-1-c.padInfo.top,S=ha(a.shape,"float32"),N=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-w,i=r-I,o=s-k;let l=0;for(let n=0;n<x;n+=m){const r=(a+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<y;s+=g){const a=(i+s)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<v;i+=b){const u=(o+i)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const d=x*y*v-1-h.get(e,r,a,u,t)===n*y*v+s*v+i?1:0;0!==d&&(l+=N.get(e,r,a,u,t)*d)}}}S.set(l,e,n,r,s,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},TI={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;Cy([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=Ni(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=ha(d.outShape,o.dtype,Uv(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,b=d.dilationHeight,x=d.dilationWidth,y=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=y-1-d.padInfo.top,I=ha(o.shape,"float32"),S=n.data.get(s.dataId).values,N=ha(s.shape,"float32",S);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=n-k,a=r-w;let i=0;for(let n=0;n<y;n+=b){const r=(s+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=x){const o=(a+s)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=y*v-1-f.get(e,r,o,t)===n*v+s?1:0;0!==l&&(i+=N.get(e,r,o,t)*l)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},EI={kernelName:Dt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;Cy(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=Ni(r.shape,s,a,[1,1],i),[h,d]=function(e,t,n,r,s){const a=Wv(e,0,n,D(t),s,"max"),i=Uv(e,t,n,s,!0,r);return[a.values,i.values]}(u,r.shape,r.dtype,o,c),p=l.write(h,c.outShape,r.dtype),f=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},RI={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=I(a,s.shape),l=g(Do(s.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=rv({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=dk({inputs:{a:h,b:c},backend:n});u.push(d);const p=Uw({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},AI={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;Cy(s,"min");const o=I(a,s.shape);let l=o;const u=Lo(l,s.shape.length);let c=s;null!=u&&(c=Sv({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Po(l.length,s.shape.length)),Mo("min",l,c.shape.length);const[h,d]=Do(c.shape,l),p=g(d),f=z(g(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const b=n.makeTensorInfo(h,c.dtype,f);if(i){const e=hv({inputs:{x:b},backend:n,attrs:{shape:Oo(h,o)}});return n.disposeIntermediateTensorInfo(b),e}return b}},FI=zy(((e,t)=>Math.min(e,t))),_I=av(Lt,FI),DI={kernelName:Lt,backendName:"cpu",kernelFunc:_I},OI={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;Cy(s,"mirrorPad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=D(s.shape),f=g(o),m=o.length,b=D(o),x=N(s.dtype,f);for(let e=0;e<f;e++){let t=U(e,m,b);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=W(t,d,p);x[e]=h[n]}return{dataId:n.write(x,o,s.dtype),shape:o,dtype:s.dtype}}},MI=zy(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),LI=av(Pt,MI),zI={kernelName:Pt,backendName:"cpu",kernelFunc:LI};function PI(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=I([o],s.shape),u=vI({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Oo(u.shape,l),h=hv({inputs:{x:u},backend:n,attrs:{shape:c}}),d=gk({inputs:{a:s,b:h},backend:n}),p=sk({inputs:{x:d},backend:n}),f=Uw({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=hv({inputs:{x:f},backend:n,attrs:{shape:c}}),g=dk({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const BI={kernelName:An,backendName:"cpu",kernelFunc:PI},WI={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;Cy(s,"multinomial");const l=o?s:PI({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,a],p=z(g(d),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=Xo.alea(i.toString()),s=e*a;for(let e=0;e<a;++e){const t=r();p[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[s+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function UI(e,t,n){const r=Er(-1,n);return zw([],t,r,e,n)}const VI={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;Cy(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=UI(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},GI=Xl,HI={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;Cy(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=GI(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},qI=Yl,jI={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;Cy(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=qI(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},KI=Jl,XI={kernelName:qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;Cy(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=KI(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},YI=zy(((e,t)=>e!==t?1:0)),JI=av(Vt,YI,null,"bool"),ZI={kernelName:Vt,backendName:"cpu",kernelFunc:JI},QI={kernelName:Kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:l}=r;Cy(s,"oneHot");const u=g(s.shape),c=new Float32Array(u*i);c.fill(l);const h=n.data.get(s.dataId).values;for(let e=0;e<u;++e)h[e]>=0&&h[e]<i&&(c[e*i+h[e]]=o);return n.makeTensorInfo([...s.shape,i],a,c)}};function eS(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=ev({inputs:{input:r},backend:n}),t=eS({inputs:{x:e},backend:n}),s=cw({inputs:{input:r},backend:n}),a=eS({inputs:{x:s},backend:n}),i=Jy({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return kk({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const tS={kernelName:Qn,backendName:"cpu",kernelFunc:eS},nS={kernelName:jt,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=ev({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=cw({inputs:{input:s},backend:r}),i=eS({inputs:{x:a},backend:r}),o=Jy({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return kk({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function rS(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return ik({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{f(a,e.shape,"All tensors passed to stack must have matching shapes"),p(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=dw({inputs:t.map((e=>{const t=ik({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const sS={kernelName:Xt,backendName:"cpu",kernelFunc:rS},aS={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;Cy(s,"pad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(s.dataId).values,c=g(s.shape),h=s.shape.length,d=D(s.shape),p=g(o),f=o.length,m=D(o),b=N(s.dtype,p);0!==i&&b.fill(i);for(let e=0;e<c;e++)b[W(U(e,h,d).map(((e,t)=>e+l[t])),f,m)]=u[e];return{dataId:n.write(b,o,s.dtype),shape:o,dtype:s.dtype}}},iS=zy(((e,t)=>Math.pow(e,t))),oS=av(Jt,iS),lS={kernelName:Jt,backendName:"cpu",kernelFunc:oS};function uS(e,t,n,r){const[s,a]=Do(e,r),i=is(t,"int32"),o=z(g(s),i),l=g(a);for(let e=0;e<o.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:s,outDtype:i}}const cS={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;Cy(s,"prod");const o=s.shape.length,l=I(a,s.shape),u=Lo(l,o);let c=l,h=s;const d=[];null!=u&&(h=Sv({inputs:{x:s},backend:n,attrs:{perm:u}}),d.push(h),c=Po(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=uS(h.shape,h.dtype,p,c);let b=m;return i&&(b=Oo(m,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,g,f)}};function hS(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function dS(e,t,n,r,s,a,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const s=U(r,t.length,D(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}(a,i,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:u,valueSlices:c,numValues:h}=function(e,t,n,r){const s=[];let a=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];const n=t[e+1];for(let t=1;t<l+1;++t)o[e].push(t*n)}for(let r=0;r<e.length;++r){let i=e[r],l=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=o[s],t=e[e.length-1]-r[i];for(let e=i;e<l;++e)o[s].push(r[e+1]+t)}i=r[i],l=r[l]}l!==i&&(s.push([i,l]),a+=l-i)}return{outSplits:o,valueSlices:s,numValues:a}}(a,i,e,l),d=function(e){const t=[];for(let n=0;n<e.length;++n){const r=$("int32",e[n].length);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(u),p=function(e,t,n,r,s){const a=t.slice();a[0]=s;const i=$(n,g(a)),o=e.length;return function(e,t,n,r,s,a){const i=hS(t,2)[1],o=hS(a,2)[1];let l=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)s[l*o+t]=e[n*i+t];++l}}(e,t,r,0===o?0:o/t[0],i,a),[i,a]}(n,r,s,c,h);return[d,p[0],p[1]]}const pS={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,l=s.map((e=>n.data.get(e.dataId).values)),u=s.map((e=>e.shape)),c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,[d,p,f]=dS(l,u,c,a.shape,a.dtype,h,i.shape),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,p);return m.concat([g])}},fS=2147483647;function mS(e,t,n,r,s,a,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,l=0===s.length,u=0===i.length,c=[];o||c.push(t[0]),l||c.push(s[0]),u||c.push(i[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=$("int32",h+1);d[0]=0;for(let t=0;t<h;++t){const n=o?e[0]:e[t],s=l?r[0]:r[t],i=u?a[0]:a[t];if(0===i)throw new Error("Requires delta != 0");let c;if(i>0&&s<n||i<0&&s>n)c=0;else if(c=Math.ceil(Math.abs((s-n)/i)),c>fS)throw new Error(`Requires ((limit - start) / delta) <= ${fS}`);d[t+1]=d[t]+c}const p=$(n,d[h]);let f=0;for(let t=0;t<h;++t){const n=d[t+1]-d[t];let r=o?e[0]:e[t];const s=u?a[0]:a[t];for(let e=0;e<n;++e)p[f++]=r,r+=s}return[d,p]}const gS={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=mS(i,r.shape,r.dtype,o,s.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}};var bS=Cu;class xS{constructor(e,t,n,r,s,a,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=Eu(u),this.raggedRank=Ru(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===bS.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===bS.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case bS.VALUE_ROWIDS:return xS.getMaxWidthValueRowID(t);case bS.ROW_SPLITS:return xS.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${bS[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let a=1;a<t;++a){const t=e[a];t!==r&&(r=t,s=Math.max(a-n,s),n=a)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return vS(e,n)}calculateOutputSize(e){const t=this.valuesShape;Au(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=Tu(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let a=0;for(let e=0;e<r;++e,a+=t)s.push(a);for(let t=r;t<e;++t)s.push(-1);return p(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,a=[];for(let i=0;i<s-1;++i){const s=e[i+1]-e[i];let o=Math.min(r,s),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)a.push(l),l+=n;for(let e=0;e<s-o;++e)a.push(-1)}if(s>0&&a.length!==e[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,a=[];if(0===s)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];a.push(l);for(let u=1;u<s;++u){const s=e[u];if(s===o)l>=0&&(++i,i<r?l+=n:l=-1);else{if(i=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);l=t[s]}a.push(l)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case bS.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case bS.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${bS[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case bS.FIRST_DIM_SIZE:return e[0];case bS.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case bS.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${bS[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=vS(t,!1),s=$(this.valuesDType,g(r));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)a=this.calculateOutputIndex(e-1,a,n[e],t[e]);this.setOutput(this.raggedRank,a,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,a=n;let i=r.slice();i=i.slice(e+1);const o=g(i),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;ga((()=>{const t=Pi(u,e),n=qi(t,i);u=n.dataSync()}))}let c=0,h=0,d=0;for(let e=0;e<=l;++e){let r=e<l?t[e]:-1;if(r!==d){if(h<d){const e=s.subarray(c*o);yS(a.subarray(h*o),e,(d-h)*o)}if(e>=l){const e=n.length;r=Math.floor(e/o)}if(r>d)if(1===this.defaultValue.length)a.subarray(d*o,r*o).fill(this.defaultValue[0]),d=r;else for(;r>d;)yS(a.slice(d*o),u,o),++d;r<0?(c=e+1,h=d):(c=e,h=d,d=h+1)}else++d}}}function yS(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function vS(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function wS(e,t,n,r,s,a,i,o,l,u){return new xS(e,t,n,r,s,a,i,o,l,u).compute()}const kS={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,m]=wS(u,s.shape,c,a.shape,a.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(f,a.dtype,m)}};function IS(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return z(0,r);const s=z(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const SS={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=IS(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},NS=Ry(an,(e=>1/e)),$S={kernelName:an,backendName:"cpu",kernelFunc:NS},CS={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;Cy(s,"resizeBilinear");const l=D(s.shape),[u,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,b=new Float32Array(g([h,u,c,f])),x=[a&&u>1?d-1:d,a&&c>1?p-1:p],y=[a&&u>1?u-1:u,a&&c>1?c-1:c];let v=0;const w=x[0]/y[0],k=x[1]/y[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),s=n-r,a=Math.min(d-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+a*l[1];for(let e=0;e<c;e++){let t;t=i?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(p-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],d=o+a*l[2],g=u+a*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[d+e]-t)*r,i=a+(n+(m[g+e]-n)*r-a)*s;b[v++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",b)}},TS={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;Cy([a,s],"resizeBilinearGrad");const o=D(s.shape),[l,u,c,h]=s.shape,[,d,p]=a.shape,f=new Float32Array(l*u*c*h),m=[i&&d>1?u-1:u,i&&p>1?c-1:c],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],b=m[0]/g[0],x=m[1]/g[1],y=n.data.get(a.dataId).values;let v=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*b,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),a=t+r*o[1],i=t+s*o[1],l=n-r,d=1-l;for(let e=0;e<p;e++){const t=e*x,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,u=1-s,p=a+n*o[2],m=a+r*o[2],g=i+n*o[2],b=i+r*o[2],w=d*u,k=d*s,I=l*u,S=l*s;for(let e=0;e<h;e++){const t=y[v++];f[p+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[b+e]+=t*S}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},ES={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;Cy(s,"resizeNearestNeighbor");const l=D(s.shape),[u,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*u*c*f),b=[a&&u>1?d-1:d,a&&c>1?p-1:p],x=[a&&u>1?u-1:u,a&&c>1?c-1:c],y=b[0]/x[0],v=b[1]/x[1];let w=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?y*(e+.5):y*e;let r=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const s=t+r*l[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=s+n*l[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],s.dtype,g)}},RS={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;Cy([a,s],"resizeNearestNeighborGrad");const o=D(s.shape),l=D(a.shape),[u,c,h,d]=s.shape,[,p,f]=a.shape,m=new Float32Array(u*c*h*d),g=n.data.get(a.dataId).values,b=[i&&p>1?c-1:c,i&&f>1?h-1:h],x=[i&&p>1?p-1:p,i&&f>1?f-1:f],y=b[0]/x[0],v=b[1]/x[1],w=1/y,k=1/v,I=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),s=Math.floor(r-I/2);for(let r=0;r<h;r++){const a=n+r*o[2],u=Math.floor(r*k),b=Math.floor(u-S/2);for(let n=0;n<d;n++){let o=0;for(let a=0;a<I;a++){const u=a+s;if(u<0||u>=p)continue;const d=t+u*l[1],m=u*y;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+b;if(t<0||t>=f)continue;const s=d+t*l[2],a=t*v;r===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[s+n])}}m[a+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}},AS={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;Cy(s,"reverse");const i=s.shape.length,o=I(a,s.shape);if(0===i)return Dy({inputs:{x:s},backend:n});const l=new jr(s.shape,s.dtype),u=n.bufferSync(s);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=s.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},FS={kernelName:tr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=N(r.dtype,g(r.shape)),[u,c,h,d]=r.shape,[p,f]=Du(i,c,h),m=Math.sin(s),b=Math.cos(s),x=o.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let i=0;i<d;i++){const o=[u,e,r,i],g=o[2],y=o[1];let v=(g-p)*b-(y-f)*m,w=(g-p)*m+(y-f)*b;v=Math.round(v+p),w=Math.round(w+f);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),v>=0&&v<h&&w>=0&&w<c&&(k=x[t+w*(h*d)+v*d+i]),l[t+n+s+i]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},_S=Ry(mn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),DS={kernelName:mn,backendName:"cpu",kernelFunc:_S},OS=qy((e=>1/Math.sqrt(e))),MS=Ay(gn,OS),LS={kernelName:gn,backendName:"cpu",kernelFunc:MS};function zS(e,t,n,r,s,a,i,o,l,u){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return ha(n,t.dtype);const p=ha(c,t.dtype);"string"==typeof l||"number"==typeof l?p.values.fill(l):"boolean"==typeof l&&p.values.fill(+l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),l+=n*o[t]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[l*s+n]+=d[e*s+n]:p.values[l*s+n]=0===t.rank?d[0]:d[e*s+n]}return p}const PS={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Vu(0,s,i),d=zS(n.bufferSync(s),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};function BS(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function WS(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}const US={kernelName:xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=function(e,t,n,r,s,a){const i=$("int32",n*s);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),l=o*s;for(let e=0;e<s;++e)i[l+e]="left"===a?BS(n,t[e+l]):WS(n,t[e+l])}return i}(n.data.get(s.dataId).values,n.data.get(a.dataId).values,s.shape[0],s.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",o)}},VS={kernelName:yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;Cy([r,s,a],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=is(s.dtype,a.dtype),h=z(g(s.shape),c);let d=0;const p=0===i||i>1||1===s.shape.length?1:g(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=l[e]:h[d++]=u[e];return n.makeTensorInfo(s.shape,c,h)}},GS=Gu,HS=Hu,qS=Ry(vn,(e=>e>=0?HS*e:GS*(Math.exp(e)-1))),jS={kernelName:vn,backendName:"cpu",kernelFunc:qS},KS=Ry(Sn,(e=>e<0?-1:e>0?1:0)),XS={kernelName:Sn,backendName:"cpu",kernelFunc:KS},YS=Ry(kn,(e=>Math.sin(e))),JS={kernelName:kn,backendName:"cpu",kernelFunc:YS},ZS=Ry(In,(e=>Math.sinh(e))),QS={kernelName:In,backendName:"cpu",kernelFunc:ZS},eN=Math.log(1.1920928955078125e-7)+2,tN=Ry($n,(e=>{const t=e>-eN,n=e<eN,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),nN={kernelName:$n,backendName:"cpu",kernelFunc:tN},rN={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;Cy([s],"spaceToBatchND");const o=g(a),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=aS.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=Ou(u.shape,a,o,!1),h=Mu(c.length,a.length,!1),d=Lu(u.shape,a,o,!1),p=hv({inputs:{x:u},backend:n,attrs:{shape:c}}),f=Sv({inputs:{x:p},backend:n,attrs:{perm:h}}),m=hv({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function sN(e,t,n,r,s,a,i){const o=t[0],l=a[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(bc(o));return[$(n,0),[0,h],$(s,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(xc(t,n));if(n>=l)throw new Error(yc(t,n,l));++f[n],d=d&&n>=p,p=n}let m=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],a=$(n,t*h),d=$(s,t),p=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],s=p[n],i=(0===n?0:f[n-1])+s;p[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];d[i]=r[t],c[t]=i}for(let e=0;e<l;++e)if(0===p[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;d[t]=i}return[a,[t,h],d,u,c]}}const aN={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,m]=sN(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function iN(e,t,n,r,s){const a=g(r),i=t[0],o=s.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(vc(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(wc(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/u);if(u*e!==a)throw new Error(Ic(r,l));l[c]=e}if(g(l)!==a)throw new Error(Sc(r,l));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*l[e+1]}const f=$(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*d[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[i,o],l]}const oN={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,h]=iN(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function lN(e,t,n,r,s,a=!1,i=0){const o=r.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?s[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=$(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&d.fill(i),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=s[p];for(;;){let t=0;if(f<o){if(t=s[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(Cc(g,c));g>m&&d.fill(i,m*u,g*u);for(let t=p;t<f;++t){const n=r[t];if(n<0||n>=l[0])throw new Error(Tc(t,r[t],l[0]));for(let t=0;t<u;t++)d[g*u+t]+=e[n*u+t]}if(a)for(let e=0;e<u;e++)d[g*u+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>o)break}return m<c&&d.fill(i,m*u,c*u),[d,h]}const uN={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=lN(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},cN={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=lN(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},hN={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Vu(0,s,o),p=!1,f=n.bufferSync(s);let m;switch(a.dtype){case"bool":m=zS(f,n.bufferSync(a),o,d,c,u,l,h,Boolean(n.data.get(i.dataId).values[0]),p);break;case"float32":case"int32":m=zS(f,n.bufferSync(a),o,d,c,u,l,h,n.data.get(i.dataId).values[0],p);break;case"string":m=zS(f,n.bufferSync(a),o,d,c,u,l,h,_r(n.data.get(i.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}},dN={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=I(i,s.shape)[0],l=gc(s,a,o),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const r=Yv({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},pN=qy((e=>Math.sqrt(e))),fN=Ry(Cn,(e=>Math.sqrt(e))),mN={kernelName:Cn,backendName:"cpu",kernelFunc:fN},gN={kernelName:zn,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Cy(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];a[e]=t*t}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},bN=zy(((e,t)=>{const n=e-t;return n*n})),xN=av(Ln,bN),yN={kernelName:Ln,backendName:"cpu",kernelFunc:xN},vN=Ry(er,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),wN={kernelName:er,backendName:"cpu",kernelFunc:vN};function kN(e,t,n,r){const s=ha(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+r[e];s.set(t.get(...i),...a)}return s}const IN={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;Cy(s,"stridedSlice");const{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:x,begin:y,end:v,strides:w}=yi(s.shape,a,i,o,l,u,c,h,d);let k;if(g)k=hv({inputs:{x:s},backend:n,attrs:{shape:m}});else if(b||x){p(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=ii(y,v,w),t=Yv({inputs:{x:s},backend:n,attrs:{begin:y,size:e}});k=hv({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{const e=kN(f,n.bufferSync(s),w,y);k=n.makeTensorInfo(m,e.dtype,e.values)}return k}};class SN{constructor(e,t,n,r,s,a){this.separator=Fr(e),this.nGramWidths=t,this.leftPad=Fr(n),this.rightPad=Fr(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let i=0;i<s;++i){const o=this.getPadWidth(a),l=Math.max(0,o-i),u=Math.max(0,o-(s-(i+1))),c=a-(l+u),h=t+(l>0?0:i-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=u*this.rightPad.length,d+=(l+u+c-1)*this.separator.length,n[r+i]=new Uint8Array(d);const p=n[r+i];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,a=$("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),a[e]=a[e-1]+r}const i=new Array(a[s]);for(let n=0;n<s;++n){const r=t[n];let s=a[n];if(this.nGramWidths.forEach((a=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,a);this.createNGrams(e,r,i,s,l,a),s+=l})),this.preserveShort&&s===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,l=1;this.createNGrams(e,r,i,s,l,o)}}return[i,a]}}function NN(e,t,n,r,s,a,i,o){return new SN(n,r,s,a,i,o).compute(e,t)}const $N={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=NN(d,p,s,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function CN(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function TN(e,t,n){const r=e.length,s=[];let a=0,i=0;const o=new Array(r);for(let l=0;l<r;++l){const r=s.length;CN(e[l],t,n,s);const u=s.length-r;o[l]=u,a+=u,i=Math.max(i,u)}const l=$("int32",2*a),u=new Array(a),c=[r,i];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=s[h],++h;return[l,u,c]}const EN={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,h]=TN(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function RN(e,t){const n=$("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Tr(e[r]).modulo(t).getLowBitsUnsigned();return n}const AN={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=RN(n.data.get(a.dataId).values,s);return n.makeTensorInfo(a.shape,"int32",i)}},FN=Ry(Gn,(e=>Math.tan(e))),_N={kernelName:Gn,backendName:"cpu",kernelFunc:FN},DN=Ry(Hn,(e=>Math.tanh(e)));function ON(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=ha(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}const MN=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function LN(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,a=t-n+1,i=Math.log(s),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(s-o)/s)*Math.sign(a-s/2);LN(e,t,Math.max(n,Math.floor(t-a*o/s+l)),Math.min(r,Math.floor(t+(s-a)*o/s+l)))}const s=e[t];let a=n,i=r;for(d(e,n,t),MN(e[r],s)>0&&d(e,n,r);a<i;){for(d(e,a,i),a++,i--;MN(e[a],s)<0;)a+=1;for(;MN(e[i],s)>0;)i-=1}0===MN(e[n],s)?d(e,n,i):(i+=1,d(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function zN(e,t,n,r,s){const a=t[t.length-1],[i,o]=[e.length/a,a],l=N(n,i*r),u=N("int32",i*r);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o);let i=new Array(a.length);a.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(LN(i,r),i=i.slice(0,r)),s&&i.sort(MN);const c=t*r,h=l.subarray(c,c+r),d=u.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[ha(c,n,l),ha(c,"int32",u)]}const PN={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=s.shape,[f,m]=null!=u?u:[h,d],b=[c,f,m,p],x=D(s.shape),y=x[0],v=x[1],w=x[2],k=D(b),I=k[0],S=k[1],$=k[2],C=N(s.dtype,g(b));C.fill(l);const T=r.data.get(s.dataId).values,E=r.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?E:E.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let s=0;s<p;++s){let a;const u=t[6]*r+t[7]*n+1;if(0===u)continue;const c=(t[0]*r+t[1]*n+t[2])/u,p=(t[3]*r+t[4]*n+t[5])/u,f=BN(c,d,o),m=BN(p,h,o);switch(i){case"nearest":a=UN(T,h,d,y,v,w,e,m,f,s,l);break;case"bilinear":a=VN(T,h,d,y,v,w,e,m,f,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}C[e*I+n*S+r*$+s]=a}return r.makeTensorInfo(b,s.dtype,C)}return{dataId:r.write(C,b,s.dtype),shape:s.shape,dtype:s.dtype}}};function BN(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return c(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return c(0,n,t-1)}(e,t);case"nearest":return function(e,t){return c(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function WN(e,t,n,r,s,a,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*s+l*a+u]:c}function UN(e,t,n,r,s,a,i,o,l,u,c){return WN(e,t,n,r,s,a,i,Math.round(o),Math.round(l),u,c)}function VN(e,t,n,r,s,a,i,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*WN(e,t,n,r,s,a,i,h,d,u,c)+(l-d)*WN(e,t,n,r,s,a,i,h,f,u,c))+(o-h)*((f-l)*WN(e,t,n,r,s,a,i,p,d,u,c)+(l-d)*WN(e,t,n,r,s,a,i,p,f,u,c))}function GN(e,t,n,r){const s=I(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const i={},o=new Int32Array(n[s]),l=new jr(a,r,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}const h=a.slice();h[1]=Object.keys(i).length;const d=new jr(h,r);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)d.set(l.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const HN={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r;Cy(s,"unsortedSegmentSum");const o=[],l=[],u=s.shape.length-a.shape.length;let c=a;for(let e=0;e<u;++e){const t=ik({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=Er(e,"int32"),r=n.makeTensorInfo([],"int32",t),a=jw({inputs:{a:r,b:c},backend:n}),i=rv({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=Bw({inputs:{a:i,b:s},backend:n}),h=Uw({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(r),l.push(a),l.push(i),l.push(u),l.push(h)}const h=rS({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},qN=[mv,bv,yv,wv,cv,kv,$v,Cv,Tv,Ev,Av,_v,Ov,zv,Bv,Gv,Hv,qv,jv,fv,Kv,Zv,tw,nw,sv,aw,ow,Zy,lw,pw,mw,gw,bw,xw,yw,vw,kw,Sw,Nw,$w,Cw,Tw,Ew,Aw,Fw,_w,Dw,Ow,Mw,Lw,Gw,_y,Hw,Kw,nk,ak,ok,ck,wk,Ik,Sk,Ck,Rk,Ak,Fk,Dk,Mk,Pk,Uk,Oy,Vk,hw,Hk,jk,Xk,Ly,Zk,tI,rI,iI,lI,hI,pI,gI,bI,xI,wI,SI,NI,$I,CI,TI,EI,RI,AI,DI,OI,zI,WI,Ww,VI,HI,jI,XI,ZI,QI,nS,sS,aS,lS,Wy,cS,pS,gS,kS,SS,tv,pk,$S,Vy,Hy,dv,CS,TS,ES,RS,AS,FS,DS,LS,PS,US,VS,jS,Xy,XS,JS,QS,Jv,BI,nN,rN,aN,oN,uN,cN,hN,dN,mN,gN,yN,wN,IN,$N,EN,AN,bk,Vw,_N,{kernelName:Hn,backendName:"cpu",kernelFunc:DN},{kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;Cy(s,"tile");const i=ON(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;Cy(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=zN(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},PN,Nv,{kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;Cy(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=GN(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==a&&(l[u++]=s.shape[e]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[a]=e;const t=Yv({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[e]=hv({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}},HN,tS];for(const e of qN)dr(e);const jN={},KN={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function XN(e,t){if(!(e in jN)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete jN[e]}),!1),j().getBool("SOFTWARE_WEBGL_ENABLED")&&(KN.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",KN)||n.getContext("experimental-webgl",KN):n.getContext("webgl2",KN)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;jN[e]=n}const n=jN[e];return null==n||n.isContextLost()?(delete jN[e],XN(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),jN[e])}var YN,JN,ZN;function QN(e,t){return[t,e]}function e$(e){const t=g(e);return y(Math.ceil(t/4))}function t$(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function n$(e,t){const n=e;let r,s,a,i,o,l,u,c,h,d;return 2===j().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function r$(e,t){const n=t();return j().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(YN||(YN={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(JN||(JN={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(ZN||(ZN={}));const s$=5.96e-8,a$=65504;function i$(e){return!!(j().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||s$<Math.abs(e)&&Math.abs(e)<a$)}function o$(e,t){return g$(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const l$=/ERROR: [0-9]+:([0-9]+):/g;function u$(e,t){const n=l$.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,i=s.map(((e,t)=>v((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,r-1),u=i.slice(r-1,r),c=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${v(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function c$(e,t){if(r$(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function h$(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(r$(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),r$(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i))),r$(e,(()=>e.enableVertexAttribArray(o))),!0)}function d$(e,t,n,r){r$(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),r$(e,(()=>e.activeTexture(e.TEXTURE0+n))),r$(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),r$(e,(()=>e.uniform1i(n,r)))}function p$(e,t,n){r$(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),r$(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function f$(e,t){r$(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),r$(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function m$(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function g$(e,t,n){const r=r$(e,(()=>t()));if(null==r)throw new Error(n);return r}function b$(e,t=2){return g(e.slice(0,e.length-t))}function x$(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function y$(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[b$(e),...x$(e)]),t}function v$(e){return e%2==0}function w$(e,t){if(b(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(v$(n)&&v$(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&v$(e[0])&&v$(t[0])}let k$,I$;function S$(e,t){return null!=e.getExtension(t)}function N$(e){try{if(null!=XN(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function $$(e){const t=n$(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function C$(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&p("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const T$=j();function E$(){let e,t,n,r,s,a,i,o,l,u;return 2===j().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o=j().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function R$(e,t,n="index"){const r=D(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function A$(e,t,n="index"){const r=D(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / outShapeStrides[${s}]; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`)).join("")}function F$(e){const t=D(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}T$.registerFlag("HAS_WEBGL",(()=>T$.getNumber("WEBGL_VERSION")>0)),T$.registerFlag("WEBGL_VERSION",(()=>N$(2)?2:N$(1)?1:0)),T$.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),T$.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===T$.get("WEBGL_VERSION"))),T$.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),T$.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),T$.registerFlag("WEBGL_PACK",(()=>T$.getBool("HAS_WEBGL"))),T$.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>T$.getBool("WEBGL_PACK"))),T$.registerFlag("WEBGL_PACK_CLIP",(()=>T$.getBool("WEBGL_PACK"))),T$.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>T$.getBool("WEBGL_PACK"))),T$.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>T$.getBool("WEBGL_PACK"))),T$.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>T$.getBool("WEBGL_PACK"))),T$.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>T$.getBool("WEBGL_PACK"))),T$.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>T$.getBool("WEBGL_PACK"))),T$.registerFlag("WEBGL_PACK_REDUCE",(()=>T$.getBool("WEBGL_PACK"))),T$.registerFlag("WEBGL_LAZILY_UNPACK",(()=>T$.getBool("WEBGL_PACK"))),T$.registerFlag("WEBGL_CONV_IM2COL",(()=>T$.getBool("WEBGL_PACK"))),T$.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==k$){const t=XN(e);k$=t.getParameter(t.MAX_TEXTURE_SIZE)}return k$}(T$.getNumber("WEBGL_VERSION")))),T$.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==I$){const t=XN(e);I$=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,I$)}(T$.getNumber("WEBGL_VERSION")))),T$.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=T$.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=XN(e);return t=S$(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:S$(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),T$.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>T$.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ys())),T$.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=XN(e);if(1===e){if(!S$(t,"OES_texture_float"))return!1}else if(!S$(t,"EXT_color_buffer_float"))return!1;return $$(t)}(T$.getNumber("WEBGL_VERSION")))),T$.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!T$.getBool("WEBGL_FORCE_F16_TEXTURES")&&T$.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),T$.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=XN(e);if(1!==e){if(S$(t,"EXT_color_buffer_float"))return $$(t);const e="EXT_color_buffer_half_float";if(S$(t,e)){const n=t.getExtension(e);return function(e,t){const n=n$(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!S$(t,"OES_texture_float")&&!!S$(t,"WEBGL_color_buffer_float")&&$$(t)}(T$.getNumber("WEBGL_VERSION")))),T$.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=T$.getNumber("WEBGL_VERSION"))&&null!=XN(e).fenceSync;var e})),T$.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>T$.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),T$.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),T$.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>ys()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),T$.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),T$.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),T$.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),T$.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),T$.registerFlag("WEBGL_EXP_CONV",(()=>!1)),T$.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>T$.getBool("IS_TEST"))),T$.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),T$.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),T$.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),T$.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const _$="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:D$}=s;function O$(e,t,n){const r=[];if(e.forEach((e=>{const t=g(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=H$(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),a=e.map((e=>function(e,t,n=!1,r){let s="";s+=n?L$(e,r):M$(e,r);const a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=D$(e.shapeInfo.logicalShape,t.logicalShape),l=G$(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const f=1===g(e.shapeInfo.logicalShape),m=1===g(t.logicalShape);if(1!==a||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&b(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=G$(l),c=D$(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=E$(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${z$}\n    ${P$}\n    ${B$}\n  `}(o);return t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(b(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2);let i=a,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return b(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${A$(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=R$(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${A$(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=R$(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=R$(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=R$(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=W$),[h,l,c,s,u,a,n.userCode].join("\n")}function M$(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,a]=e.shapeInfo.texShape;if(1===s&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=U$(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${V$(e)}\n      }\n    `;const s=e.shapeInfo.texShape,a=s[0],i=s[1];if(1===i&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=U$(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===a?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(null!=a&&b(n,a)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=a[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=S(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${M$(q$(e,l),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${j$(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${V$(e)}\n      }\n    `;const u=a[0],c=a[1],h=U$(r);return 1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=S(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${M$(q$(e,u),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${j$(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${V$(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===a&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===i&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=U$(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:l,keptDims:u}=S(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${M$(q$(e,l),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${j$(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${V$(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===a&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const b=U$(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=S(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${M$(q$(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${j$(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${V$(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${U$(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=S(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${M$(q$(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${j$(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${V$(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${U$(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function L$(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${E$().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=E$();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],l=E$();if(null!=a&&b(n,a))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=[1,2],a=["b","row","col"];return`\n        ${L$(q$(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${j$(a,r)});\n        }\n      `}const o=E$();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=E$();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(a[i-1]/2);let d=h*Math.ceil(a[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,d*=a[i-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const z$="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",P$="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",B$="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",W$="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function U$(e){return`offset${e}`}function V$(e){const t=e.name,n=g(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function G$(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function H$(e,t,n){const{newShape:r,keptDims:s}=S(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):r,l=!e&&a>1&&!b(t,n)&&r.length<a||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:s}}function q$(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function j$(e,t){return t.map((t=>e[t])).join(", ")}function K$(e,t,n){const r={},s={},a={},i=[];let o,l,u,c=null,h=null;h=e.getUniformLocation(n,"NAN",!1),1===j().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(let i=0;i<t.variableNames.length;i++){const o=t.variableNames[i];r[o]=e.getUniformLocation(n,o,d),r[`offset${o}`]=e.getUniformLocation(n,`offset${o}`,d),t.enableShapeUniforms&&(s[`${o}Shape`]=e.getUniformLocation(n,`${o}Shape`,d),a[`${o}TexShape`]=e.getUniformLocation(n,`${o}TexShape`,d))}return t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",d),u=e.getUniformLocation(n,"outShapeStrides",d),l=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach(((t,r)=>{i[r]=e.getUniformLocation(n,t.name,d)})),{uniformLocations:r,customUniformLocations:i,infLoc:c,nanLoc:h,inShapesLocations:s,inTexShapesLocations:a,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}}function X$(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!b(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!b(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function Y$(e){return j().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class J${constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=YN.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=E$();this.outputShape=e,this.enableShapeUniforms=Y$(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?A$(["r","c","d"],e):R$(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class Z${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=YN.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=E$();this.outputShape=e,this.enableShapeUniforms=Y$(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?A$(["r","c","d"],e):R$(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class Q${constructor(e){this.variableNames=["A"],this.outTexUsage=JN.DOWNLOAD;const t=E$();this.outputShape=e,this.userCode=`\n      ${_$}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class eC{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=JN.DOWNLOAD;const t=E$();this.outputShape=e,this.userCode=`\n      ${_$}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const tC={R:0,G:1,B:2,A:3};class nC{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=E$();this.outputShape=e,this.enableShapeUniforms=Y$(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let a="";for(let e=0;e<n.length;e++){const t=n[e];a+=`\n          if(offset == ${e}) {\n            result = values[${tC[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":F$(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${a}\n        }\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class rC{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=E$();this.outputShape=e,this.enableShapeUniforms=Y$(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let s=0;s<=1;s++){const a=2*t+s;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${s};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":F$(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function sC(e,t,n,r,s,a){!function(e,t){const n=j().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return g$(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return r$(e,(()=>e.bindTexture(o,i))),r$(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),r$(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),r$(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),r$(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===j().getNumber("WEBGL_VERSION")?r$(e,(()=>e.texImage2D(o,0,r,t,n,0,s,a,null))):r$(e,(()=>e.texStorage2D(o,1,r,t,n))),r$(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function aC(e){return e.internalFormatFloat}function iC(e){return e.internalFormatHalfFloat}function oC(e){return e.downloadTextureFormat}function lC(e){return e.internalFormatPackedFloat}function uC(e){return e.internalFormatPackedHalfFloat}class cC{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=j().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){jN[e]=t}(t,e)):this.gl=XN(t),e=this.gl,2===j().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>r$(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>r$(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>r$(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>r$(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>r$(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>r$(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>r$(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>r$(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===j().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=o$(this.gl,e),S$(this.gl,t))this.textureHalfFloatExtension=o$(this.gl,t);else if(j().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),S$(this.gl,r))this.colorBufferHalfFloatExtension=o$(this.gl,r);else if(j().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",S$(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!S$(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=g$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return r$(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),r$(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=g$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return r$(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),r$(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return g$(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=n$(this.gl,this.textureHalfFloatExtension)}get debug(){return j().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;r$(e,(()=>e.finish())),r$(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),r$(e,(()=>e.deleteFramebuffer(this.framebuffer))),r$(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),r$(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),r$(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=QN(t,n);return sC(e,s,a,aC(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=QN(t,n);return sC(e,s,a,iC(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=QN(t,n);return sC(e,s,a,oC(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){r$(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===j().getNumber("WEBGL_VERSION")?r$(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):r$(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===j().getNumber("WEBGL_VERSION")?r$(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):r$(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),r$(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let i,o,l;r$(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(s),2===j().getNumber("WEBGL_VERSION")?r$(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):r$(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),r$(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=t$(t,n);return sC(e,s,a,uC(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=t$(t,n);return sC(e,s,a,lC(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(f$(this.gl,this.framebuffer),this.outputTexture=null),r$(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=QN(t,n),i=new Uint8Array(t*n*4);return r$(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return function(e,t,n,r,s,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=t$(e,t);return n*r*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();r$(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return r$(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),r$(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),r$(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(j().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return r$(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=E$();return function(e,t){const n=g$(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(r$(e,(()=>e.shaderSource(n,t))),r$(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return g$(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);let r;return r$(t,(()=>t.attachShader(n,this.vertexShader))),r$(t,(()=>t.attachShader(n,e))),function(e,t){if(r$(e,(()=>e.linkProgram(t))),!j().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),r=Object.assign(n,{vao:this.createVertexArray()}),this.bindVertexArray(r.vao),r$(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),console.assert(function(e,t,n){return r$(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),h$(e,t,"clipSpacePos",n,3,20,0)&&h$(e,t,"uv",n,2,20,12)}(t,r,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&c$(t,r),this.setProgram(r),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(r$(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&(this.bindVertexArray(this.program.vao),this.debug&&c$(this.gl,this.program)),r$(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return g$(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),r$(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),d$(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=t$(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&c$(this.gl,this.program),m$(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}r$(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),r$(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=o$(this.gl,2===j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await w((()=>this.disposed||this.isQueryAvailable(e,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in j().platform&&(n=j().platform.setTimeoutCustom.bind(j().platform)),w((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),p$(this.gl,e,this.framebuffer),this.debug&&m$(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(p$(this.gl,this.outputTexture,this.framebuffer),this.debug&&m$(this.gl)):f$(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;p$(r,e,this.framebuffer),this.debug&&m$(r),this.outputTexture=e,r$(r,(()=>r.viewport(0,0,t,n))),r$(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),r$(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:hC,bincountImpl:dC,bincountReduceImpl:pC,castImpl:fC,ceilImpl:mC,concatImpl:gC,equalImpl:bC,expImpl:xC,expm1Impl:yC,floorImpl:vC,gatherNdImpl:wC,gatherV2Impl:kC,greaterImpl:IC,greaterEqualImpl:SC,lessImpl:NC,lessEqualImpl:$C,linSpaceImpl:CC,logImpl:TC,maxImpl:EC,maximumImpl:RC,minimumImpl:AC,multiplyImpl:FC,negImpl:_C,notEqualImpl:DC,prodImpl:OC,raggedGatherImpl:MC,raggedRangeImpl:LC,raggedTensorToTensorImpl:zC,rangeImpl:PC,rsqrtImpl:BC,scatterImpl:WC,sigmoidImpl:UC,simpleAbsImpl:VC,sliceImpl:GC,sparseFillEmptyRowsImpl:HC,sparseReshapeImpl:qC,sparseSegmentReductionImpl:jC,sqrtImpl:KC,stridedSliceImpl:XC,stringNGramsImpl:YC,stringSplitImpl:JC,stringToHashBucketFastImpl:ZC,subImpl:QC,tileImpl:eT,topKImpl:tT,transposeImpl:nT,uniqueImpl:rT}=a;function sT(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function aT(e,t){return 1===t?[e]:sT(e,t)}class iT{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Y$(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=aT("rc",this.rank),t=G$(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class oT{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Y$(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let e=n-3;e>=0;--e)s[e]=`(${s[e+1]} * ${r[e+1]})`;return s}(e.map(((e,t)=>t)),t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${r[s]}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`)).join("")}(["r","c","d"],"inputShape"):R$(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":F$(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class lT{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=cT(t,n),s=hT(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=uT(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let i;return r===ZN.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===ZN.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===ZN.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===ZN.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===ZN.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=cT(n,r),a=hT(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=uT(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=j().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function uT(e,t,n,r,s){const a=function(e,t){switch(e){case ZN.PACKED_2X2_FLOAT32:return lC(t);case ZN.PACKED_2X2_FLOAT16:return uC(t);case ZN.UNPACKED_FLOAT32:return aC(t);case ZN.UNPACKED_FLOAT16:return iC(t);case ZN.PACKED_4X1_UNSIGNED_BYTE:return oC(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=t$(e[0],e[1]);i=t*n}else{const[t,n]=QN(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function cT(e,t){if(e===JN.UPLOAD)return ZN.PACKED_2X2_FLOAT32;if(e===JN.RENDER||null==e)return function(e){return j().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?ZN.PACKED_2X2_FLOAT32:ZN.UNPACKED_FLOAT32:e?ZN.PACKED_2X2_FLOAT16:ZN.UNPACKED_FLOAT16}(t);if(e===JN.DOWNLOAD||e===JN.PIXELS)return ZN.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function hT(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class dT{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Y$(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const pT="if (isnan(x)) return x;",fT="return x;",mT="return abs(x);",gT="return (x >= 0.0) ? x : (exp(x) - 1.0);",bT=pT+"\n  return (x < 0.0) ? 0.0 : x;\n",xT=pT+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",yT="return x;",vT="return 1.0 / (1.0 + exp(-1.0 * x));",wT="return x;",kT="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",IT="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",ST="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",NT="return 1.0 / (1.0 + exp(-1.0 * x));";class $T{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Y$(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class CT{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Y$(this.outputShape.length);const t=e.length,n=aT("rc",t),r=G$(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const TT=Dc,ET={},RT=j().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class AT extends o{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!j().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof cC)t=e;else{const n=XN(j().getNumber("WEBGL_VERSION"),e);t=new cC(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=XN(j().getNumber("WEBGL_VERSION"));t=new cC(e),this.binaryCache=((n=j().getNumber("WEBGL_VERSION"))in ET||(ET[n]={}),ET[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new lT(this.gpgpu),this.numMBBeforeWarning=null==j().global.screen?1024:j().global.screen.height*j().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new i(this,fa())}nextDataId(){return AT.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,s,a){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,s]},o.texShape=[r,s];const l=y$(t),u=new nC(l,!1,a),c=this.runWebGLProgram(u,[i],n,[[r,s]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if((j().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||j().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:JN.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if(j().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:JN.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new $T(i,yT):new dT(i,yT);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=Ar()),c="complex64"===r?Zu(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=Ar()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new $T(r,yT):new dT(r,yT);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(j().getBool("DEBUG")&&!j().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===j().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&j().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...e$(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=Zu(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=g(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;r$(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&fa().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:a,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new $T(s,yT):new dT(s,yT);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:i}],i),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=fa().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>_r(e)));return ha(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ha(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!i$(n)){if(j().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=g(t);if(j().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...e$(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=j().getBool("WEBGL_PACK")&&!0===r,i=a?y$(t):t,o=a?new eC(i):new Q$(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=Or(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=Or(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ar(),endMs:null}}endTimer(e){return j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Ar(),e)}async getQueryTime(e){if(j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=RT){return j().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&g(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){ar("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return TT(e.shape,t)}packedUnaryOp(e,t,n){const r=new $T(e.shape,t),s=this.compileAndRun(r,[e],n);return fa().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=VC(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(j().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,mT,e.dtype);const t=new dT(e.shape,mT),n=this.compileAndRun(t,[e]);return fa().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&E(n[0])){const s=n.map((e=>Fr(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return fa().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new CT(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new iT(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[b$(e.shape),...x$(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[b$(t),...x$(t)],a=new oT(s,n),i=[n],o=this.runWebGLProgram(a,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:a}=n;null!=t&&p(g(s)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const i=y$(s);let o;o=r?new Z$(i):new J$(i);const l=[null!=t?t:e$(i)];return{dtype:a,shape:s,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,l,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,a){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===YN.DENSE){const t=null!=a?a:e$(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===g(i.shape))return o.values=N(i.dtype,0),i;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&g(t.shape)<=j().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!w$(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=H$(e.packedInputs,t.shape,a);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=D(o);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&b(t.shape,a),f=1===g(t.shape),m=Ba(t.shape,n.shape),x=!e.packedInputs&&d===n.shape.length&&b(a,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;r+=`${d}_${x}_${i?l:""}_${o.length}_${f}_${m}_${p}_${u}_${c}_${h}_${y}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s+`${j().getNumber("WEBGL_VERSION")}`,a}(e,u,c),d=this.getAndSaveBinary(h,(()=>function(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),a=s.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=O$(s,i,t),l=function(e,t){const n=g$(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(r$(e,(()=>e.shaderSource(n,t))),r$(e,(()=>e.compileShader(n))),j().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw u$(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),u=e.createProgram(l);return j().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i},K$(e,t,u))}(this.gpgpu,e,u,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),j().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(X$(t.inShapeInfos,n),X$([t.outShapeInfo],[r]));const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===j().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const s=t.program.variableNames[r],a=t.uniformLocations[s],i=t.uniformLocations[`offset${s}`],o=t.inShapesLocations[`${s}Shape`],l=t.inTexShapesLocations[`${s}TexShape`];if(o){const{uniformShape:r}=H$(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=a)if(n.isUniform)if(g(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,a,r)}));const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=D(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s&&t.program.customUniforms.forEach(((n,r)=>{const a=t.customUniformLocations[r],i=s[r];if("float"===n.type)e.gl.uniform1fv(a,i);else if("vec2"===n.type)e.gl.uniform2fv(a,i);else if("vec3"===n.type)e.gl.uniform3fv(a,i);else if("vec4"===n.type)e.gl.uniform4fv(a,i);else if("int"===n.type)e.gl.uniform1iv(a,i);else if("ivec2"===n.type)e.gl.uniform2iv(a,i);else if("ivec3"===n.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,i)}})),e.executeProgram()}(this.gpgpu,d,u,c,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=j().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Ar();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!j().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(j().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=ga((()=>{if(!j().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=j().getBool("DEBUG");j().set("DEBUG",!1);const t=this.abs(Ta(1e-8)).dataSync()[0];if(j().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=Ar());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=j().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=j().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&j().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map(((t,n)=>n>=e.length-2?h(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=S(e);e=t.newShape}let s=g(e),a=null;e.length<=1&&s<=n?a=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?a=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?a=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?a=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?a=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(a=[e[0],e[1]*e[2]*e[3]]);const i=null!=a&&Math.max(...a)>r&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||i)if(t){const t=b$(e);let n=2,r=2;e.length&&([n,r]=x$(e)),s=t*(n/2)*(r/2),a=y(s).map((e=>2*e))}else a=y(s);return a}(n,o),t.texShape=c),null!=s){const e=y$(n);let a,i=c[1],h=c[0];const d=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&d||([i,h]=t$(c[0],c[1])),a=o?new rC(e,d):new nC(e,d);const p=d?[h,i]:c,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);m.usage=d?JN.PIXELS:JN.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,s);const g=[[h,i]],b=!0,x=this.runWebGLProgram(a,[f],r,g,b),y=this.texData.get(x.dataId);t.texShape=y.texShape,t.isPacked=y.isPacked,t.usage=y.usage,j().get("ENGINE_COMPILE_ONLY")?this.disposeData(x.dataId):(t.texture=y.texture,t.values=null,this.texData.delete(x.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=Ar()-u)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*T(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Su(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw u$(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,inShapesLocations:a,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=K$(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.inShapesLocations=a,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:s,width:a,channels:i}=e,o=fa().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(r,t,n,s,a,i);return fa().makeTensorFromDataId(l,t,n,o)}}AT.nextDataId=0,vs()&&ya("webgl",(()=>new AT),2);const FT="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class _T{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Ua(t,n),this.enableShapeUniforms=Y$(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const DT="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class OT{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ua(t,n);const s=this.outputShape.length;this.enableShapeUniforms=Y$(s);let a="";if(r)if(0===s||1===g(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${G$(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=aT("coords",s);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function MT(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const LT={kernelName:ht,backendName:"webgl",kernelFunc:MT};function zT(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=MT({inputs:{x:r},backend:n}),l=MT({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const PT={kernelName:Ie,backendName:"webgl",kernelFunc:zT},BT="return (a < 0.) ? b * a : a;",WT="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",UT={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",Er(a,"float32")),o=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new OT(WT,s.shape,i.shape):new _T(BT,s.shape,i.shape),l=n.runWebGLProgram(o,[s,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},VT="return (a < 0.) ? b * a : a;",GT="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",HT={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new OT(GT,r.shape,s.shape):new _T(VT,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}},qT="if (isnan(x)) return x;";function jT({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=j().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new $T(i.shape,t):new dT(i.shape,e),o.runWebGLProgram(u,[i],l)}}function KT({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new _T(e,l.shape,u.shape);return c.runWebGLProgram(i,[s,a],is(n.dtype,r.dtype))})),a=zT({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||is(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=s){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?Fc(e):e,r="string"===l.dtype?Fc(t):t,[a,i]=s(l.shape,u.shape,n,r,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=a,o}let d;return d=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new OT(t,l.shape,u.shape,n):new _T(e,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function XT(e,t=!1){if("linear"===e)return t?wT:fT;if("relu"===e)return t?IT:bT;if("elu"===e)return t?kT:gT;if("relu6"===e)return t?ST:xT;if("prelu"===e)return t?GT:VT;if("leakyrelu"===e)return t?WT:BT;if("sigmoid"===e)return t?NT:vT;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class YT{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Y$(this.outputShape.length);const u=r?e[1]:e[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",y="rc.x";e[0]<t[0]?x=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(y=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${x};\n        int batchB = ${y};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const JT={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class ZT{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ua(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const QT="return a * b;";function eE(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=is(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new ZT(JT.REAL,r.shape,s.shape),i=new ZT(JT.IMAG,r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=zT({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=FC(r.shape,s.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new OT(QT,r.shape,s.shape):new _T(QT,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const tE={kernelName:Wt,backendName:"webgl",kernelFunc:eE};function nE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,o=g(s.shape),l=k(a,o),u=g(l);p(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(s.dataId);return!c.isPacked||w$(s.shape,l)||null!==c.texture&&w$(c.shape,l)?(i.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[b$(e.shape),...x$(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[b$(t),...x$(t)],i=new oT(a,r),o=[r],l=n.runWebGLProgram(i,[s],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(s,l,i)}const rE={kernelName:ln,backendName:"webgl",kernelFunc:nE};class sE{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${x(e)?e.toPrecision(2):e}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class aE{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function iE(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=_u(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:l,outSize:u}=s[i];let c,h;c="mean"===n?0===i?new sE({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new sE({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new aE({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class oE{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=G$(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class lE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=G$(this.rank),s=sT("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function uE(e,t,n){const r=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lE(e.shape,t):new oE(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function cE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;return function(e,t,n,r){const s=t,a=e.shape.length,i=I(s,e.shape);let o=i;const l=Lo(o,a),u=null!=l;let c=e;u&&(c=uE(e,l,r),o=Po(o.length,a)),Mo("sum",o,a);const[h,d]=Do(c.shape,o);let p=h;n&&(p=Oo(h,i));const f=g(d),m=nE({inputs:{x:c},attrs:{shape:[g(e.shape)/f,f]},backend:r}),b=iE(m,os(e.dtype),"sum",r),x=nE({inputs:{x:b},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(b),u&&r.disposeIntermediateTensorInfo(c),x}(s,a,i,n)}const hE={kernelName:Tn,backendName:"webgl",kernelFunc:cE};function dE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=s.shape[a[e]];let u;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=nT(e,s.shape,s.dtype,a,l);u=i.makeTensorInfo(l,s.dtype),i.texData.get(u.dataId).values=t}else u=uE(s,a,i);return u}const pE={kernelName:Xn,backendName:"webgl",kernelFunc:dE},fE=1e3;function mE({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=r?t.shape[c-1]:t.shape[c-2],f=n?e.shape[u-1]:e.shape[u-2],m=r?t.shape[c-2]:t.shape[c-1],b=e.shape.slice(0,-2),x=t.shape.slice(0,-2),y=g(b),v=g(x),w=Ua(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,m]);p(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const k=n?[y,h,f]:[y,f,h],I=r?[v,m,d]:[v,d,m],S=nE({inputs:{x:e},backend:s,attrs:{shape:k}}),N=nE({inputs:{x:t},backend:s,attrs:{shape:I}}),$=[S,N],C=Math.max(y,v),T=n?S.shape[1]:S.shape[2],E=null!=a,R=null!=i,A="leakyrelu"===l,F=null!=l?XT(l,!0):null;let _;if((1===f||1===m)&&T>fE&&!1===(E||R||A||null!=F)){let e=S,t=N;n&&(e=dE({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),$.push(e)),r&&(t=dE({inputs:{x:N},backend:s,attrs:{perm:[0,2,1]}}),$.push(t));const a=1===m;let i=e;1!==m&&(i=nE({inputs:{x:e},backend:s,attrs:{shape:[C,T,1]}}),$.push(i));const o=1===m?2:1;let l=t;a&&(l=nE({inputs:{x:t},backend:s,attrs:{shape:[C,1,T]}}),$.push(l));const u=eE({inputs:{a:i,b:l},backend:s});_=cE({inputs:{x:u},backend:s,attrs:{axis:o,keepDims:!0}}),$.push(u)}else{const l=is(e.dtype,t.dtype),u=new YT(k,I,[C,f,m],n,r,E,F,R,A),c=[S,N];if(null!=a&&c.push(a),R&&c.push(i),A){const e=s.makeTensorInfo([],"float32",Er(o,"float32"));c.push(e),$.push(e)}_=s.runWebGLProgram(u,c,l)}const D=nE({inputs:{x:_},backend:s,attrs:{shape:w}});$.push(_);for(const e of $)s.disposeIntermediateTensorInfo(e);return D}const gE={kernelName:nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return mE({a:s,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},bE="return abs(x);",xE={kernelName:Z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=VC(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=j().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new $T(r.shape,bE):new dT(r.shape,bE),n.runWebGLProgram(s,[r],r.dtype)}},yE=jT({opSnippet:pT+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),vE={kernelName:Q,backendName:"webgl",kernelFunc:yE},wE=jT({opSnippet:pT+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),kE={kernelName:ee,backendName:"webgl",kernelFunc:wE},IE="return a + b;",SE=KT({opSnippet:IE,packedOpSnippet:IE,supportsComplex:!0,cpuKernelImpl:hC}),NE={kernelName:te,backendName:"webgl",kernelFunc:SE};class $E{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class CE{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const TE={kernelName:ne,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return MT({inputs:{x:s[0]},backend:r});if(s.length>j().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>is(e,t))),i=s.map((e=>e.shape)),o=j().getBool("WEBGL_PACK")?new CE(s[0].shape,i):new $E(s[0].shape,i);return r.runWebGLProgram(o,s,a)}},EE={kernelName:re,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=I(a,s.shape);let u=l;const c=Lo(u,o);let h=s;null!=c&&(h=dE({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Po(u.length,o)),Mo("all",u,o);const[d,p]=Do(h.shape,u),f=nE({inputs:{x:h},backend:n,attrs:{shape:[-1,g(p)]}}),m=iE(f,f.dtype,"all",n);let b;return b=nE(i?{inputs:{x:m},backend:n,attrs:{shape:Oo(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}},RE={kernelName:se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=I(a,s.shape);let u=l;const c=Lo(u,o);let h=s;null!=c&&(h=dE({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Po(u.length,o)),Mo("any",u,o);const[d,p]=Do(h.shape,u),f=nE({inputs:{x:h},backend:n,attrs:{shape:[-1,g(p)]}}),m=iE(f,f.dtype,"any",n);let b;return b=nE(i?{inputs:{x:m},backend:n,attrs:{shape:Oo(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}};class AE{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class FE{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,p(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=G$(o),u=aT("coords",o);let c,h;if(1===a){h=o+1;const e=G$(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),f="."+d[h-1],m=d.map((e=>"int "+e)),g=aT("sourceLocR",h-1).concat("inIdx.r"),b=aT("sourceLocG",h-1).concat("inIdx.g"),x=aT("sourceLocB",h-1).concat("inIdx.b"),y=aT("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,I=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function _E(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=_u(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},l=new AE(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=_E(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function DE(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=_u(s[s.length-1]),i=new FE(s,a,n,null==r),o=null==r?[t]:[t,r],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const r=DE(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function OE(e,t,n,r){const s=[n];if(Mo("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!j().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,l]=Do(i.shape,s),u=g(l),c=nE({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(c);const h=_E(e,c,r);n.push(h);const d=nE({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return DE(e,t,r)}const ME={kernelName:ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=I(a,s.shape);const o=Lo(i,s.shape.length);let l=s;const u=[];null!=o&&(l=dE({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Po(i.length,l.shape.length)),Mo("argMax",[i[0]],l.shape.length);const c=OE(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},LE={kernelName:ie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=I(a,s.shape);const o=Lo(i,s.shape.length);let l=s;const u=[];null!=o&&(l=dE({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Po(i.length,l.shape.length)),Mo("argMin",[i[0]],l.shape.length);const c=OE(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},zE=jT({opSnippet:pT+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),PE={kernelName:oe,backendName:"webgl",kernelFunc:zE},BE=jT({opSnippet:pT+"return log(x + sqrt(x * x + 1.0));"}),WE={kernelName:le,backendName:"webgl",kernelFunc:BE},UE=jT({opSnippet:pT+"\n  return atan(x);\n"}),VE={kernelName:ue,backendName:"webgl",kernelFunc:UE},GE=KT({opSnippet:FT+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+DT+"\n  return result;\n"}),HE={kernelName:he,backendName:"webgl",kernelFunc:GE},qE=jT({opSnippet:pT+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),jE={kernelName:ce,backendName:"webgl",kernelFunc:qE};class KE{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");const y=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${y};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class XE{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let y="0.0";if(x||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");const w=4*Math.floor(a/4),k=a%4,I=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n        }\n        setOutput(${v});\n      }\n    `}}const YE={kernelName:de,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;C$(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;p(Oi(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Ni(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&b(u.inShape,u.outShape))return MT({inputs:{x:s},backend:n});const c=new KE(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},JE={kernelName:fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=$i(s.shape,a,i,[1,1,1],o,l,u),h=new XE(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class ZE{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class QE{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const eR={kernelName:me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=$i(i.shape,o,l,[1,1,1],u,c),d=new QE(h);return n.runWebGLProgram(d,[s],i.dtype)}},tR={kernelName:pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;C$([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Ni(i.shape,o,l,1,u),h=new ZE(c);return n.runWebGLProgram(h,[s],i.dtype)}},nR={kernelName:ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return mE({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class rR{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Ua(e,t),Ua(e,n);let i="0.0";null!=r&&(Ua(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(Ua(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class sR{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ua(e,t),Ua(e,n);let i="vec4(0.0)";null!=r&&(Ua(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(Ua(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const aR={kernelName:it,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=e;p(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),p(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),p(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,s,a];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const d=j().getBool("WEBGL_PACK_NORMALIZATION")?new sR(r.shape,s.shape,a.shape,c,h,l):new rR(r.shape,s.shape,a.shape,c,h,l);return t.runWebGLProgram(d,u,u[0].dtype)}};class iR{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=G$(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return oR.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${oR[t]} = start[${t}] + coords.${oR[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const oR=["x","y","z","w","u","v"];class lR{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=G$(this.rank),n=aT("coords",this.rank),r=aT("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function uR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r,[o,l]=xi(s,a,i);if(si(s,o,l),0===g(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=GC(e.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:u}=n.texData.get(s.dataId),c=gi(s.shape,o,l);if(u||!c){const e=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lR(l):new iR(l),t=[o];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=bi(t,D(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),a}(s,o,l,n)}const cR={kernelName:wn,backendName:"webgl",kernelFunc:uR},hR={kernelName:be,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;p(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=Ou(s.shape,a,o),u=Mu(l.length,a.length),c=Lu(s.shape,a,o),h=zu(i,a.length),d=Pu(c,i,a.length),f=[],m=nE({inputs:{x:s},backend:n,attrs:{shape:l}}),g=dE({inputs:{x:m},backend:n,attrs:{perm:u}}),b=nE({inputs:{x:g},backend:n,attrs:{shape:c}}),x=uR({inputs:{x:b},backend:n,attrs:{begin:h,size:d}});return f.push(m),f.push(g),f.push(b),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},dR={kernelName:xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),l=n.readSync(a.dataId),u=dC(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},pR={kernelName:ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),i=n.readSync(s.dataId),o=Ua(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},fR=KT({opSnippet:"return float(a != b);",cpuKernelImpl:DC,dtype:"bool"}),mR={kernelName:Vt,backendName:"webgl",kernelFunc:fR};function gR(e){const{inputs:t,backend:n}=e,{input:r}=t;return MT({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const bR={kernelName:sn,backendName:"webgl",kernelFunc:gR},xR={kernelName:ve,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return MT({inputs:{x:a},backend:r});const t=Go(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=zT({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=gR({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!C(a.dtype,i)){const e=MT({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(r.shouldExecuteOnCPU([a])){const e=r.texData.get(a.dataId).values,[t,n,s]=fC(e,a.shape,a.dtype,i);return r.makeTensorInfo(t,n,s)}if("int32"===i)return function(e,t){const n=new dT(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",N("bool",1)),t=fR({inputs:{a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},yR="return ceil(x);",vR=jT({opSnippet:yR,packedOpSnippet:yR,cpuKernelImpl:mC}),wR={kernelName:we,backendName:"webgl",kernelFunc:vR};class kR{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class IR{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const SR={kernelName:ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=j().getBool("WEBGL_PACK_CLIP")?new IR(s.shape):new kR(s.shape);const l=[[a],[i]];return n.runWebGLProgram(o,[s],s.dtype,l)}};class NR{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function $R(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const CR={kernelName:Se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new NR(r.shape),i=[$R(r,s.complexTensorInfos.real),$R(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class TR{constructor(e){this.outputShape=[],this.outputShape=$u(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class ER{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=$u(e,t);const n=this.outputShape,r=n.length,s=G$(r),a=aT("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${RR(i,l,t)}),\n            vec2(${RR(u,l,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${RR(i,l,p)}),\n          vec2(${RR(u,l,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function RR(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function AR(e){const{inputs:t,backend:n}=e,{input:r}=t;return MT({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const FR={kernelName:pt,backendName:"webgl",kernelFunc:AR};function _R(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>gR({inputs:{input:e},backend:n}))),s=e.map((e=>AR({inputs:{input:e},backend:n}))),a=_R(r,t,n),i=_R(s,t,n),o=zT({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=g(e.shape.slice(t));return nE({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=$u(s.map((e=>e.shape)),1),o=1===s[0].shape[0],l=gC(a,i,r,o),u=$u(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const a=e.filter((e=>g(e.shape)>0)),i=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const t=i?new dT(e[0].shape,yT):new $T(e[0].shape,yT);return n.runWebGLProgram(t,e,r)}const o=j().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>o){const e=[];for(let r=0;r<a.length;r+=o){const s=a.slice(r,r+o);e.push(_R(s,t,n))}const r=_R(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(i){const e=new ER(a.map((e=>e.shape)),t);return n.runWebGLProgram(e,a,r)}const{tensors2D:l,outShape:u}=function(e,t,n){const r=$u(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>nE({inputs:{x:e},attrs:{shape:[-1,g(e.shape.slice(t))]},backend:n}))),outShape:r}}(a,t,n),c=new TR(l.map((e=>e.shape))),h=n.runWebGLProgram(c,l,r);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=nE({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function DR(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=I(s,t[0].shape)[0];Nu(t.map((e=>e.shape)),a);const i=$u(t.map((e=>e.shape)),a);if(0===g(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>g(e.shape)>0));return 1===o.length?MT({inputs:{x:o[0]},backend:n}):_R(o,a,n)}const OR={kernelName:Ne,backendName:"webgl",kernelFunc:DR};class MR{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,b=m?2:3,x=m?3:1;let y="",v="";n&&(y=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class LR{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zR{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Y$(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u;let d="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<u;e++)d+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;d+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<u;e++)d+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;d+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(d+=`\n           xC = xCCorner + ${n*o};\n           `,1===i){if(n<u&&(a%2==1?(d+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,d+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):d+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){const e=a%2==0?h(o):o;o%2==0&&a%2==1||o%2!=0&&a%2!=1?(d+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,d+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):d+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(a%2==1?(d+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(d+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(d+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(d+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(d+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(d+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}d+="\n     }\n   ",d+="\n     }\n   ",d+="\n     }\n   ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${d}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${m}\n         ${f}\n         setOutput(result);\n       }\n     `}}class PR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Y$(this.outputShape.length);const{dataFormat:n}=t,r=E$(),s="channelsLast"===n,a=s?1:2,i=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function BR(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function WR({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=r.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,f="channelsLast"===n.dataFormat;let m;const g=[];if(null!=a){const e=BR(a.shape,f);null!=e&&(a=nE({inputs:{x:a},backend:r,attrs:{shape:e}}),g.push(a))}if(null!=s){const e=BR(s.shape,f);null!=e&&(s=nE({inputs:{x:s},backend:r,attrs:{shape:e}}),g.push(s))}if((1!==h&&1!==d||!(c>fE))&&u.isPacked&&f&&null!=u.texture&&l[2]%2!=0&&b(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,p(w$(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const f=nE({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(f);const b=mE({a:h,b:f,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),x=r.texData.get(b.dataId);p(x.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,x.shape=n.outShape,m=MT({inputs:{x:b},backend:r}),m.shape=n.outShape,g.push(b)}else{const l=n.outHeight*n.outWidth,u=nE({inputs:{x:e},backend:r,attrs:{shape:f?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),c=nE({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=mE({a:f?u:c,b:f?c:u,transposeA:!f,transposeB:!1,backend:r,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i});m=nE({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),g.push(u),g.push(c),g.push(h)}for(const e of g)r.disposeIntermediateTensorInfo(e);return m}function UR({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=l*u*c,b=d*h,x=[n.batchSize,m,b],y=[];if(null!=a){const e=BR(a.shape,f);null!=e&&(a=nE({inputs:{x:a},backend:r,attrs:{shape:e}}),y.push(a))}if(null!=s){const e=BR(s.shape,f);null!=e&&(s=nE({inputs:{x:s},backend:r,attrs:{shape:e}}),y.push(s))}const v=nE({inputs:{x:t},backend:r,attrs:{shape:[1,m,g(t.shape)/m]}});y.push(v);const w=new PR(x,n),k=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=r.runWebGLProgram(w,[e],"float32",k),S=nE({inputs:{x:I},backend:r,attrs:{shape:x}});y.push(I),y.push(S);const N=null!=s,$=null!=a,C="leakyrelu"===o,T=o?XT(o,!0):null,E=new YT(f?S.shape:v.shape,f?v.shape:S.shape,f?[n.batchSize,b,n.outChannels]:[n.batchSize,n.outChannels,b],!0,!1,N,T,$,C),R=f?[S,v]:[v,S];if(s&&R.push(s),$&&R.push(a),C){const e=r.makeTensorInfo([],"float32",Er(i,"float32"));R.push(e),y.push(e)}const A=r.runWebGLProgram(E,R,"float32"),F=nE({inputs:{x:A},backend:r,attrs:{shape:n.outShape}});y.push(A);for(const e of y)r.disposeIntermediateTensorInfo(e);return F}const VR={kernelName:$e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=Li(l),d=Ci(s.shape,a.shape,i,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&j().getBool("WEBGL_EXP_CONV")){const e=new zR(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[s,a],"float32",t)}else if(j().getBool("WEBGL_CONV_IM2COL"))p=UR({x:s,filter:a,convInfo:d,backend:n});else{const e=new MR(d);p=n.runWebGLProgram(e,[s,a],"float32")}else p=WR({x:s,filter:a,convInfo:d,backend:n});const f=nE({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class GR{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class HR{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class qR{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class jR{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const KR={kernelName:Ce,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=Li(l),d=Ci(s.shape,c,i,1,o,u,!1,h),p=new GR(d);return n.runWebGLProgram(p,[s,a],"float32")}},XR={kernelName:Te,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=Li(u),d=Ci(i,a.shape,o,1,l,c,!1,h),p=new HR(d);return n.runWebGLProgram(p,[s,a],"float32")}},YR={kernelName:Ee,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=Ti(s.shape,a.shape,i,l,o),c=new LR(u);return n.runWebGLProgram(c,[s,a],"float32")}},JR={kernelName:Re,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r,u=Ti(s.shape,l,i,1,o),c=new qR(u);return n.runWebGLProgram(c,[s,a],"float32")}},ZR={kernelName:Ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r,u=Ti(l,a.shape,o,1,i),c=new jR(u);return n.runWebGLProgram(c,[s,a],"float32")}},QR=jT({opSnippet:qT+"\n  return cos(x);\n"}),eA={kernelName:Fe,backendName:"webgl",kernelFunc:QR},tA=jT({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),nA={kernelName:_e,backendName:"webgl",kernelFunc:tA};class rA{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[x,y,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${y};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const sA={kernelName:Me,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new rA(s.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[s,a,i],"float32")}};var aA;!function(e){e.Prod="*",e.Sum="+"}(aA||(aA={}));class iA{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,a=this.op===aA.Prod?"1.0":"0.0",i=n?a:`getX(${oA(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${G$(s)} coords = getOutputCoords();\n        int end = ${lA(s,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${lA(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${oA(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function oA(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function lA(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function uA(e,t,n,r,s,a){const i=t.shape.length,o=Lo([r],i);let l=t;null!=o&&(l=dE({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=Po(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=l.shape[u];let h=MT({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new iA(e,l.shape,!1,a),s=[[t]],i=h;h=n.runWebGLProgram(r,[h],h.dtype,s),n.disposeIntermediateTensorInfo(i)}if(s){const t=new iA(e,l.shape,s,a),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=dE({inputs:{x:h},backend:n,attrs:{perm:zo(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const cA={kernelName:De,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return uA(aA.Prod,s,n,a,i,o)}},hA={kernelName:Oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return uA(aA.Sum,s,n,a,i,o)}},dA={kernelName:Le,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=dC(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=pC(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class pA{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const fA={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r,o=s.shape[0],l=("NHWC"===i?s.shape[1]:s.shape[2])*a,u=("NHWC"===i?s.shape[2]:s.shape[3])*a,c=("NHWC"===i?s.shape[3]:s.shape[1])/(a*a),h=new pA("NHWC"===i?[o,l,u,c]:[o,c,l,u],a,i);return n.runWebGLProgram(h,[s],s.dtype)}};class mA{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Y$(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class gA{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Y$(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,d=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;p+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<c;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(d+1)/2;e++){const t=2*e;if(p+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?h(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,p+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",m="";n&&(f=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${m}\n        setOutput(result);\n      }\n    `}}const bA={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),p(Oi(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=Ci(s.shape,a.shape,i,c,o,u,!0);let d;d=j().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new gA(h):new mA(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[s,a],"float32",f)}};class xA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class yA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const vA={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=Ci(s.shape,c,i,o,l,u,!0),d=new xA(h);return n.runWebGLProgram(d,[s,a],"float32")}},wA={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=Ci(c,a.shape,i,o,l,u,!0),d=new yA(h);return n.runWebGLProgram(d,[s,a],"float32")}};class kA{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const IA={kernelName:Ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=g(r.shape),i=nE({inputs:{x:r},backend:n,attrs:{shape:[a]}}),o=new kA(a),l=n.runWebGLProgram(o,[i],i.dtype),u=nE({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class SA{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const NA={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=Si(s.shape,a.shape,i,o,"NHWC",l);let c;const h=new SA(u);c=n.runWebGLProgram(h,[s,a],"float32");const d=nE({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},$A={kernelName:je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=cc(s,a.length);dc(i.length,l,a);const{path:u,steps:c}=pc(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=hc(p,l[t]);let s;fc(e)?s=a[t]:(s=dE({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);b(s.shape,i)||(s=nE({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=eE({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=cE({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},CA=jT({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),TA={kernelName:Ke,backendName:"webgl",kernelFunc:CA},EA={kernelName:Xe,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new OT("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new _T("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},RA=KT({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:bC}),AA={kernelName:Je,backendName:"webgl",kernelFunc:RA},FA=jT({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${qu};\n  float a1 = ${ju};\n  float a2 = ${Ku};\n  float a3 = ${Xu};\n  float a4 = ${Yu};\n  float a5 = ${Ju};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),_A={kernelName:Ye,backendName:"webgl",kernelFunc:FA},DA=jT({opSnippet:qT+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:xC,dtype:"float32"}),OA={kernelName:Ze,backendName:"webgl",kernelFunc:DA};function MA(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let l=s;return s<0&&(p(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),nE({inputs:{x:a},backend:r,attrs:{shape:o}})}const LA={kernelName:Qe,backendName:"webgl",kernelFunc:MA},zA="return exp(x) - 1.0;",PA=jT({opSnippet:zA,packedOpSnippet:zA,cpuKernelImpl:yC}),BA={kernelName:et,backendName:"webgl",kernelFunc:PA};class WA{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function UA(e,t,n){const r=n.texData.get(e.dataId),s=g(e.shape),a=e.shape[e.shape.length-1],i=nE({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),o=i.shape,l=new WA("real",o,t),u=new WA("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=zT({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=nE({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const VA={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return UA(r,!1,n)}};class GA{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function HA(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||A(s),"string"===a){const e=$(a,g(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new GA(r,s),n=[[s]];return t.runWebGLProgram(e,[],a,n)}}const qA={kernelName:nt,backendName:"webgl",kernelFunc:HA};class jA{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const KA={kernelName:rt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new jA(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},XA="return floor(x);",YA=jT({opSnippet:XA,packedOpSnippet:XA,cpuKernelImpl:vC}),JA={kernelName:st,backendName:"webgl",kernelFunc:YA},ZA=KT({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),QA={kernelName:at,backendName:"webgl",kernelFunc:ZA};class eF{constructor(e){this.variableNames=["A"];const t=E$(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class tF{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=E$(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const nF={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,a];if(o||i){const e=j().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=rF&&e===sF||(sF=e,rF=document.createElement("canvas").getContext("2d",{willReadFrequently:sF})),rF.canvas.width=l,rF.canvas.height=u,rF.drawImage(s,0,0,l,u),s=rF.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=JN.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=j().getBool("WEBGL_PACK")?new tF(h):new eF(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let rF,sF=j().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const aF={kernelName:rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=Li(c),g=Ci(s.shape,a.shape,l,h,u,d,!1,m);let b;const x=[],y=null!=i,v=null!=o,w="leakyrelu"===p,k=()=>{const e=[s,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=nE({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return x.push(t),t}return e};if(y&&e.push(t(i,c)),v&&e.push(t(o,c)),w){const t=n.makeTensorInfo([],"float32",Er(f,"float32"));e.push(t),x.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&j().getBool("WEBGL_EXP_CONV")){const e=p?XT(p,!0):null,t=new zR(g,y,e,v,w),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],s=k();b=n.runWebGLProgram(t,s,"float32",r)}else if(j().getBool("WEBGL_CONV_IM2COL"))b=UR({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?XT(p,!1):null,t=new MR(g,y,e,v,w),r=k();b=n.runWebGLProgram(t,r,"float32")}else b=WR({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const I=nE({inputs:{x:b},backend:n,attrs:{shape:g.outShape}});return x.push(b),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}},iF={kernelName:sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=r,m=[];let g=c;null==g&&(g=[1,1]),p(Oi(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const b=Ci(s.shape,a.shape,l,g,u,h,!0),x=j().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,y=d?XT(d,x):null,v=[s,a],w=null!=i,k=null!=o,I="leakyrelu"===d;if(w&&v.push(i),k&&v.push(o),I){const e=n.makeTensorInfo([],"float32",Er(f,"float32"));v.push(e),m.push(e)}let S;S=x?new gA(b,w,y,k,I):new mA(b,w,y,k,I);const N=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],$=n.runWebGLProgram(S,v,"float32",N);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),$}};class oF{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=G$(n.length);let a="\n    int index;";for(let e=0;e<this.sliceDim;e++)a+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const lF={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],o=g(r.shape),[l,u,c,h]=Bu(r,s),d=nE({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),p=nE({inputs:{x:r},backend:n,attrs:{shape:[g(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=wC(e,t,r.dtype,u,i,c,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,a.values)}const f=new oF(i,h,[u,c],r.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),b=nE({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),b}};class uF{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=G$(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function cF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,l=I(i,s.shape)[0];if(j().get("DEBUG")){const e=n.readSync(a.dataId),t=s.shape[l];for(let n=0;n<e.length;++n){const r=e[n];p(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const u=Ac(s,a,l,o),c=g(a.shape),h=[],d=nE({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=nE({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(f);const m=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(f),t=n.bufferSync(d),r=kC(t,e,m);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const b=new uF(d.shape,m),x=n.runWebGLProgram(b,[d,f],d.dtype);h.push(x);const y=nE({inputs:{x},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const hF={kernelName:ot,backendName:"webgl",kernelFunc:cF},dF=KT({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:IC,dtype:"bool"}),pF={kernelName:ut,backendName:"webgl",kernelFunc:dF},fF=KT({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:SC}),mF={kernelName:ct,backendName:"webgl",kernelFunc:fF},gF={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return UA(r,!0,n)}},bF=jT({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),xF={kernelName:ft,backendName:"webgl",kernelFunc:bF},yF=jT({opSnippet:"return float(isinf(x));",dtype:"bool"}),vF={kernelName:mt,backendName:"webgl",kernelFunc:yF},wF=jT({opSnippet:"return float(isnan(x));",dtype:"bool"}),kF={kernelName:gt,backendName:"webgl",kernelFunc:wF},IF=KT({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:NC,dtype:"bool"}),SF={kernelName:xt,backendName:"webgl",kernelFunc:IF},NF=KT({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:$C,dtype:"bool"}),$F={kernelName:yt,backendName:"webgl",kernelFunc:NF},CF={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=CC(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},TF=jT({opSnippet:qT+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:TC}),EF={kernelName:wt,backendName:"webgl",kernelFunc:TF},RF=jT({opSnippet:qT+"\n  return log(1.0 + x);\n"}),AF={kernelName:kt,backendName:"webgl",kernelFunc:RF},FF=KT({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),_F={kernelName:It,backendName:"webgl",kernelFunc:FF},DF=jT({opSnippet:"return float(!(x >= 1.0));"}),OF={kernelName:St,backendName:"webgl",kernelFunc:DF},MF=KT({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),LF={kernelName:Nt,backendName:"webgl",kernelFunc:MF};class zF{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class PF{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const BF={kernelName:$t,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r,u=j().getBool("WEBGL_PACK_NORMALIZATION")?new PF(s.shape,a,i,o,l):new zF(s.shape,a,i,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class WF{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const UF={kernelName:Ct,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new WF(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function VF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,l=I(a,s.shape);let u=l;const c=Lo(u,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=nT(e,s.shape,s.dtype,c,t);p=n.makeTensorInfo(t,s.dtype),n.texData.get(p.dataId).values=r}else p=uE(s,c,n);u=Po(u.length,o)}Mo("max",u,o);const[f,m]=Do(p.shape,u);let b,x=f;if(i&&(x=Oo(f,l)),d){const e=n.texData.get(p.dataId).values,t=EC(e,g(m),x,s.dtype);b=n.makeTensorInfo(x,s.dtype),n.texData.get(b.dataId).values=t}else b=function(e,t,n,r){const s=g(t),a=nE({inputs:{x:e},attrs:{shape:[g(e.shape)/s,s]},backend:r}),i=iE(a,e.dtype,"max",r),o=nE({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(p,m,x,n);return h&&n.disposeIntermediateTensorInfo(p),b}const GF={kernelName:Tt,backendName:"webgl",kernelFunc:VF},HF=KT({opSnippet:FT+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+DT+"\n  return result;\n",cpuKernelImpl:RC}),qF={kernelName:Et,backendName:"webgl",kernelFunc:HF},jF={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;C$(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;p(Oi(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Ni(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&b(u.inShape,u.outShape))return MT({inputs:{x:s},backend:n});const c=new KE(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},KF={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=$i(s.shape,a,i,[1,1,1],o,u,l),h=new XE(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class XF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,l=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class YF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const JF={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=$i(i.shape,o,l,[1,1,1],u,c),d=new XE(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new YF(h),m=n.runWebGLProgram(f,[s,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}},ZF={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;C$([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=Ni(o.shape,l,u,1,c,h),p=new KE(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new XF(d),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},QF={kernelName:Dt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;p(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];p(Oi(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=Ni(r.shape,s,a,u,i),[h,d]=function(e,t,n,r){let s=new KE(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new KE(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,o,c,l);return[h,d]}},e_={kernelName:Ot,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,i=n,o=r.shape.length,l=I(a,r.shape);let u=l;const c=Lo(u,o),h=null!=c,d=i.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=nT(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=uE(r,c,i);p.push(f),u=Po(u.length,o)}Mo("sum",u,o);const[m,b]=Do(f.shape,u);let x=m;s&&(x=Oo(m,l));const y=function(e,t,n,r){const s=g(t),a=nE({inputs:{x:e},attrs:{shape:[g(e.shape)/s,s]},backend:r}),i=iE(a,"float32","mean",r),o=nE({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(f,b,x,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return y}},t_={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=I(a,s.shape);let u=l;const c=Lo(u,o);let h=s;null!=c&&(h=dE({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Po(u.length,s.shape.length)),Mo("min",u,o);const[d,p]=Do(h.shape,u),f=nE({inputs:{x:h},backend:n,attrs:{shape:[-1,g(p)]}}),m=iE(f,f.dtype,"min",n);let b;return b=nE(i?{inputs:{x:m},backend:n,attrs:{shape:Oo(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}},n_=KT({opSnippet:FT+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+DT+"\n  return result;\n",cpuKernelImpl:AC}),r_={kernelName:Lt,backendName:"webgl",kernelFunc:n_};class s_{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=G$(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class a_{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=G$(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=aT("rc",r),l=aT("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const i_={kernelName:zt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new a_(r.shape,s,a):new s_(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},o_=KT({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+DT+"\n  return result;\n"}),l_={kernelName:Pt,backendName:"webgl",kernelFunc:o_};class u_{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const c_=KT({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),h_={kernelName:qe,backendName:"webgl",kernelFunc:c_},d_="return a - b;",p_=KT({opSnippet:d_,packedOpSnippet:d_,supportsComplex:!0,cpuKernelImpl:QC}),f_={kernelName:Vn,backendName:"webgl",kernelFunc:p_};function m_(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=I([a],s.shape),o=VF({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Oo(o.shape,i),u=nE({inputs:{x:o},backend:n,attrs:{shape:l}}),c=p_({inputs:{a:s,b:u},backend:n}),h=DA({inputs:{x:c},backend:n}),d=cE({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=nE({inputs:{x:d},backend:n,attrs:{shape:l}}),f=c_({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const g_={kernelName:An,backendName:"webgl",kernelFunc:m_},b_={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,l=o?s:m_({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new u_(u,c,a),d=[[i]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},x_=pT+"\n  return -x;\n",y_={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=_C(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=j().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new $T(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new dT(r.shape,x_),n.runWebGLProgram(s,[r],r.dtype)}},v_=Xl,w_={kernelName:Gt,backendName:"webgl",kernelFunc:function(e){ar("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=v_(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},k_=Yl,I_={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){ar("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=k_(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},S_=Jl,N_={kernelName:qt,backendName:"webgl",kernelFunc:function(e){ar("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),d=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=S_(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class $_{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const C_={kernelName:Kt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:l}=r,u=g(s.shape),c=new $_(u,i,o,l),h=nE({inputs:{x:s},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],a);n.disposeIntermediateTensorInfo(h);const p=nE({inputs:{x:d},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(d),p}};function T_(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=gR({inputs:{input:r},backend:n}),t=T_({inputs:{x:e},backend:n}),s=AR({inputs:{input:r},backend:n}),a=T_({inputs:{x:s},backend:n}),i=zT({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return HA({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const E_={kernelName:Qn,backendName:"webgl",kernelFunc:T_},R_={kernelName:jt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=gR({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=AR({inputs:{input:s},backend:r}),i=T_({inputs:{x:a},backend:r}),o=zT({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return HA({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},A_={kernelName:Xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return MA({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{f(a,e.shape,"All tensors passed to stack must have matching shapes"),p(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=DR({inputs:t.map((e=>{const t=MA({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class F_{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=G$(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class __{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=G$(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=aT("rc",r),l=aT("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const D_=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;if(0===g(s.shape)){const e=a.map(((e,t)=>e[0]+s.shape[t]+e[1]));return HA({backend:n,attrs:{shape:e,value:i,dtype:s.dtype}})}const o=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new __(s.shape,a,i):new F_(s.shape,a,i),l=[[i]];return n.runWebGLProgram(o,[s],s.dtype,l)},O_={kernelName:Yt,backendName:"webgl",kernelFunc:D_},M_=KT({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+DT+"\n  return result;\n"}),L_={kernelName:Jt,backendName:"webgl",kernelFunc:M_},z_={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=[],u=I(a,s.shape);let c=u;const h=Lo(c,o);let d,p=s;if(null!=h&&(p=dE({inputs:{x:s},backend:n,attrs:{perm:h}}),c=Po(c.length,o),l.push(p)),Mo("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=OC(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=Do(p.shape,c),r=g(t),a=nE({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=iE(a,os(s.dtype),"prod",n);d=nE({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(d);const e=Oo(d.shape,u);d=nE({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},P_={kernelName:en,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,l=s.map((e=>n.readSync(e.dataId))),u=s.map((e=>e.shape)),c=n.readSync(a.dataId),h=n.readSync(i.dataId),[d,p,f]=MC(l,u,c,a.shape,a.dtype,h,i.shape,o),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,p);return m.concat([g])}},B_={kernelName:tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=LC(i,r.shape,r.dtype,o,s.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}},W_={kernelName:nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),h=n.readSync(i.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,m]=zC(u,s.shape,c,a.shape,a.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(f,a.dtype,m)}},U_=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=PC(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},V_={kernelName:rn,backendName:"webgl",kernelFunc:U_},G_=jT({opSnippet:"return 1.0 / x;"}),H_={kernelName:an,backendName:"webgl",kernelFunc:G_},q_=jT({opSnippet:pT+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),j_={kernelName:on,backendName:"webgl",kernelFunc:q_},K_=jT({opSnippet:pT+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),X_={kernelName:pn,backendName:"webgl",kernelFunc:K_};class Y_{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class J_{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const Z_={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=j().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new J_(s.shape,l,u,a,i):new Y_(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],"float32")}};class Q_{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const eD={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new Q_(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class tD{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class nD{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const rD={kernelName:un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=j().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new nD(s.shape,l,u,a,i):new tD(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class sD{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const aD={kernelName:cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new sD(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class iD{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=G$(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class oD{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=aT("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=G$(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const lD={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=s.shape.length,o=I(a,s.shape);if(0===i)return MT({inputs:{x:s},backend:n});const l=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new oD(s.shape,o):new iD(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}};class uD{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const cD={kernelName:tr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=new uD(r.shape,a),[u,c]=Du(i,r.shape[1],r.shape[2]),h=[[u,c,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},hD=jT({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),dD={kernelName:mn,backendName:"webgl",kernelFunc:hD},pD=jT({opSnippet:"return inversesqrt(x);",cpuKernelImpl:BC}),fD={kernelName:gn,backendName:"webgl",kernelFunc:pD};class mD{constructor(e,t,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=G$(s.length),l=G$(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const gD={kernelName:bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Vu(0,s,i),d=[h/u,u];if(0===h)return n.makeTensorInfo(i,s.dtype);const p=nE({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=nE({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new mD(l,o,p.shape.length,f.shape.length,c,d),b=n.runWebGLProgram(g,[f,p,m],f.dtype),x=nE({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),x}};class bD{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===j().getNumber("WEBGL_VERSION")?"while (left < right) {":s,i="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const xD={kernelName:xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=new bD(s.shape[0],s.shape[1],a.shape[1],i),l=[[s.shape[1]]];return n.runWebGLProgram(o,[s,a],"int32",l)}};class yD{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=G$(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const vD={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new yD(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],is(s.dtype,a.dtype))}},wD=jT({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Gu};\n  float scale = ${Hu};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),kD={kernelName:vn,backendName:"webgl",kernelFunc:wD},ID=jT({opSnippet:qT+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:UC}),SD={kernelName:Nn,backendName:"webgl",kernelFunc:ID},ND=jT({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),$D={kernelName:Sn,backendName:"webgl",kernelFunc:ND},CD=jT({opSnippet:qT+"\n  return sin(x);\n"}),TD={kernelName:kn,backendName:"webgl",kernelFunc:CD},ED=jT({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),RD={kernelName:In,backendName:"webgl",kernelFunc:ED},AD=jT({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),FD={kernelName:$n,backendName:"webgl",kernelFunc:AD},_D={kernelName:En,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;p(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=[],c=D_({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=Ou(c.shape,a,o,!1),d=Mu(h.length,a.length,!1),f=Lu(c.shape,a,o,!1),m=nE({inputs:{x:c},backend:n,attrs:{shape:h}}),g=dE({inputs:{x:m},backend:n,attrs:{perm:d}}),b=nE({inputs:{x:g},backend:n,attrs:{shape:f}});return u.push(c),u.push(m),u.push(g),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},DD={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,m]=HC(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},OD={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=qC(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},MD={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=jC(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},LD={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=jC(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},zD={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Vu(0,s,o);if("string"===a.dtype){const e=n.bufferSync(s),t=n.bufferSync(a),r=_r(n.readSync(i.dataId)[0]),p=WC(e,t,o,d,c,u,l,h,r,!1);return n.makeTensorInfo(o,p.dtype,p.values)}const p=new mD(u,l,s.shape.length,a.shape.length,h,[d,1],!1),f=n.runWebGLProgram(p,[a,s,i],a.dtype),m=nE({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}},PD={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=I(i,s.shape)[0],l=gc(s,a,o),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const r=uR({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},BD="return sqrt(x);",WD=jT({opSnippet:BD,packedOpSnippet:BD,cpuKernelImpl:KC}),UD={kernelName:Cn,backendName:"webgl",kernelFunc:WD},VD={kernelName:zn,backendName:"webgl",kernelFunc:jT({opSnippet:"return x * x;"})},GD="return (a - b) * (a - b);",HD=KT({opSnippet:GD,packedOpSnippet:GD}),qD={kernelName:Ln,backendName:"webgl",kernelFunc:HD},jD={kernelName:er,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=pT+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new dT(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class KD{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=G$(n.length),a=G$(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const XD={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:x,begin:y,end:v,strides:w}=yi(s.shape,a,i,o,l,u,c,h,d);let k;if(g)k=nE({inputs:{x:s},backend:n,attrs:{shape:m}});else if(b||x){p(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=ii(y,v,w),t=uR({inputs:{x:s},backend:n,attrs:{begin:y,size:e}});k=nE({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=ha(s.shape,s.dtype,e),r=XC(f,t,w,y);k=n.makeTensorInfo(m,s.dtype,r.values)}else{const e=new KD(y,w,f);k=n.runWebGLProgram(e,[s],s.dtype)}const I=nE({inputs:{x:k},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(k),I}},YD={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=YC(d,p,s,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},JD={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),l=n.readSync(i.dataId)[0],[u,c,h]=JC(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},ZD={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=ZC(i,s);return n.makeTensorInfo(a.shape,"int32",o)}},QD=jT({opSnippet:"return tan(x);"}),eO={kernelName:Gn,backendName:"webgl",kernelFunc:QD},tO=jT({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),nO={kernelName:Hn,backendName:"webgl",kernelFunc:tO};class rO{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=G$(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function sO(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>_r(e))):e,r=ha(s.shape,s.dtype,t),i=eT(r,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new rO(s.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}const aO={kernelName:qn,backendName:"webgl",kernelFunc:sO};class iO{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class oO{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function lO(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function uO(e){let t=1;for(;t<e;)t*=2;return t}const cO={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=j().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=j().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=s.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([s])||c<o||a>l){const e=n.readSync(s.dataId),[t,r]=tT(e,u,s.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return u[u.length-1]=0,[n.makeTensorInfo(u,s.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[s,HA({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(s):s,f=g(u)/c,m=nE({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&lO(n,p);const b=uO(a),x=uO(c);let y=null;const v=()=>null===y?[m,m]:[m,y],w=(e,t,r)=>{const s=v(),a=new iO(r),i=[[c],[null===y?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=y;y=n.runWebGLProgram(a,s,"int32",i),lO(n,o)};for(let e=1;e<b;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[f,x])}for(let e=x;e>b;e/=2){const t=v(),r=new oO([f,e/2]),s=[[c],[null===y?1:0],[b]],a=y;y=n.runWebGLProgram(r,t,"int32",s),lO(n,a);const i=b/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,y.shape)}let k=y;y=uR({inputs:{x:y},backend:n,attrs:{begin:0,size:[f,a]}}),lO(n,k);let I=cF({inputs:{x:m,indices:y},backend:n,attrs:{axis:1,batchDims:1}});lO(n,m);const S=u.slice(0,-1);S.push(a),k=y,y=nE({inputs:{x:y},attrs:{shape:S},backend:n}),lO(n,k);const N=I;return I=nE({inputs:{x:I},attrs:{shape:S},backend:n}),lO(n,N),[I,y]}};class hO{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const dO={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,d,p]=s.shape,[f,m]=null!=u?u:[h,d],g=new hO(h,d,i,o,l,[c,f,m,p]);return n.runWebGLProgram(g,[s,a],"float32")}},pO={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;C$(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=rT(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},fO={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,l=s.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){d[a]=e;const t=uR({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),r=nE({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class mO{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const gO=[gE,xE,vE,kE,NE,TE,EE,RE,ME,LE,PE,WE,VE,HE,jE,YE,JE,eR,tR,nR,aR,hR,dR,pR,xR,wR,SR,PT,CR,OR,VR,KR,XR,YR,JR,ZR,eA,nA,sA,cA,hA,dA,fA,bA,vA,wA,IA,NA,$A,TA,EA,AA,_A,OA,LA,BA,VA,qA,KA,JA,QA,nF,aF,iF,lF,hF,pF,mF,LT,gF,FR,xF,vF,kF,UT,SF,$F,CF,EF,AF,_F,OF,LF,BF,UF,GF,qF,jF,KF,JF,ZF,QF,e_,t_,r_,i_,l_,b_,tE,y_,w_,I_,N_,mR,C_,R_,A_,O_,L_,HT,z_,P_,B_,W_,V_,bR,h_,H_,j_,X_,rE,Z_,eD,rD,aD,lD,cD,dD,fD,gD,xD,vD,kD,SD,$D,TD,RD,cR,g_,FD,_D,DD,OD,MD,LD,zD,PD,UD,VD,qD,jD,XD,YD,JD,ZD,f_,hE,eO,nO,aO,cO,dO,pE,pO,fO,{kernelName:Zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,l=[];let u=0;const c=Lo([u],o);let h=s;null!=c&&(h=dE({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(h),u=Po(1,o)[0]);const d=Rc(h.shape,u,i),p=g([h.shape[u]]),f=nE({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=os(s.dtype),b=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],u=Ec(o,a),c=new mO({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(l.push(h),h.shape[1]===a)return h;const d=U_({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=sO({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),b(h,t,p,s,a)},x=nE({inputs:{x:b(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:d}});let y=x;if(null!=c){l.push(x);const e=zo(c);y=dE({inputs:{x:y},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},E_];for(const e of gO)dr(e);var bO=n(162),xO=n(285);let yO={trapezoid(e,t,n,r=1){if(n==1/0){let s=1;for(;;){let n=e(t+s*r);if(0==n||n==1/0)break;s*=2}n=s*r+t}let s=(n-t)/r|0,a=0,i=e(t+0*r);for(let n=1;n<s;n++){let s=e(t+(n+1)*r),o=r*(i+s)/2;if(a+=o,i=s,o==1/0||o==-1/0)break}return a}},vO={norm:(e,t)=>({mean:()=>e,std:()=>t,cdf:n=>bO.normal.cdf(n,e,t),pdf:n=>bO.normal.pdf(n,e,t),ppf:n=>bO.normal.inv(n,e,t),expect(e,t,n){return yO.trapezoid((t=>e(t)*this.pdf(t)),t,n,.001)}}),ks_2samp(e,t){let{d:n,p:r}=new xO.yR.kolmogorovSmirnov(new xO.OW(e),new xO.OW(t));return[n,r]}},wO=(...e)=>console.log(...e),kO=(e,t,n)=>el(e,t,n).dataSync(),IO=(e,t=0)=>{let n,r=[];e.length>1&&(n=e.slice(1),console.log(n));for(let s=0;s<e[0];s++)r.push(null!=n?IO(n,t):t);return r},SO=e=>Array.from(e).reduce(((e,t)=>e+t),0),NO={uniform:(e=0,t=1,n)=>null!=n?Qo(n,e,t).dataSync():Qo([1],e,t).dataSync()[0],randint:(e,t)=>Math.round(NO.uniform(e,t)),normal:(e,t,n)=>null!=n?Zo(n,e,t).dataSync():Zo([1],e,t).dataSync()[0],choice(e,t,n=!0,r){if("number"==typeof e&&(e=kO(0,e)),null==r){let t=1/e.length;r=new Array(e.length).fill(t)}let s=[r[0]];s[e.length-1]=1;for(let t=1;t<e.length-1;t++)s[t]=s[t-1]+r[t];let a=NO.uniform();for(let e=0;e<s.length-1;e++)if(a<s[e])return e;return e.length-1}};class $O{constructor(e){this.ACTION_NUMBER=e}choose_action1(e,t,n,r,s,a,i){let o,l,u,c,h;return 1==this.ACTION_NUMBER?(o=0,l=t.at(e).map(((e,t)=>[e,t])).slice(),NO.uniform()>1-n?u=NO.choice(l.map((([e,t])=>t))):(u=NO.choice(l.filter((([e,t])=>Number.isFinite(e)&&e==Math.max(l))).map((([e,t])=>t))),o=1),[u,o]):2==this.ACTION_NUMBER?(o=0,c=max(0,s-e+i),h=0,c==h?u=0:(l=t.at(e).map(((e,t)=>[e,t])).slice(h,c),NO.uniform()>1-n?u=NO.choice(l.map((([e,t])=>t))):(u=NO.choice(l.filter((([e,t])=>Number.isFinite(e)&&e==Math.max(l))).map((([e,t])=>t))),o=1)),[u,o]):3==this.ACTION_NUMBER?(o=0,c=Math.max(0,r-e+i),h=0,c==h?u=0:(l=t.at(e).map(((e,t)=>[e,t])).slice(h,c),NO.uniform()>1-n?u=NO.choice(l.map((([e,t])=>t))):(u=NO.choice(l.filter((([e,t])=>Number.isFinite(e)&&e==Math.max(l))).map((([e,t])=>t))),o=1)),[u,o]):void 0}choose_action2(e,t,n,r,s,a,i){let o,l,u,c,h;return 1==this.ACTION_NUMBER?(o=0,l=t.at(e).map(((e,t)=>[e,t])).slice(),NO.uniform()>1-n?u=NO.choice(l.map((([e,t])=>t))):(u=NO.choice(l.filter((([e,t])=>Number.isFinite(e)&&e==Math.max(l))).map((([e,t])=>t))),o=1),[u,o]):2==this.ACTION_NUMBER?(o=0,c=Math.max(0,a-e+i),h=0,c==h?u=0:(l=t.at(e).map(((e,t)=>[e,t])).slice(h,c),NO.uniform()>1-n?u=NO.choice(l.map((([e,t])=>t))):(u=NO.choice(l.filter((([e,t])=>Number.isFinite(e)&&e==Math.max(l))).map((([e,t])=>t))),o=1)),[u,o]):3==this.ACTION_NUMBER?(o=0,c=Math.max(0,r-e+i),h=0,c==h?u=0:(l=t.at(e).map(((e,t)=>[e,t])).slice(h,c),NO.uniform()>1-n?u=NO.choice(l.map((([e,t])=>t))):(u=NO.choice(l.filter((([e,t])=>Number.isFinite(e)&&e==Math.max(l))).map((([e,t])=>t))),o=1)),[u,o]):void 0}}class CO{constructor(e,t,n,r){this.l=e,this.h=t,this.b=n,this.X=r,this.theta=this.X.mean(),this.sigma=this.X.std(),this.G=this.X.cdf}S(e){return this.G(e)}B(e){return this.X.expect((t=>t-e-1),e+1,1/0)}I(e){return e+1-this.theta+this.B(e)}Y(e){return this.h*this.I(e)+this.b*this.B(e)}rstar(){return this.X.ppf(this.b/(this.b+this.h))}meetServiceLevel(e){return this.X.ppf(e)}}class TO{constructor(e,t,n,r,s){this.MEAN=e,this.VAR=t,this.l=n,this.h=r,this.b=s}reorder_level(){let e=this.MEAN*this.l,t=Math.sqrt(this.VAR*this.l),n=vO.norm(e,t),r=new CO(this.l,this.h,this.b,n),s=Math.round(r.rstar())-1;return[r,s]}getBasestock(){let[e,t]=this.reorder_level();return wO("-----------------------------Base stock policy-----------------------------"),wO("Service level: ",e.S(t)),wO("Expected backlog: ",e.B(t)),wO("Expected on-hand inventory: ",e.I(t)),wO("Expected cost: ",e.Y(t)),wO("Optimal reorder level r*: ",e.rstar()),wO("Minimal reorder level for a fillrate of 0.9: ",e.meetServiceLevel(.9)),t}}function EO(e,t,n){let r=t[0];for(null!=e[0]?.index&&(r+=30),r>=e.length&&(r-=e.length);r<0;)r+=e.length;if(1!=t.length)EO(e[r],t.slice(1),n);else{if(null==r)throw"setitem";e[r]=n}}function RO(e,t){let n=t[0];for(null!=e[0]?.index&&(n+=30),n>=e.length&&(n-=e.length);n<0;)n+=e.length;if(1==t.length){if(null==n)throw"getitem";return e[n]}if(null==e[n])throw"";return RO(e[n],t.slice(1))}class AO{constructor(e,t,n,r,s,a,i,o,l,u,c,h,d,p,f){this.MEAN1=e,this.VAR1=t,this.MEAN2=n,this.VAR2=r,this.LEAD_TIME=s,this.HOLDING_COST=a,this.BACKLOG_COST=i,this.EPSILON=o,this.ALPHA=l,this.GAMMA=u,this.N_STATES=c,this.ACTIONS=kO(0,h),this.SIMULATION_TIME=d,this.MAX_EPISODES=1092,this.ACTION_NUMBER=p,this.upperlimit_constant=f}search_then_converge(e,t){let n,r,s;return n=1*10**10,r=t**2/(1e10+t),s=e/(1+r),s}search_then_converge2(e,t){let n,r,s;return n=1*10**10,r=t**2/(1e10+t),s=e/(1+r),s}build_q_table(e,t){return function(e,t,n){let r={};for(let[e,n]of t.entries())e!=n&&Object.assign(r,{get[n](){return this[e]},set[n](t){this[e]=t}});let s=[];for(let t=0;t<e.length;t++)s[t]=Object.assign(e[t].slice(),r,{index:n[t]});return s}(IO([e,t.length],-100),t,kO(-30,this.N_STATES-30|0))}simulation(e,t,n,r,s){let a,i,o,l,u,c,h,d,p,f;return a=r<=182||365<=r&&r<=547||730<=r<=911?Math.max(Math.round(NO.normal(this.MEAN1,Math.sqrt(this.VAR1))),0):Math.max(Math.round(NO.normal(this.MEAN2,Math.sqrt(this.VAR2))),0),i=-this.HOLDING_COST,o=-this.BACKLOG_COST,l=0,u=0,c=0,h=s,r>=this.LEAD_TIME-1?e+RO(n,[-this.LEAD_TIME])-h>=a?(p=e+n.at(-this.LEAD_TIME)-a-h,c=p,l=i*p,d=0):(d=h-n.at(-this.LEAD_TIME)+a-e,c=-d,u=o*d,p=0):r<this.LEAD_TIME-1&&(e>=a?(p=e-a,l=i*p,c=p,d=0):(d=h+a,c=-d,u=o*d,p=0)),f=Math.min(Math.max(p-d+SO(n.slice(-(this.LEAD_TIME-1))),-30),this.N_STATES-30-1|0),[p,f,c,l+u,d,a,l,u]}getSafetyStock(e){let t,n,r;return s=e,t=bO.stdev(s),n=1.28*t*Math.sqrt(this.LEAD_TIME),r=(e=>bO.mean(e))(e)*this.LEAD_TIME+n,r;var s}*rliter(e){let t,n,r,s,a,i,o,l,u,c,h,d,p,f,m,g,b;t=this.build_q_table(this.N_STATES,this.ACTIONS),n=this.build_q_table(this.N_STATES,this.ACTIONS),r=0,s=[],a=[],i=[],o=this.EPSILON,l=this.ALPHA,u=this.GAMMA,c=0,h=0,d=new $O(this.ACTION_NUMBER),p=new TO(this.MEAN1,this.VAR1,this.LEAD_TIME,this.HOLDING_COST,this.BACKLOG_COST).getBasestock(),f=new TO(this.MEAN2,this.VAR2,this.LEAD_TIME,this.HOLDING_COST,this.BACKLOG_COST).getBasestock();for(let r=0;r<this.SIMULATION_TIME;r++){let h,x,y,v,w,k,I,S,N,$,C,T,E,R,A,F,_,D,O,M,L,z,P,B,W,U;console.log(`iteration ${r+1}/${this.SIMULATION_TIME}`),h=[],x=NO.randint(0,this.N_STATES-30),y=NO.randint(0,this.N_STATES-30),v=NO.randint(0,this.N_STATES-30),h.push(x),w=[],w.push(y),k=[],k.push(v),I=[],I.push(0),$=[],$.push(-x),S=[],S.push(0),N=[],N.push(0),C=[],T=[],E=[],C.push(0),T.push(0),E.push(0),R=[],R.push(0),A=0,g=[],g.push(this.MEAN1),F=0,m=0,_=0,D=0,o=this.search_then_converge(o,r),l=this.search_then_converge2(l,r),O=0,M=0,L=0,z=[],P=[],B=0,W=[],U=[];for(let r=0;r<this.MAX_EPISODES;r++){let i,b,x,y,v,F,V,G;if([i,b,_,A,M,F,V,G]=this.simulation(h[r],A,g,r,S[r]),D=SO(g.slice(-(this.LEAD_TIME-1))),r<=182||365<=r&&r<=547||730<=r&&r<=911?(z.push(F),B=this.getSafetyStock(z),[x,c]=d.choose_action1(b,t,o,B,p,f,this.upperlimit_constant),r<=this.LEAD_TIME-1?(m+=A,E.push(0),C.push(0),T.push(0)):r<=182-this.LEAD_TIME||365<=r&&r<=547-this.LEAD_TIME||730<=r&&r<=911-this.LEAD_TIME?(y=RO(t,[RO(w,[-this.LEAD_TIME]),RO(g,[-this.LEAD_TIME])]),m+=A,v=A+u*Math.max(...RO(t,[RO(w,[-(this.LEAD_TIME-1)])])),EO(t,[RO(w,[-this.LEAD_TIME]),RO(g,[-this.LEAD_TIME])],RO(t,[RO(w,[-this.LEAD_TIME]),RO(g,[-this.LEAD_TIME])])+l*(v-y)),L=RO(t,[RO(w,[-this.LEAD_TIME]),RO(g,[-this.LEAD_TIME])]),E.push(L),C.push(y),T.push(v)):(E.push(0),C.push(0),T.push(0),m+=A)):(P.push(F),B=this.getSafetyStock(P),[x,c]=d.choose_action2(b,n,o,B,p,f,this.upperlimit_constant),r<=this.LEAD_TIME-1?(E.push(0),C.push(0),T.push(0),m+=A):r<=365-this.LEAD_TIME||r<=730-this.LEAD_TIME||r<=1095-this.LEAD_TIME?(y=RO(n,[RO(w,[-this.LEAD_TIME]),RO(g,[-this.LEAD_TIME])]),m+=A,v=A+u*Math.max(...RO(n,[RO(w,[-(this.LEAD_TIME-1)])])),EO(n,[RO(w,[-this.LEAD_TIME]),RO(g,[-this.LEAD_TIME])],RO(n,[RO(w,[-this.LEAD_TIME]),RO(g,[-this.LEAD_TIME])])+l*(v-y)),L=RO(n,[RO(w,[-this.LEAD_TIME]),RO(g,[-this.LEAD_TIME])]),E.push(L),C.push(y),T.push(v)):r>this.MAX_EPISODES-this.LEAD_TIME&&(m+=A,E.push(0),C.push(0),T.push(0))),O+=1,R.push(O),g.push(x),h.push(i),w.push(b),S.push(M),$.push(A),N.push(F),k.push(_),I.push(D),W.push(G),U.push(V),e){let e=[t,n,s,a,w,g,h,N,$,W,U];yield e}}if(r==this.SIMULATION_TIME-1&&(wO("-----------------------------result of the last episode-----------------------------"),wO("Rcount",m),b=h,i=w),s.push(m/this.MAX_EPISODES),a.push(r),!e){let e=[t,n,s,a,w,g,h,N,$,W,U];yield e}}}rl(e=!1){let t,n,r,s,a,i,o,l;for(let u of this.rliter(e))[t,n,r,s,a,i,o,l]=u;return[t,n,r,s,a,i,o,l]}}})(),lib=r})();